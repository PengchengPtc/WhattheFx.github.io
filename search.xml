<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>TypeORM基础篇</title>
      <link href="/2023/09/13/typeorm-ji-chu-pian/"/>
      <url>/2023/09/13/typeorm-ji-chu-pian/</url>
      
        <content type="html"><![CDATA[<h1 id="typeOrm"><a href="#typeOrm" class="headerlink" title="typeOrm"></a>typeOrm</h1><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h2><pre class="line-numbers language-bash"><code class="language-bash">yarn global add typeorm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-初始化"><a href="#2-初始化" class="headerlink" title="2.初始化"></a>2.初始化</h2><pre class="line-numbers language-bash"><code class="language-bash">typeorm init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-目录结构"><a href="#3-目录结构" class="headerlink" title="3.目录结构"></a>3.目录结构</h2><p><img src="https://whatthfx11.oss-cn-beijing.aliyuncs.com/blog/image_480.png"></p><h2 id="4-创建实体"><a href="#4-创建实体" class="headerlink" title="4.创建实体"></a>4.创建实体</h2><blockquote><p>一个实体就是数据库的一个表格</p></blockquote><h3 id="1-User实体"><a href="#1-User实体" class="headerlink" title="1.User实体"></a>1.User实体</h3><p>​    User.ts:</p><pre class="line-numbers language-ts"><code class="language-ts"><span class="token keyword">import</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> type <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">from</span> <span class="token string">"os"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> Entity<span class="token punctuation">,</span> OneToMany <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">from</span> <span class="token string">"typeorm"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> Column <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">from</span> <span class="token string">"typeorm/decorator/columns/Column"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> PrimaryGeneratedColumn <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">from</span> <span class="token string">"typeorm/decorator/columns/PrimaryGeneratedColumn"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> Comment <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">from</span> <span class="token string">"./Comment"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// Entity标记usr类是一个实体</span>@<span class="token function">Entity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    @<span class="token function">PrimaryGeneratedColumn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 主键且自增</span>    id<span class="token punctuation">:</span> <span class="token keyword">number</span><span class="token punctuation">;</span>    @<span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 普通属性</span>    nick<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">;</span>    @<span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    salary<span class="token punctuation">:</span> <span class="token keyword">number</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 一个用户对应多个评论，反向的话，要定义多个类型</span>    @<span class="token function">OneToMany</span><span class="token punctuation">(</span>type <span class="token operator">=</span><span class="token operator">></span> Comment<span class="token punctuation">,</span> comment <span class="token operator">=</span><span class="token operator">></span> comment<span class="token punctuation">.</span>user<span class="token punctuation">)</span>    comments<span class="token punctuation">:</span> Comment<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-Comment实体"><a href="#2-Comment实体" class="headerlink" title="2.Comment实体"></a>2.Comment实体</h3><p>​    Comment.ts:</p><pre class="line-numbers language-ts"><code class="language-ts"><span class="token keyword">import</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> type <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">from</span> <span class="token string">"os"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> Column<span class="token punctuation">,</span> Entity<span class="token punctuation">,</span> JoinColumn<span class="token punctuation">,</span> ManyToOne<span class="token punctuation">,</span> PrimaryGeneratedColumn <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">from</span> <span class="token string">"typeorm"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> User <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">from</span> <span class="token string">"./User"</span><span class="token punctuation">;</span>@<span class="token function">Entity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Comment</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    @<span class="token function">PrimaryGeneratedColumn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    id<span class="token punctuation">:</span><span class="token keyword">number</span><span class="token punctuation">;</span>    @<span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    content<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">;</span>    @<span class="token function">ManyToOne</span><span class="token punctuation">(</span>type <span class="token operator">=</span><span class="token operator">></span> User<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 多条评论对应一个用户</span>    @<span class="token function">JoinColumn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">// 连接字段，而非普通字段   </span>    user<span class="token punctuation">:</span>User<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-连接数据库"><a href="#5-连接数据库" class="headerlink" title="5.连接数据库"></a>5.连接数据库</h2><p>​    index.ts</p><pre class="line-numbers language-ts"><code class="language-ts"><span class="token keyword">import</span> <span class="token string">'reflect-metadata'</span><span class="token keyword">import</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> createConnection<span class="token punctuation">,</span> Like<span class="token punctuation">,</span> MoreThanOrEqual <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">from</span> <span class="token string">'typeorm'</span><span class="token keyword">import</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> User <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">from</span> <span class="token string">'./entity/User'</span><span class="token keyword">import</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>Comment<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token keyword">from</span> <span class="token string">'./entity/Comment'</span><span class="token keyword">import</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> log <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">from</span> <span class="token string">'console'</span><span class="token comment" spellcheck="true">// createConnection对象返回一个promise</span><span class="token function">createConnection</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    type<span class="token punctuation">:</span> <span class="token string">'mysql'</span><span class="token punctuation">,</span>    host<span class="token punctuation">:</span> <span class="token string">'localhost'</span><span class="token punctuation">,</span>    port<span class="token punctuation">:</span> <span class="token number">3306</span><span class="token punctuation">,</span>    username<span class="token punctuation">:</span> <span class="token string">'root'</span><span class="token punctuation">,</span>    password<span class="token punctuation">:</span> <span class="token string">'123456'</span><span class="token punctuation">,</span>    database<span class="token punctuation">:</span> <span class="token string">'gzptcxqd'</span><span class="token punctuation">,</span>    entities<span class="token punctuation">:</span> <span class="token punctuation">[</span>        __dirname <span class="token operator">+</span> <span class="token string">'/entity/*.ts'</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    synchronize<span class="token punctuation">:</span> <span class="token keyword">true</span> <span class="token comment" spellcheck="true">// 同步，开发环境可以用</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>async <span class="token punctuation">(</span>connection<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> UserRepository <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">getRepository</span><span class="token punctuation">(</span>User<span class="token punctuation">)</span>    <span class="token keyword">const</span> commentRespository <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">getRepository</span><span class="token punctuation">(</span>Comment<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 取到用户和用户发表的所有评论</span>    <span class="token keyword">const</span> users <span class="token operator">=</span> await UserRepository<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        relations<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'comments'</span><span class="token punctuation">]</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-增删改查操作"><a href="#6-增删改查操作" class="headerlink" title="6.增删改查操作"></a>6.增删改查操作</h2><pre class="line-numbers language-ts"><code class="language-ts">    <span class="token comment" spellcheck="true">// 增</span>    <span class="token comment" spellcheck="true">// const User1 = new User()</span>    <span class="token comment" spellcheck="true">// User1.nick = '柯南'</span>    <span class="token comment" spellcheck="true">// User1.salary = 50000</span>    <span class="token comment" spellcheck="true">// await UserRepository.save(User1)</span>    <span class="token comment" spellcheck="true">// 查，()内加筛选条件，接空就是查询所有</span>    <span class="token comment" spellcheck="true">// const users = await UserRepository.find()</span>    <span class="token comment" spellcheck="true">// console.log(users)</span>    <span class="token comment" spellcheck="true">// 查，要求同时满足</span>    <span class="token comment" spellcheck="true">// const users = await UserRepository.find(&amp;#123;</span>    <span class="token comment" spellcheck="true">//     where: &amp;#123;</span>    <span class="token comment" spellcheck="true">//         salary: MoreThanOrEqual(50000),</span>    <span class="token comment" spellcheck="true">//         nick: '小红',</span>    <span class="token comment" spellcheck="true">//       &amp;#125;,</span>    <span class="token comment" spellcheck="true">// &amp;#125;)</span>    <span class="token comment" spellcheck="true">// console.log(users);</span>        <span class="token comment" spellcheck="true">// 查，要求满足一个就会被选出来</span>    <span class="token comment" spellcheck="true">// const users = await UserRepository.find(&amp;#123;</span>    <span class="token comment" spellcheck="true">//     where: [</span>    <span class="token comment" spellcheck="true">//         &amp;#123;</span>    <span class="token comment" spellcheck="true">//             salary:MoreThanOrEqual(50000)</span>    <span class="token comment" spellcheck="true">//         &amp;#125;,</span>    <span class="token comment" spellcheck="true">//         &amp;#123;</span>    <span class="token comment" spellcheck="true">//             nick:'张三'</span>    <span class="token comment" spellcheck="true">//         &amp;#125;,</span>    <span class="token comment" spellcheck="true">//         &amp;#123;</span>    <span class="token comment" spellcheck="true">//             nick:'小红啊'</span>    <span class="token comment" spellcheck="true">//         &amp;#125;</span>    <span class="token comment" spellcheck="true">//     ]</span>    <span class="token comment" spellcheck="true">// &amp;#125;)</span>    <span class="token comment" spellcheck="true">// console.log(users);</span>    <span class="token comment" spellcheck="true">// 模糊搜索</span>    <span class="token comment" spellcheck="true">// const users = await UserRepository.find(&amp;#123;</span>    <span class="token comment" spellcheck="true">//     // 小%是小后模糊搜索，就是第一个字为小</span>    <span class="token comment" spellcheck="true">//     // %小%是前后模糊搜索，就是只要包含小就ok</span>    <span class="token comment" spellcheck="true">//     where: &amp;#123;</span>    <span class="token comment" spellcheck="true">//         nick: Like('%小%'),</span>    <span class="token comment" spellcheck="true">//     &amp;#125;,</span>    <span class="token comment" spellcheck="true">//     skip:0, // 跳过0，就是第一页，take就是两个，两个属性的作用就是第一页的3个用户</span>    <span class="token comment" spellcheck="true">//     // 倒序排列，就是从大到小排</span>    <span class="token comment" spellcheck="true">//     order: &amp;#123;</span>    <span class="token comment" spellcheck="true">//         salary:'DESC',</span>    <span class="token comment" spellcheck="true">//         id:'ASC' // 如果薪水一样的话，就从id从小到大排</span>    <span class="token comment" spellcheck="true">//     &amp;#125;,</span>    <span class="token comment" spellcheck="true">//     take:3</span>    <span class="token comment" spellcheck="true">// &amp;#125;)</span>    <span class="token comment" spellcheck="true">// console.log(users);</span>    <span class="token comment" spellcheck="true">// 找一个</span>    <span class="token comment" spellcheck="true">// const user = await UserRepository.findOne(&amp;#123; where: &amp;#123; id: 3 &amp;#125; &amp;#125;);</span>    <span class="token comment" spellcheck="true">// 找一个并且修改</span>    <span class="token comment" spellcheck="true">// const user = await UserRepository.findOne(&amp;#123; where: &amp;#123; nick:'小明' &amp;#125; &amp;#125;);</span>    <span class="token comment" spellcheck="true">// user.salary = 9999</span>    <span class="token comment" spellcheck="true">// await UserRepository.save(user)</span>    <span class="token comment" spellcheck="true">// 找到一个并删除</span>    <span class="token comment" spellcheck="true">// const user = await UserRepository.findOne(&amp;#123; where: &amp;#123; nick:'张三' &amp;#125; &amp;#125;);</span>    <span class="token comment" spellcheck="true">// await UserRepository.remove(user)</span>        <span class="token comment" spellcheck="true">// 取所有评论</span>    <span class="token comment" spellcheck="true">// const comments = await commentRespository.find()</span>    <span class="token comment" spellcheck="true">// console.log(comments);</span>        <span class="token comment" spellcheck="true">// 取到评论的用户，就可以把对应的用户的信息取出来</span>    <span class="token comment" spellcheck="true">// const comments = await commentRespository.find(&amp;#123;</span>    <span class="token comment" spellcheck="true">//     relations:['user']</span>    <span class="token comment" spellcheck="true">// &amp;#125;)</span>    <span class="token comment" spellcheck="true">// console.log(comments);</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-启动项目"><a href="#7-启动项目" class="headerlink" title="7.启动项目"></a>7.启动项目</h2><pre class="line-numbers language-bash"><code class="language-bash">yarn start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="8-数据库表"><a href="#8-数据库表" class="headerlink" title="8.数据库表"></a>8.数据库表</h2><p><img src="https://whatthfx11.oss-cn-beijing.aliyuncs.com/blog/13d2cdaa562ca88117905d93c8f98e4_480.png"></p><p><img src="https://whatthfx11.oss-cn-beijing.aliyuncs.com/blog/fa62c308cad39a12474052714bf2781_720.png?Expires=1694593495&OSSAccessKeyId=TMP.3KeVMZtAS3uhN5nxbFsoNCbG8xRYNNCrXVRChJXGr8mSMMrMzmmvUavK1MqHpSBkg5Fppz9GwbGabVq6Sqk1AtQDHqtvwm&Signature=eB+Y2jeXtrXbsytuTKsT4t2jtr0="></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>​    以上属于基础部分，表关系只列举了OneToMany和ManyToOne，其他的可以参照官网看：<a href="https://typeorm.bootcss.com/entities">https://typeorm.bootcss.com/entities</a></p>]]></content>
      
      
      <categories>
          
          <category> TypeORM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeORM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>错误处理</title>
      <link href="/2023/03/07/cuo-wu-chu-li/"/>
      <url>/2023/03/07/cuo-wu-chu-li/</url>
      
        <content type="html"><![CDATA[<h1 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h1><h2 id="1-代码"><a href="#1-代码" class="headerlink" title="1.代码"></a>1.代码</h2><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//express是个函数</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> USERNAME_DOES_NOT_EXISTIS<span class="token operator">=</span> <span class="token string">"username does not exist~"</span><span class="token punctuation">;</span><span class="token keyword">const</span> USERNAME_ALPEADY_EXISTIS<span class="token operator">=</span> <span class="token string">"USERNAME_ALPEADY_EXISTIS"</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span>res<span class="token punctuation">,</span>next<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 加入在数据中查询用户名时,发现不存在</span>    <span class="token keyword">const</span> isExists <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>isExists<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token string">"user login success~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">next</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>USERNAME_DOES_NOT_EXISTIS<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/register'</span><span class="token punctuation">,</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span>res<span class="token punctuation">,</span>next<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 加入在数据中查询用户名时,发现已经存在</span>    <span class="token keyword">const</span> isExists <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>isExists<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token string">"user register success~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">next</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>USERNAME_ALPEADY_EXISTIS<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 统一处理错误中间件,传err</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span>req<span class="token punctuation">,</span>res<span class="token punctuation">,</span>next<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> status <span class="token operator">=</span> <span class="token number">400</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> message <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token keyword">switch</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>message<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> USERNAME_DOES_NOT_EXISTIS<span class="token punctuation">:</span>          message <span class="token operator">=</span> <span class="token string">"username does not exist~"</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> USERNAME_ALPEADY_EXISTIS<span class="token punctuation">:</span>          message <span class="token operator">=</span><span class="token string">"USERNAME_ALPEADY_EXISTIS"</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token punctuation">:</span>            message<span class="token operator">=</span><span class="token string">"not found~"</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        errCode<span class="token punctuation">:</span>status<span class="token punctuation">,</span>        errMessage<span class="token punctuation">:</span>message    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"错误处理"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-结果"><a href="#2-结果" class="headerlink" title="2.结果"></a>2.结果</h2><p><img src="https://i.328888.xyz/2023/03/07/h0c35.png" alt="h0c35.png"></p>]]></content>
      
      
      <categories>
          
          <category> express </category>
          
      </categories>
      
      
        <tags>
            
            <tag> express </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>express路由的使用</title>
      <link href="/2023/03/07/express-lu-you-de-shi-yong/"/>
      <url>/2023/03/07/express-lu-you-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="express路由的使用"><a href="#express路由的使用" class="headerlink" title="express路由的使用"></a>express路由的使用</h1><h2 id="1-路由"><a href="#1-路由" class="headerlink" title="1.路由"></a>1.路由</h2><p><img src="https://i.328888.xyz/2023/03/07/h0Obk.png" alt="h0Obk.png"></p><blockquote><p>相对教重复，全放app不方便管理</p></blockquote><p><img src="https://i.328888.xyz/2023/03/07/h0bzL.png" alt="h0bzL.png"></p><blockquote><p>一个minni-app就封装所有的user接口</p></blockquote><h2 id="2创建路由文件"><a href="#2创建路由文件" class="headerlink" title="2创建路由文件"></a>2创建路由文件</h2><p><img src="https://i.328888.xyz/2023/03/07/h0ICU.png" alt="h0ICU.png"></p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">/*举个例子 请求所有的用户信息: get/users 请求所有的某个用户信息:get/users/:id 请求所有的某个用户信息:post/users body:&amp;#123;username:password&amp;#125; 请求所有的某个用户信息:delete/users/:id 请求所有的某个用户信息:post/users/:id&amp;#123;nickname&amp;#125; */</span><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> router <span class="token operator">=</span> express<span class="token punctuation">.</span><span class="token function">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>router<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span>res<span class="token punctuation">,</span>next<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"why"</span><span class="token punctuation">,</span><span class="token string">"kobe"</span><span class="token punctuation">,</span><span class="token string">"lilei"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/:id'</span><span class="token punctuation">,</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span>res<span class="token punctuation">,</span>next<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`$&amp;#123;req.params.id&amp;#125;用户的信息`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span>res<span class="token punctuation">,</span>next<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token string">"create user success"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> router<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3使用路由"><a href="#3使用路由" class="headerlink" title="3使用路由"></a>3使用路由</h2><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> userRouter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'./routers/user'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> productRouter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./routers/products"</span><span class="token punctuation">)</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"/users"</span><span class="token punctuation">,</span>userRouter<span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'/products'</span><span class="token punctuation">,</span>userRouter<span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"路由服务启动成功~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4结果自测"><a href="#4结果自测" class="headerlink" title="4结果自测"></a>4结果自测</h2>]]></content>
      
      
      <categories>
          
          <category> express </category>
          
      </categories>
      
      
        <tags>
            
            <tag> express </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器响应</title>
      <link href="/2023/03/07/fu-wu-qi-xiang-ying/"/>
      <url>/2023/03/07/fu-wu-qi-xiang-ying/</url>
      
        <content type="html"><![CDATA[<h2 id="服务器响应"><a href="#服务器响应" class="headerlink" title="服务器响应"></a>服务器响应</h2><h2 id="1-代码"><a href="#1-代码" class="headerlink" title="1.代码"></a>1.代码</h2><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//express是个函数</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// params方式  http://localhost:8000/products/1/ptc</span>app<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/products/:id/:name'</span><span class="token punctuation">,</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span>res<span class="token punctuation">,</span>next<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// req.params=>在数据库种查询真实的商品数据,再返回商品数据</span>    res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token string">'商品的详情数据'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// query方式  http://localhost:8000/login?username=why&amp;password=123</span>app<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span>res<span class="token punctuation">,</span>next<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// req.params=>在数据库种匹配用户名和密码,再返回token</span>    <span class="token comment" spellcheck="true">// 返回状态</span>    <span class="token comment" spellcheck="true">// res.status(204);</span>    <span class="token comment" spellcheck="true">// 设置内容,返回json</span>    res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">'ptc'</span><span class="token punctuation">,</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">19</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"客户端请求的方式"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-结果"><a href="#2-结果" class="headerlink" title="2.结果"></a>2.结果</h2><p><img src="https://i.328888.xyz/2023/03/07/h0mS8.png" alt="h0mS8.png"></p>]]></content>
      
      
      <categories>
          
          <category> express </category>
          
      </categories>
      
      
        <tags>
            
            <tag> express </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日志打印</title>
      <link href="/2023/03/07/ri-zhi-da-yin/"/>
      <url>/2023/03/07/ri-zhi-da-yin/</url>
      
        <content type="html"><![CDATA[<h1 id="日志打印"><a href="#日志打印" class="headerlink" title="日志打印"></a>日志打印</h1><h2 id="1-代码"><a href="#1-代码" class="headerlink" title="1.代码"></a>1.代码</h2><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//express是个函数</span><span class="token keyword">const</span> morgan <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'morgan'</span><span class="token punctuation">)</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 写入流,flags是每次都追加</span><span class="token keyword">const</span> writerStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span><span class="token string">'./logs/aceess.log'</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    flags<span class="token punctuation">:</span><span class="token string">"a+"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 全局都记录日志,如果想单独记录接口,只需要写入接口当中间件即可,中间件即回调</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">morgan</span><span class="token punctuation">(</span><span class="token string">'combined'</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>stream<span class="token punctuation">:</span> writerStream<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/home'</span><span class="token punctuation">,</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span>res<span class="token punctuation">,</span>next<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">'hello world'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"form-data解析"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-结果"><a href="#2-结果" class="headerlink" title="2.结果"></a>2.结果</h2><p><img src="https://i.328888.xyz/2023/03/07/h0rK3.png" alt="h0rK3.png"></p>]]></content>
      
      
      <categories>
          
          <category> express </category>
          
      </categories>
      
      
        <tags>
            
            <tag> express </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>formdata文件上传</title>
      <link href="/2023/03/07/formdata-wen-jian-shang-chuan/"/>
      <url>/2023/03/07/formdata-wen-jian-shang-chuan/</url>
      
        <content type="html"><![CDATA[<h1 id="formdata文件上传"><a href="#formdata文件上传" class="headerlink" title="formdata文件上传"></a>formdata文件上传</h1><h3 id="1-formdata"><a href="#1-formdata" class="headerlink" title="1.formdata"></a>1.formdata</h3><blockquote><p>formdata可以选择文件类型，可以是文件，也可以是text，文件可以是图片</p></blockquote><p><img src="https://i.328888.xyz/2023/03/06/hV3l8.png" alt="hV3l8.png"></p><h2 id="2-代码"><a href="#2-代码" class="headerlink" title="2.代码"></a>2.代码</h2><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//express是个函数</span><span class="token keyword">const</span> multer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'multer'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// 用于express框解析，但在epress内，需要手动安装</span><span class="token comment" spellcheck="true">// 自定义文件名</span><span class="token keyword">const</span> storage <span class="token operator">=</span> multer<span class="token punctuation">.</span><span class="token function">diskStorage</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    destination<span class="token punctuation">:</span> <span class="token punctuation">(</span>req<span class="token punctuation">,</span>file<span class="token punctuation">,</span>cb<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// cb是回调函数</span>        <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">'./uploads'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    filename<span class="token punctuation">:</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span>file<span class="token punctuation">,</span>cb<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originalname<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//函数就有返回值，这里取express()的返回值</span><span class="token keyword">const</span> upload <span class="token operator">=</span> <span class="token function">multer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// dest: './uploads'    // 文件存储位置，storage方式是可以自定义文件名的方式</span>    storage<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//multer也是一个函数</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// json数据格式解析</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>extended<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// urlencoded数据格式解析</span><span class="token comment" spellcheck="true">// app.use(upload.any());      // formdata数据格式解析,其实是解析非文件的任何内容,不能当全局使用会和后面upload里面的single或者fields冲突!!!!!!!!!!!!!!!!!!!</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span>upload<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span>res<span class="token punctuation">,</span>next<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 拿到req里面的内容，body是在解析过程新设置的变量，赋的值是解析后的值</span>    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">'用户登录成功'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 还差个中间件,即upload.single(file)，用于上传文件，并且进行保存操作,用upload.array也可以,用fields也是可以的</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/upload'</span><span class="token punctuation">,</span>upload<span class="token punctuation">.</span><span class="token function">fields</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>name<span class="token punctuation">:</span><span class="token string">"file"</span><span class="token punctuation">,</span>maxCount<span class="token punctuation">:</span><span class="token number">2</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span>res<span class="token punctuation">,</span>next<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//打印文件内容</span>       res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">"文件上传成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"form-data解析"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-结果"><a href="#3-结果" class="headerlink" title="3.结果"></a>3.结果</h2><p><img src="https://i.328888.xyz/2023/03/07/h0CDz.png" alt="h0CDz.png"></p>]]></content>
      
      
      <categories>
          
          <category> express </category>
          
      </categories>
      
      
        <tags>
            
            <tag> express </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>request参数解析-params与query</title>
      <link href="/2023/03/06/request-can-shu-jie-xi-params-yu-query/"/>
      <url>/2023/03/06/request-can-shu-jie-xi-params-yu-query/</url>
      
        <content type="html"><![CDATA[<h1 id="request参数解析-params与query"><a href="#request参数解析-params与query" class="headerlink" title="request参数解析-params与query"></a>request参数解析-params与query</h1><h2 id="1-客户端发送请求的方式"><a href="#1-客户端发送请求的方式" class="headerlink" title="1.客户端发送请求的方式"></a>1.客户端发送请求的方式</h2><p><img src="https://i.328888.xyz/2023/03/06/hnPZN.png" alt="hnPZN.png"></p><blockquote><p>此节主要讲params和query</p></blockquote><p>params：路径后面拼接路径</p><blockquote><p><a href="http://localhost:8000/products/1/ptc">http://localhost:8000/products/1/ptc</a></p></blockquote><p>query：路径拼接参数</p><blockquote><p><a href="http://localhost:8000/login?username=why&amp;password=123">http://localhost:8000/login?username=why&amp;password=123</a></p></blockquote><h2 id="2-代码"><a href="#2-代码" class="headerlink" title="2.代码"></a>2.代码</h2><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//express是个函数</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// params方式  http://localhost:8000/products/1/ptc</span>app<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/products/:id/:name'</span><span class="token punctuation">,</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span>res<span class="token punctuation">,</span>next<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// req.params=>在数据库种查询真实的商品数据,再返回商品数据</span>    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">'商品的详情数据'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// query方式  http://localhost:8000/login?username=why&amp;password=123</span>app<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span>res<span class="token punctuation">,</span>next<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// req.params=>在数据库种匹配用户名和密码,再返回token</span>    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">'用户登录成功'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"客户端请求的方式"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-结果"><a href="#3-结果" class="headerlink" title="3.结果"></a>3.结果</h2><p><img src="https://i.328888.xyz/2023/03/06/hnYkq.png" alt="hnYkq.png"></p><p><img src="https://i.328888.xyz/2023/03/06/htAOp.png" alt="htAOp.png"></p><p><a href="https://imgloc.com/i/htf5k"><img src="https://i.328888.xyz/2023/03/06/htf5k.png" alt="htf5k.png"></a></p><p><a href="https://imgloc.com/i/htUav"><img src="https://i.328888.xyz/2023/03/06/htUav.png" alt="htUav.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> express </category>
          
      </categories>
      
      
        <tags>
            
            <tag> express </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中间件的应用-各格式数据的解析</title>
      <link href="/2023/03/06/zhong-jian-jian-de-ying-yong-ge-ge-shi-shu-ju-de-jie-xi/"/>
      <url>/2023/03/06/zhong-jian-jian-de-ying-yong-ge-ge-shi-shu-ju-de-jie-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="中间件的应用-各格式数据的解析"><a href="#中间件的应用-各格式数据的解析" class="headerlink" title="中间件的应用-各格式数据的解析"></a>中间件的应用-各格式数据的解析</h1><h2 id="1-环境需要express的框架，需要手动安装项目框架"><a href="#1-环境需要express的框架，需要手动安装项目框架" class="headerlink" title="1.环境需要express的框架，需要手动安装项目框架"></a>1.环境需要express的框架，需要手动安装项目框架</h2><p><a href="https://imgse.com/i/ppZZQMD"><img src="https://s1.ax1x.com/2023/03/06/ppZZQMD.png" alt="ppZZQMD.png"></a></p><h2 id="2-代码"><a href="#2-代码" class="headerlink" title="2.代码"></a>2.代码</h2><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//express是个函数</span><span class="token keyword">const</span> multer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'multer'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// 用于express框解析，但在epress内，需要手动安装</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//函数就有返回值，这里取express()的返回值</span><span class="token keyword">const</span> upload <span class="token operator">=</span> <span class="token function">multer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//multer也是一个函数</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// json数据格式解析</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>extended<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// urlencoded数据格式解析</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>upload<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// formdata数据格式解析,其实是解析非文件的任何内容</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span>res<span class="token punctuation">,</span>next<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 拿到req里面的内容，body是在解析过程新设置的变量，赋的值是解析后的值</span>    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">'用户登录成功'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"form-data解析"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-结果"><a href="#3-结果" class="headerlink" title="3.结果"></a>3.结果</h2><p><img src="https://i.328888.xyz/2023/03/06/hV3l8.png" alt="hV3l8.png"></p><p><img src="https://i.328888.xyz/2023/03/06/hVcLF.png" alt="hVcLF.png"></p>]]></content>
      
      
      <categories>
          
          <category> express </category>
          
      </categories>
      
      
        <tags>
            
            <tag> express </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>import函数</title>
      <link href="/2023/03/03/import-han-shu/"/>
      <url>/2023/03/03/import-han-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="import函数"><a href="#import函数" class="headerlink" title="import函数"></a>import函数</h1><p><a href="https://imgse.com/i/ppk2ZOU"><img src="https://s1.ax1x.com/2023/03/03/ppk2ZOU.png" alt="ppk2ZOU.png"></a></p><blockquote><p>重点：js引擎解析代码的过程：parsing(解析)-》ast-》字节码-》二进制-》执行，解析时候已经确定好了依赖关系</p></blockquote><p>以下写法是错误的</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">let</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">import</span> fomat <span class="token keyword">from</span> <span class="token string">"./modules/foo.js"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p> import fomat from “./modules/foo.js”是解析环境下的代码，无法用在运行环境下，import不是函数是关键字，需要解析，if(flag){}是js到了运行时候，而import fomat from “./modules/foo.js”只是解析阶段，从而报错。</p></blockquote><p>改进方式，改成执行函数,如果是webpack的环境下：es commonJs 用require()</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">let</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">require</span><span class="token punctuation">(</span> <span class="token string">"./modules/foo.js"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>或者使用inport函数</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">let</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">import</span><span class="token punctuation">(</span> <span class="token string">"./modules/foo.js"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>重点：此处的import是一个异步函数，他会等js文件加载成功再去调用(可以先让下面的代码运行)，返回一个promise，一个契约</p><p>类似于发请求和接请求的时候，他会等请求接受到时候再回调做赋值操作(但其他代码可能已经运行)，所以才会有页面数据后出现的情况</p></blockquote><p>最终：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">let</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">import</span><span class="token punctuation">(</span> <span class="token string">"./modules/foo.js"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res<span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"在then中打印"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err<span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>.then后执行回调函数,回调就是把一个函数的返回值作为参数传给另外一个函数去调用。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> es6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> es6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对export { }的理解</title>
      <link href="/2023/03/03/dui-export-de-li-jie/"/>
      <url>/2023/03/03/dui-export-de-li-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="对export-的理解"><a href="#对export-的理解" class="headerlink" title="对export { }的理解"></a>对export { }的理解</h1><blockquote><p>export后面的{}不是对象！！！</p></blockquote><p><a href="https://imgse.com/i/ppk2ZOU"><img src="https://s1.ax1x.com/2023/03/03/ppk2ZOU.png" alt="ppk2ZOU.png"></a></p><blockquote><p>重点理解：如果把let name = “why”变成et name = { }变成对象，后面的const name =0x1相当于引用了地址，在index.js里面再改name同样foo.js里面的值也得更着改，因为是改的是地址。</p></blockquote><h2 id="一个小实例"><a href="#一个小实例" class="headerlink" title="一个小实例"></a>一个小实例</h2><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>a <span class="token operator">=</span> <span class="token number">19</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//语法错误，变量不能改</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    name<span class="token punctuation">:</span><span class="token string">'ptc'</span><span class="token punctuation">,</span>    age<span class="token punctuation">:</span> <span class="token number">18</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>a<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'why'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//可以改因为改的是地址</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 'why'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> es6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> es6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内存的理解：值的赋值和地址的引用</title>
      <link href="/2023/03/03/nei-cun-de-li-jie-zhi-de-fu-zhi-he-di-zhi-de-yin-yong/"/>
      <url>/2023/03/03/nei-cun-de-li-jie-zhi-de-fu-zhi-he-di-zhi-de-yin-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="内存的理解：值的赋值和地址的引用"><a href="#内存的理解：值的赋值和地址的引用" class="headerlink" title="内存的理解：值的赋值和地址的引用"></a>内存的理解：值的赋值和地址的引用</h1><p>​     如果是定义一个a变量是一个值，则这个变量是一个值类型，变量与变量之间是值的引用。如果定义一个变量的是一个对象，则这个变量就是引用类型，就是在内存里面开辟了一个空间，如果另外一个变量b引用这个对象，另外这个变量b引用的是地址，原变量a改变，就是地址里面的内容改变了，则这个另外一个变量b就改变了，引用给的是指针。</p><blockquote><p>node里面commonJs规范里面的导出和导入的理解要先理解内存</p></blockquote><p><a href="https://imgse.com/i/ppkV5Hx"><img src="https://s1.ax1x.com/2023/03/03/ppkV5Hx.png" alt="ppkV5Hx.png"></a></p><blockquote><p>以上图片就是对象的引用</p></blockquote><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>Name<span class="token punctuation">:</span><span class="token string">'kobe'</span><span class="token punctuation">,</span>Age<span class="token punctuation">:</span><span class="token number">18</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token keyword">let</span> info <span class="token operator">=</span> obj<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><a href="https://imgse.com/i/ppkVLgH"><img src="https://s1.ax1x.com/2023/03/03/ppkVLgH.png" alt="ppkVLgH.png"></a></p><blockquote><p>以上图片是值的引用，不需要单独开辟其他内存空间</p></blockquote><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span><span class="token keyword">let</span> b <span class="token operator">=</span> a<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓中使用AsyncTask设计异步任务</title>
      <link href="/2022/05/26/an-zhuo-zhong-shi-yong-asynctask-she-ji-yi-bu-ren-wu/"/>
      <url>/2022/05/26/an-zhuo-zhong-shi-yong-asynctask-she-ji-yi-bu-ren-wu/</url>
      
        <content type="html"><![CDATA[<h1 id="安卓中使用AsyncTask设计异步任务"><a href="#安卓中使用AsyncTask设计异步任务" class="headerlink" title="安卓中使用AsyncTask设计异步任务"></a>安卓中使用AsyncTask设计异步任务</h1><h2 id="1-安卓实现异步任务机制的方式"><a href="#1-安卓实现异步任务机制的方式" class="headerlink" title="1.安卓实现异步任务机制的方式"></a>1.安卓实现异步任务机制的方式</h2><p>在Android中实现异步任务机制有两种方式，Handler和AsyncTask。</p><p>Handler模式需要为每一个任务创建一个新的线程，任务完成后通过Handler实例向UI线程发送消息，完成界面的更新，这种方式对于整个过程的控制比较精细，但也是有缺点的，例如代码相对臃肿，在多个任务同时执行时，不易对线程进行精确的控制。关于Handler的相关知识，前面也有所介绍，不清楚的朋友们可以参照一下。</p><p>为了简化操作，Android1.5提供了工具类android.os.AsyncTask，它使创建异步任务变得更加简单，不再需要编写任务线程和Handler实例即可完成相同的任务。</p><h5 id="先来看看AsyncTask的定义："><a href="#先来看看AsyncTask的定义：" class="headerlink" title="先来看看AsyncTask的定义："></a>先来看看AsyncTask的定义：</h5><pre><code>public abstract class AsyncTask&lt;Params, Progress, Result&gt; &#123;</code></pre><p>三种泛型类型分别代表“启动任务执行的输入参数”、“后台任务执行的进度”、“后台计算结果的类型”。在特定场合下，并不是所有类型都被使用，如果没有被使用，可以用java.lang.Void类型代替。</p><h2 id="2-基本步骤"><a href="#2-基本步骤" class="headerlink" title="2.基本步骤"></a>2.基本步骤</h2><p>1.execute(Params… params)，执行一个异步任务，需要我们在代码中调用此方法，触发异步任务的执行。</p><p>2.onPreExecute()，在execute(Params… params)被调用后立即执行，一般用来在执行后台任务前对UI做一些标记。</p><p>3.doInBackground(Params… params)，在onPreExecute()完成后立即执行，用于执行较为费时的操作，此方法将接收输入参数和返回计算结果。在执行过程中可以调用publishProgress(Progress… values)来更新进度信息。</p><p>4.onProgressUpdate(Progress… values)，在调用publishProgress(Progress… values)时，此方法被执行，直接将进度信息更新到UI组件上。</p><p>5.onPostExecute(Result result)，当后台操作结束时，此方法将会被调用，计算结果将做为参数传递到此方法中，直接将结果显示到UI组件上。</p><p>在使用的时候，有几点需要格外注意：</p><p>1.异步任务的实例必须在UI线程中创建。</p><p>2.execute(Params… params)方法必须在UI线程中调用。</p><p>3.不要手动调用onPreExecute()，doInBackground(Params… params)，onProgressUpdate(Progress… values)，onPostExecute(Result result)这几个方法。</p><p>4.不能在doInBackground(Params… params)中更改UI组件的信息。</p><p>5.一个任务实例只能执行一次，如果执行第二次将会抛出异常。</p><h2 id="3-具体代码"><a href="#3-具体代码" class="headerlink" title="3.具体代码"></a>3.具体代码</h2><p>MainActivity.java</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>scott<span class="token punctuation">.</span>async<span class="token punctuation">;</span> <span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>ByteArrayOutputStream<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>InputStream<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpEntity<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpResponse<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpStatus<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>client<span class="token punctuation">.</span>HttpClient<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>client<span class="token punctuation">.</span>methods<span class="token punctuation">.</span>HttpGet<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>client<span class="token punctuation">.</span>DefaultHttpClient<span class="token punctuation">;</span> <span class="token keyword">import</span> android<span class="token punctuation">.</span>app<span class="token punctuation">.</span>Activity<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>AsyncTask<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Bundle<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Log<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>View<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>Button<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>ProgressBar<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>TextView<span class="token punctuation">;</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">Activity</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String TAG <span class="token operator">=</span> <span class="token string">"ASYNC_TASK"</span><span class="token punctuation">;</span>     <span class="token keyword">private</span> Button execute<span class="token punctuation">;</span>    <span class="token keyword">private</span> Button cancel<span class="token punctuation">;</span>    <span class="token keyword">private</span> ProgressBar progressBar<span class="token punctuation">;</span>    <span class="token keyword">private</span> TextView textView<span class="token punctuation">;</span>     <span class="token keyword">private</span> MyTask mTask<span class="token punctuation">;</span>     <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>main<span class="token punctuation">)</span><span class="token punctuation">;</span>         execute <span class="token operator">=</span> <span class="token punctuation">(</span>Button<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>execute<span class="token punctuation">)</span><span class="token punctuation">;</span>        execute<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View v<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//注意每次需new一个实例,新建的任务只能执行一次,否则会出现异常</span>                mTask <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                mTask<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token string">"http://www.baidu.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 execute<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cancel<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        cancel <span class="token operator">=</span> <span class="token punctuation">(</span>Button<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>cancel<span class="token punctuation">)</span><span class="token punctuation">;</span>        cancel<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View v<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//取消一个正在执行的任务,onCancelled方法将会被调用</span>                mTask<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        progressBar <span class="token operator">=</span> <span class="token punctuation">(</span>ProgressBar<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>progress_bar<span class="token punctuation">)</span><span class="token punctuation">;</span>        textView <span class="token operator">=</span> <span class="token punctuation">(</span>TextView<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>text_view<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">MyTask</span> <span class="token keyword">extends</span> <span class="token class-name">AsyncTask</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Integer<span class="token punctuation">,</span> String<span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//onPreExecute方法用于在执行后台任务前做一些UI操作</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onPreExecute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"onPreExecute() called"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            textView<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"loading..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//doInBackground方法内部执行后台任务,不可在此方法内修改UI</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">protected</span> String <span class="token function">doInBackground</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> params<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"doInBackground(Params... params) called"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">try</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                HttpClient client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultHttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                HttpGet get <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpGet</span><span class="token punctuation">(</span>params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                HttpResponse response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>get<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getStatusLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> HttpStatus<span class="token punctuation">.</span>SC_OK<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    HttpEntity entity <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    InputStream is <span class="token operator">=</span> entity<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">long</span> total <span class="token operator">=</span> entity<span class="token punctuation">.</span><span class="token function">getContentLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    ByteArrayOutputStream baos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                    <span class="token keyword">int</span> length <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>                    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>length <span class="token operator">=</span> is<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        baos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> length<span class="token punctuation">)</span><span class="token punctuation">;</span>                        count <span class="token operator">+=</span> length<span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">//调用publishProgress公布进度,最后onProgressUpdate方法将被执行</span>                        <span class="token function">publishProgress</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>count <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> total<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">//为了演示进度,休眠500毫秒</span>                        Thread<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>baos<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"gb2312"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//onProgressUpdate方法用于更新进度信息</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onProgressUpdate</span><span class="token punctuation">(</span>Integer<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> progresses<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"onProgressUpdate(Progress... progresses) called"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            progressBar<span class="token punctuation">.</span><span class="token function">setProgress</span><span class="token punctuation">(</span>progresses<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            textView<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"loading..."</span> <span class="token operator">+</span> progresses<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//onPostExecute方法用于在执行完后台任务后更新UI,显示结果</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onPostExecute</span><span class="token punctuation">(</span>String result<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"onPostExecute(Result result) called"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            textView<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>             execute<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cancel<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//onCancelled方法用于在取消执行中的任务时更改UI</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCancelled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"onCancelled() called"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            textView<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"cancelled"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            progressBar<span class="token punctuation">.</span><span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             execute<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cancel<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>main.xml</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fill_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fill_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/execute<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fill_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>execute<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/cancel<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fill_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>enabled</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cancel<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ProgressBar</span>         <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/progress_bar<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fill_parent<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">android:</span>progress</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">        <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value">?<span class="token property">android</span><span class="token punctuation">:</span>attr/progressBarStyleHorizontal</span><span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ScrollView</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fill_parent<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/text_view<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fill_parent<span class="token punctuation">"</span></span>             <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ScrollView</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>AndroidManifest.xml中加入访问网络的权限</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android.permission.INTERNET<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-运行效果"><a href="#4-运行效果" class="headerlink" title="4.运行效果"></a>4.运行效果</h2><p><a href="https://imgtu.com/i/XVroFA"><img src="https://s1.ax1x.com/2022/05/26/XVroFA.png" alt="XVroFA.png"></a></p><p><a href="https://imgtu.com/i/XVrqQf"><img src="https://s1.ax1x.com/2022/05/26/XVrqQf.png" alt="XVrqQf.png"></a></p><p><a href="https://imgtu.com/i/XVrvwQ"><img src="https://s1.ax1x.com/2022/05/26/XVrvwQ.png" alt="XVrvwQ.png"></a></p><h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5.总结"></a>5.总结</h2><blockquote><p>​    当我们调用execute(Params… params)方法后，execute方法会调用onPreExecute()方法，然后由ThreadPoolExecutor实例sExecutor执行一个FutureTask任务，这个过程中doInBackground(Params… params)将被调用，如果被开发者覆写的doInBackground(Params… params)方法中调用了publishProgress(Progress… values)方法，则通过InternalHandler实例sHandler发送一条MESSAGE_POST_PROGRESS消息，更新进度，sHandler处理消息时onProgressUpdate(Progress… values)方法将被调用；如果遇到异常，则发送一条MESSAGE_POST_CANCEL的消息，取消任务，sHandler处理消息时onCancelled()方法将被调用；如果执行成功，则发送一条MESSAGE_POST_RESULT的消息，显示结果，sHandler处理消息时onPostExecute(Result result)方法被调用。<br>​    经过上面的介绍，已经认识到AsyncTask的本质了，它对Thread+Handler的良好封装，减少了开发者处理问题的复杂度，提高了开发效率。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 安卓开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安卓开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>get请求和post请求请求数据的格式</title>
      <link href="/2022/03/29/get-qing-qiu-he-post-qing-qiu-qing-qiu-shu-ju-de-ge-shi/"/>
      <url>/2022/03/29/get-qing-qiu-he-post-qing-qiu-qing-qiu-shu-ju-de-ge-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="请求格式-get、post"><a href="#请求格式-get、post" class="headerlink" title="请求格式(get、post)"></a>请求格式(get、post)</h1><h2 id="1-params"><a href="#1-params" class="headerlink" title="1.params"></a>1.params</h2><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 获取分页数据</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getRepairReport</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    url<span class="token punctuation">:</span> <span class="token string">'/app/repairreport/list'</span><span class="token punctuation">,</span>    method<span class="token punctuation">:</span> <span class="token string">'post'</span><span class="token punctuation">,</span>    params<span class="token punctuation">:</span> data<span class="token punctuation">,</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js"><code class="language-js">      applyParams<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        t<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        page<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        limit<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>        totalPage<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        key<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://imgtu.com/i/qy9pD0"><img src="https://s1.ax1x.com/2022/03/29/qy9pD0.png" alt="qy9pD0.png"></a></p><p>get同理</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getCarParams</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    url<span class="token punctuation">:</span> <span class="token string">'/app/car/select'</span><span class="token punctuation">,</span>    method<span class="token punctuation">:</span> <span class="token string">'get'</span><span class="token punctuation">,</span>    params<span class="token punctuation">:</span>data  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-data"><a href="#2-data" class="headerlink" title="2.data"></a>2.data</h2><h3 id="1-json"><a href="#1-json" class="headerlink" title="1.json"></a>1.json</h3><pre class="line-numbers language-js"><code class="language-js">  <span class="token comment" spellcheck="true">// 提交表单</span>  <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">submitDataFrom</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      url<span class="token punctuation">:</span> <span class="token string">'/app/repairreport/save'</span><span class="token punctuation">,</span>      method<span class="token punctuation">:</span> <span class="token string">'post'</span><span class="token punctuation">,</span>      data<span class="token punctuation">:</span>data    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://imgtu.com/i/qy9hIU"><img src="https://s1.ax1x.com/2022/03/29/qy9hIU.png" alt="qy9hIU.png"></a></p><h3 id="2-formdata"><a href="#2-formdata" class="headerlink" title="2.formdata"></a>2.formdata</h3><pre class="line-numbers language-js"><code class="language-js"> <span class="token comment" spellcheck="true">// 提交表单</span>  <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">submitDataFrom</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      url<span class="token punctuation">:</span> <span class="token string">'/app/repairreport/save'</span><span class="token punctuation">,</span>      method<span class="token punctuation">:</span> <span class="token string">'post'</span><span class="token punctuation">,</span>      data<span class="token punctuation">:</span>qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://imgtu.com/i/qyCnzj"><img src="https://s1.ax1x.com/2022/03/29/qyCnzj.png" alt="qyCnzj.png"></a></p><h2 id="3-直接拼接在路径"><a href="#3-直接拼接在路径" class="headerlink" title="3.直接拼接在路径"></a>3.直接拼接在路径</h2><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 查询详情</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">searchRepairReport</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    url<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`/app/repairreport/$&amp;#123;id&amp;#125;`</span></span><span class="token punctuation">,</span>    method<span class="token punctuation">:</span> <span class="token string">'post'</span><span class="token punctuation">,</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://imgtu.com/i/qyCDw6"><img src="https://s1.ax1x.com/2022/03/29/qyCDw6.png" alt="qyCDw6.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓开发之实现普遍流</title>
      <link href="/2022/03/28/an-zhuo-kai-fa-zhi-shi-xian-pu-bian-liu/"/>
      <url>/2022/03/28/an-zhuo-kai-fa-zhi-shi-xian-pu-bian-liu/</url>
      
        <content type="html"><![CDATA[<h1 id="安卓开发之实现普遍流"><a href="#安卓开发之实现普遍流" class="headerlink" title="安卓开发之实现普遍流"></a>安卓开发之实现普遍流</h1><h2 id="1-实现RecyclerView控件的设计开发"><a href="#1-实现RecyclerView控件的设计开发" class="headerlink" title="1.实现RecyclerView控件的设计开发"></a>1.实现RecyclerView控件的设计开发</h2><h3 id="1-添加了RecyclerView组件"><a href="#1-添加了RecyclerView组件" class="headerlink" title="1.添加了RecyclerView组件"></a>1.添加了RecyclerView组件</h3><p>Fragment_contacts.xml文件的改写：</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.recyclerview.widget.RecyclerView</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/recyclerview_contacts<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_margin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>tem.xml的列表元素的内容：</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_margin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/ivory<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/counter<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>序号<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>15sp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/black<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/nickname<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>昵称<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>30sp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/blue<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/personalized_signature<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>个性签名<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20sp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/pinkish_red<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-Adapter适配器的编写"><a href="#2-Adapter适配器的编写" class="headerlink" title="2.Adapter适配器的编写"></a>2.<strong>Adapter适配器的编写</strong></h3><blockquote><p>Adapter负责从数据源取得数据并告诉列表如何显示··</p></blockquote><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RecyclerViewAdapter</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>Adapter</span><span class="token operator">&lt;</span>RecyclerViewAdapter<span class="token punctuation">.</span>Myviewholder<span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//昵称列表</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> mList<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//个性签名列表</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> nList<span class="token punctuation">;</span>    <span class="token keyword">private</span> Context context<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//带参构造函数</span>    <span class="token keyword">public</span> <span class="token function">RecyclerViewAdapter</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>String<span class="token operator">></span> mList<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> nList<span class="token punctuation">,</span> Context context<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//昵称列表</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>mList <span class="token operator">=</span> mList<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//个性签名列表</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>nList <span class="token operator">=</span> nList<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context <span class="token operator">=</span> context<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@NonNull</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Myviewholder <span class="token function">onCreateViewHolder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> ViewGroup parent<span class="token punctuation">,</span> <span class="token keyword">int</span> viewType<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            View view <span class="token operator">=</span> <span class="token punctuation">(</span>View<span class="token punctuation">)</span> LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>item<span class="token punctuation">,</span> parent<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Myviewholder myviewholder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Myviewholder</span><span class="token punctuation">(</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> myviewholder<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onBindViewHolder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> Myviewholder holder<span class="token punctuation">,</span> <span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            holder<span class="token punctuation">.</span>counter<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>position <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        holder<span class="token punctuation">.</span>nickname<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>mList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        holder<span class="token punctuation">.</span>personalized_signature<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>nList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getItemCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> mList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Myviewholder</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>ViewHolder</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            TextView counter<span class="token punctuation">,</span> nickname<span class="token punctuation">,</span> personalized_signature<span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token function">Myviewholder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> View itemView<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">super</span><span class="token punctuation">(</span>itemView<span class="token punctuation">)</span><span class="token punctuation">;</span>            counter <span class="token operator">=</span> itemView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>counter<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            nickname <span class="token operator">=</span> itemView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>nickname<span class="token punctuation">)</span><span class="token punctuation">;</span>            personalized_signature <span class="token operator">=</span> itemView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>personalized_signature<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>Fragment_contacts<span class="token punctuation">.</span>java文件的改写：（实现适配器对象的创建、使用及列表数据的添加，数据的添加在此省略）<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Fragment_contacts</span> <span class="token keyword">extends</span> <span class="token class-name">Fragment</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> Context context<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//昵称列表</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> mList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//个性签名列表</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> nList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">Fragment_contacts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> View <span class="token function">onCreateView</span><span class="token punctuation">(</span>LayoutInflater inflater<span class="token punctuation">,</span> ViewGroup container<span class="token punctuation">,</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            View view <span class="token operator">=</span> inflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>fragment_contacts<span class="token punctuation">,</span> container<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context <span class="token operator">=</span> view<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">InitNickNameList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">InitSignatureList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        RecyclerView recyclerView <span class="token operator">=</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>recyclerview_contacts<span class="token punctuation">)</span><span class="token punctuation">;</span>        RecyclerViewAdapter adapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RecyclerViewAdapter</span><span class="token punctuation">(</span>mList<span class="token punctuation">,</span> nList<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">;</span>        recyclerView<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>adapter<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*LinearLayoutManager是一个工具类，承担了一个View(RecyclerView)的布局、测量、子View 创建、 复用、 回收、 缓存、 滚动等操作。addItemDecoration用来进行分割线设计*/</span>        LinearLayoutManager manager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinearLayoutManager</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>        manager<span class="token punctuation">.</span><span class="token function">setOrientation</span><span class="token punctuation">(</span>LinearLayoutManager<span class="token punctuation">.</span>VERTICAL<span class="token punctuation">)</span><span class="token punctuation">;</span>        recyclerView<span class="token punctuation">.</span><span class="token function">setLayoutManager</span><span class="token punctuation">(</span>manager<span class="token punctuation">)</span><span class="token punctuation">;</span>        recyclerView<span class="token punctuation">.</span><span class="token function">addItemDecoration</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DividerItemDecoration</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> LinearLayoutManager<span class="token punctuation">.</span>VERTICAL<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> view<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-实现效果"><a href="#3-实现效果" class="headerlink" title="3.实现效果"></a>3.实现效果</h3><p><a href="https://imgtu.com/i/qrWBi4"><img src="https://s1.ax1x.com/2022/03/28/qrWBi4.png" alt="qrWBi4.png"></a></p><h2 id="2-实现瀑布流，菜单朋友圈实现图片的展示，展现瀑布流的效果"><a href="#2-实现瀑布流，菜单朋友圈实现图片的展示，展现瀑布流的效果" class="headerlink" title="2.实现瀑布流，菜单朋友圈实现图片的展示，展现瀑布流的效果"></a>2.实现瀑布流，菜单朋友圈实现图片的展示，展现瀑布流的效果</h2><h3 id="1-新建item-xml和修改朋友圈菜单对应的fragment-xml、fragment-java"><a href="#1-新建item-xml和修改朋友圈菜单对应的fragment-xml、fragment-java" class="headerlink" title="1.新建item.xml和修改朋友圈菜单对应的fragment.xml、fragment.java"></a>1.新建item.xml和修改朋友圈菜单对应的fragment.xml、fragment.java</h3><p>StaggeredGridAdapter.java文件：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StaggeredGridAdapter</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>Adapter</span><span class="token operator">&lt;</span>StaggeredGridAdapter<span class="token punctuation">.</span>DataViewHolder<span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> Context mContext<span class="token punctuation">;</span>    <span class="token keyword">private</span> RecyclerView recyclerView<span class="token punctuation">;</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>Integer<span class="token operator">></span> mList<span class="token punctuation">;</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>Integer<span class="token operator">></span> mHeight<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//带参构造函数</span>    <span class="token keyword">public</span> <span class="token function">StaggeredGridAdapter</span><span class="token punctuation">(</span>Context mContext<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>Integer<span class="token operator">></span> mList<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>mContext <span class="token operator">=</span> mContext<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>mList <span class="token operator">=</span> mList<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 初始化每个Item的高度（瀑布流效果）     * @return     */</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Integer<span class="token operator">></span> <span class="token function">initHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            mHeight <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>mList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//随机设置图片高度</span>            mHeight<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> mHeight<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 用于创建ViewHolder     * @param parent     * @param viewType     * @return     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> DataViewHolder <span class="token function">onCreateViewHolder</span><span class="token punctuation">(</span>ViewGroup parent<span class="token punctuation">,</span> <span class="token keyword">int</span> viewType<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            View view <span class="token operator">=</span> LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>mContext<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>item_image<span class="token punctuation">,</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//使用代码设置宽高（xml布局设置无效时）</span>        view<span class="token punctuation">.</span><span class="token function">setLayoutParams</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ViewGroup<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">(</span>                ViewGroup<span class="token punctuation">.</span>LayoutParams<span class="token punctuation">.</span>MATCH_PARENT<span class="token punctuation">,</span>                ViewGroup<span class="token punctuation">.</span>LayoutParams<span class="token punctuation">.</span>WRAP_CONTENT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        DataViewHolder holder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataViewHolder</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> holder<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 绑定数据     * @param holder     * @param position     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onBindViewHolder</span><span class="token punctuation">(</span>DataViewHolder holder<span class="token punctuation">,</span> <span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//设置每个Item的高度</span>        ViewGroup<span class="token punctuation">.</span>LayoutParams h <span class="token operator">=</span> holder<span class="token punctuation">.</span>iv_data<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        h<span class="token punctuation">.</span>height <span class="token operator">=</span> mHeight<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置图片</span>        holder<span class="token punctuation">.</span>iv_data<span class="token punctuation">.</span><span class="token function">setImageResource</span><span class="token punctuation">(</span>mList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 选项总数     * @return     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getItemCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> mList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 创建ViewHolder     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">DataViewHolder</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>ViewHolder</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            ImageView iv_data<span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token function">DataViewHolder</span><span class="token punctuation">(</span>View itemView<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">super</span><span class="token punctuation">(</span>itemView<span class="token punctuation">)</span><span class="token punctuation">;</span>            iv_data <span class="token operator">=</span> <span class="token punctuation">(</span>ImageView<span class="token punctuation">)</span> itemView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>item_ImageView<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     *   将RecycleView附加到Adapter上     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onAttachedToRecyclerView</span><span class="token punctuation">(</span>RecyclerView recyclerView<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onAttachedToRecyclerView</span><span class="token punctuation">(</span>recyclerView<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>recyclerView<span class="token operator">=</span> recyclerView<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//初始化每个Item的高度</span>        <span class="token function">initHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     *   将RecycleView从Adapter解除     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onDetachedFromRecyclerView</span><span class="token punctuation">(</span>RecyclerView recyclerView<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDetachedFromRecyclerView</span><span class="token punctuation">(</span>recyclerView<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>recyclerView <span class="token operator">=</span> null<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-添加一个Adapter-java实现从数据源取得数据并告诉列表如何显示"><a href="#2-添加一个Adapter-java实现从数据源取得数据并告诉列表如何显示" class="headerlink" title="2.添加一个Adapter.java实现从数据源取得数据并告诉列表如何显示"></a>2.添加一个Adapter.java实现从数据源取得数据并告诉列表如何显示</h3><p>Fragment_circle_friend.java文件实现图片瀑布流显示：</p><pre class="line-numbers language-java"><code class="language-java"> <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> View <span class="token function">onCreateView</span><span class="token punctuation">(</span>LayoutInflater inflater<span class="token punctuation">,</span> ViewGroup container<span class="token punctuation">,</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            View view <span class="token operator">=</span> inflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>fragment_circle_friend<span class="token punctuation">,</span> container<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context <span class="token operator">=</span> view<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//添加数据</span>        <span class="token function">InitImageList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//创建Adapter对象</span>        RecyclerView recyclerView <span class="token operator">=</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>recyclerview_circle_friend<span class="token punctuation">)</span><span class="token punctuation">;</span>        StaggeredGridAdapter adapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StaggeredGridAdapter</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> mList<span class="token punctuation">)</span><span class="token punctuation">;</span>        recyclerView<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>adapter<span class="token punctuation">)</span><span class="token punctuation">;</span>        recyclerView<span class="token punctuation">.</span><span class="token function">setLayoutManager</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StaggeredGridLayoutManager</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> StaggeredGridLayoutManager<span class="token punctuation">.</span>VERTICAL<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> view<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-效果"><a href="#3-效果" class="headerlink" title="3.效果"></a>3.效果</h3><p><a href="https://imgtu.com/i/qrfK61"><img src="https://s1.ax1x.com/2022/03/28/qrfK61.png" alt="qrfK61.png"></a></p><h2 id="3-总结"><a href="#3-总结" class="headerlink" title="3.总结"></a>3.总结</h2><blockquote><p>1.课堂上老师讲了recyclerView基本实现方式，课下实现起来还是和想象的不一样，还要多实操，多动手。</p><p>2.瀑布流的实现过程，参照了许多网上的例子，然后加到自己的项目当中，学习的过程还是要不断探索。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 安卓开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安卓开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓开发之微信UI设计-MyApplycation</title>
      <link href="/2022/03/21/an-zhuo-kai-fa-zhi-wei-xin-ui-she-ji-myapplycation/"/>
      <url>/2022/03/21/an-zhuo-kai-fa-zhi-wei-xin-ui-she-ji-myapplycation/</url>
      
        <content type="html"><![CDATA[<h1 id="微信UI设计"><a href="#微信UI设计" class="headerlink" title="微信UI设计"></a>微信UI设计</h1><h2 id="实现四个页面的布局"><a href="#实现四个页面的布局" class="headerlink" title="实现四个页面的布局"></a>实现四个页面的布局</h2><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ol><li><p>java</p></li><li><p>安卓虚拟机</p><blockquote><p>编辑器使用Android Studio</p></blockquote></li></ol><h3 id="布局列表"><a href="#布局列表" class="headerlink" title="布局列表"></a>布局列表</h3><p>布局文件均存在与res的layout文件夹中</p><p><a href="https://imgtu.com/i/qnIhVJ"><img src="https://s1.ax1x.com/2022/03/21/qnIhVJ.png" alt="qnIhVJ.png"></a></p><h3 id="各Tab页面的实现"><a href="#各Tab页面的实现" class="headerlink" title="各Tab页面的实现"></a>各Tab页面的实现</h3><p>此处要建xml文件写xml，类似于html的文件，是页面的“骨架”。</p><h4 id="头部标题"><a href="#头部标题" class="headerlink" title="头部标题"></a>头部标题</h4><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>65dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#000000<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/textView<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@string/app_name<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#ffffff<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="底部导航"><a href="#底部导航" class="headerlink" title="底部导航"></a>底部导航</h4><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>80dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/bottom_bar<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>horizontal<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>baselineAligned</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/id_tab_weixin<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageButton</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/id_tab_weixin_img<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#000000<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>clickable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>contentDescription</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@string/app_name<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>srcCompat</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/tab_weixin_pressed<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/textView1<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>微信<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#ffffff<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>clickable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>15sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/id_tab_frd<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageButton</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/id_tab_frd_img<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#000000<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>clickable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>contentDescription</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@string/app_name<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>srcCompat</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/tab_find_frd_normal<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/textView2<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>朋友<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#ffffff<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>clickable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>15sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/id_tab_contact<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageButton</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/id_tab_contact_img<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#000000<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>clickable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>contentDescription</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@string/app_name<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>srcCompat</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/tab_address_normal<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/textView3<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>通讯录<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#ffffff<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>clickable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>15sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/id_tab_settings<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageButton</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/id_tab_settings_img<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#000000<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>clickable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>contentDescription</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@string/app_name<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>srcCompat</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/tab_settings_normal<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/textView4<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>设置<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#ffffff<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>clickable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>15sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第一个页面"><a href="#第一个页面" class="headerlink" title="第一个页面"></a>第一个页面</h4><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/textView5<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>这是微信界面<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>30sp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">Style</span></span><span class="token punctuation">="</span><span class="token attr-value">bold</span><span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第二个页面"><a href="#第二个页面" class="headerlink" title="第二个页面"></a>第二个页面</h4><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/textView5<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>这是微信朋友圈界面<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>30sp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">Style</span></span><span class="token punctuation">="</span><span class="token attr-value">bold</span><span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第三个页面"><a href="#第三个页面" class="headerlink" title="第三个页面"></a>第三个页面</h4><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RelativeLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.recyclerview.widget.RecyclerView</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/tab03_1<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>overScrollMode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>never<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>scrollbars</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span> <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@layout/tab03_include_recycle_item<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RelativeLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第四个页面"><a href="#第四个页面" class="headerlink" title="第四个页面"></a>第四个页面</h4><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/textView5<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>这是设置界面<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>30sp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">Style</span></span><span class="token punctuation">="</span><span class="token attr-value">bold</span><span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="页面注册"><a href="#页面注册" class="headerlink" title="页面注册"></a>页面注册</h3><p>所有页面需要在activity_main里面注册</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">tools:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>.MainActivity<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span> <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@layout/top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FrameLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/id_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FrameLayout</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span> <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@layout/bottom<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>1.include 相当于占位符，为头部布局和底部导航布局占位</p><p>2.FrameLayout则是四个页面的布局展位</p></blockquote><p>至此微信UI静态布局已经实现，接下来是实现底部导航的点击效果，需要写java。</p><h2 id="多个Fragment之间的跳转"><a href="#多个Fragment之间的跳转" class="headerlink" title="多个Fragment之间的跳转"></a>多个Fragment之间的跳转</h2><h3 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h3><p><a href="https://imgtu.com/i/qnTONd"><img src="https://s1.ax1x.com/2022/03/21/qnTONd.png" alt="qnTONd.png"></a></p><h3 id="1、创建4个自定义Fragment类继承自Fragment，并且创建对应的布局文件，之后在Fragment类文件内部加载布局文件"><a href="#1、创建4个自定义Fragment类继承自Fragment，并且创建对应的布局文件，之后在Fragment类文件内部加载布局文件" class="headerlink" title="1、创建4个自定义Fragment类继承自Fragment，并且创建对应的布局文件，之后在Fragment类文件内部加载布局文件"></a>1、创建4个自定义Fragment类继承自Fragment，并且创建对应的布局文件，之后在Fragment类文件内部加载布局文件</h3><p><a href="https://imgtu.com/i/qnHpGR"><img src="https://s1.ax1x.com/2022/03/21/qnHpGR.png" alt="qnHpGR.png"></a></p><pre class="line-numbers language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">requestWindowFeature</span><span class="token punctuation">(</span>Window<span class="token punctuation">.</span>FEATURE_NO_TITLE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">initView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">initEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">initFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setSelect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、在MainAcitvity的布局文件下创建一个FrameLayout用来加载Fragment-上面已经实现"><a href="#2、在MainAcitvity的布局文件下创建一个FrameLayout用来加载Fragment-上面已经实现" class="headerlink" title="2、在MainAcitvity的布局文件下创建一个FrameLayout用来加载Fragment(上面已经实现)"></a>2、在MainAcitvity的布局文件下创建一个FrameLayout用来加载Fragment(上面已经实现)</h3><pre class="line-numbers language-xml"><code class="language-xml"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FrameLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/id_content<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FrameLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、在Main-Activity创建对应的4个自定义Fragment对象，并进行初始化"><a href="#3、在Main-Activity创建对应的4个自定义Fragment对象，并进行初始化" class="headerlink" title="3、在Main Activity创建对应的4个自定义Fragment对象，并进行初始化"></a>3、在Main Activity创建对应的4个自定义Fragment对象，并进行初始化</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>mywechat<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>app<span class="token punctuation">.</span>Activity<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>app<span class="token punctuation">.</span>Fragment<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>app<span class="token punctuation">.</span>FragmentManager<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>app<span class="token punctuation">.</span>FragmentTransaction<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Bundle<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Log<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>View<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>Window<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>ImageButton<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>LinearLayout<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        fm <span class="token operator">=</span> <span class="token function">getFragmentManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        FragmentTransaction transaction<span class="token operator">=</span> fm<span class="token punctuation">.</span><span class="token function">beginTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        transaction<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>id_content<span class="token punctuation">,</span>mTab01<span class="token punctuation">)</span><span class="token punctuation">;</span>        transaction<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>id_content<span class="token punctuation">,</span>mTab02<span class="token punctuation">)</span><span class="token punctuation">;</span>        transaction<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>id_content<span class="token punctuation">,</span>mTab03<span class="token punctuation">)</span><span class="token punctuation">;</span>        transaction<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>id_content<span class="token punctuation">,</span>mTab04<span class="token punctuation">)</span><span class="token punctuation">;</span>        transaction<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-实现点击按钮切换Fragment的界面效果"><a href="#4-实现点击按钮切换Fragment的界面效果" class="headerlink" title="4.实现点击按钮切换Fragment的界面效果"></a>4.实现点击按钮切换Fragment的界面效果</h3><pre class="line-numbers language-java"><code class="language-java">  <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"OnClick"</span><span class="token punctuation">,</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">resetImgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span><span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>id_tab_weixin<span class="token operator">:</span>                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"OnClick"</span><span class="token punctuation">,</span><span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">setSelect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>id_tab_frd<span class="token operator">:</span>                <span class="token function">setSelect</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>id_tab_contact<span class="token operator">:</span>                <span class="token function">setSelect</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>id_tab_settings<span class="token operator">:</span>                <span class="token function">setSelect</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h2><p>部分截图如下</p><p><a href="https://imgtu.com/i/qnHbYd"><img src="https://s1.ax1x.com/2022/03/21/qnHbYd.png" alt="qnHbYd.png"></a></p><p><a href="https://imgtu.com/i/qnHvOf"><img src="https://s1.ax1x.com/2022/03/21/qnHvOf.png" alt="qnHvOf.png"></a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>​    这学期选了移动开发这门课，因为之前对移动开发比较感兴趣，因为我们平时和手机打交道比较多，移动应用已经融入我们的日常生活。这次模仿微信，实现了一个简单的UI。总结了以下几点。</p><p>​    1.首先通过老师的讲解，学到了基础概论和实现的流程</p><p>​    2.通过之前学前端，发现有虽然框架不同，但又很多思想是类似，HTML类似于XML,JavaScript类似于Java</p><p>​    3.遇到问题，可以自行查阅资料，解决之后，收获还是蛮多的。</p>]]></content>
      
      
      <categories>
          
          <category> 安卓开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安卓开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>组件传值</title>
      <link href="/2022/01/22/zu-jian-chuan-zhi/"/>
      <url>/2022/01/22/zu-jian-chuan-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="组件传值"><a href="#组件传值" class="headerlink" title="组件传值"></a>组件传值</h1><h3 id="1-父传子"><a href="#1-父传子" class="headerlink" title="1.父传子"></a>1.父传子</h3><p>父组件：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    父组件:    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入子组件 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>child</span> <span class="token attr-name">:inputName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>child</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">import</span> child <span class="token keyword">from</span> <span class="token string">'./child'</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    components<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      child    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    data <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        name<span class="token punctuation">:</span> <span class="token string">''</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>子组件：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    子组件:    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span>inputName<span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 接受父组件的值</span>    props<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      inputName<span class="token punctuation">:</span> String<span class="token punctuation">,</span>      required<span class="token punctuation">:</span> <span class="token boolean">true</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-子传父"><a href="#2-子传父" class="headerlink" title="2.子传父"></a>2.子传父</h3><p>子组件：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    子组件:    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span>childValue<span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 定义一个子组件传值的方法 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>点击触发<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>childClick(item)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    data <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        childValue<span class="token punctuation">:</span> <span class="token string">'我是子组件的数据'</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//item是点击事件要传的参数</span>      childClick <span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// childByValue是在父组件on监听的方法</span>        <span class="token comment" spellcheck="true">// 第二个参数this.childValue是需要传的值</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>childValue <span class="token operator">=</span> item <span class="token comment" spellcheck="true">//但不能直接传item,需要本地data定义，并赋值</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'childByValue'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>childValue<span class="token punctuation">)</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>父组件：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    父组件:    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span>name<span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入子组件 定义一个on的方法监听子组件的状态--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>child</span> <span class="token attr-name">@childByValue</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fatherEvent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>child</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">import</span> child <span class="token keyword">from</span> <span class="token string">'./child'</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    components<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      child    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    data <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        name<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        starQueryParams<span class="token punctuation">:</span><span class="token string">''</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token function">fatherEvent</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">//index即子传过来的参数，上面fatherEvent()括号里面不需要定义参数，默认带过来一个参数直接打印</span>           console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>          <span class="token comment" spellcheck="true">//下面可以定义事件等，触发请求</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>starQueryParams<span class="token punctuation">.</span>id <span class="token operator">=</span> index<span class="token punctuation">.</span>id                <span class="token keyword">this</span><span class="token punctuation">.</span>starQueryParams<span class="token punctuation">.</span>isStared <span class="token operator">=</span> index<span class="token punctuation">.</span>isStared                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateProjects</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>starQueryParams<span class="token punctuation">)</span>                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getProjects</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>projectQueryParams<span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-双向绑定"><a href="#3-双向绑定" class="headerlink" title="3.双向绑定"></a>3.双向绑定</h3><blockquote><p>v-model其实是实现组件里面的父子组件双向传值的语法糖，不用上面两步一步步实现那么复杂，一般用于输入框。</p></blockquote><p>父组件：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>empty</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>msg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>empty</span><span class="token punctuation">></span></span>    data () <span class="token entity" title="&#123;">&amp;#123;</span>      return <span class="token entity" title="&#123;">&amp;#123;</span>       msg:""      <span class="token entity" title="&#125;">&amp;#125;</span>    <span class="token entity" title="&#125;">&amp;#125;</span>,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>v-model是@input=”msg = $event.target.value”的语法糖</p></blockquote><p>子组件:</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>everyItem<span class="token punctuation">"</span></span> <span class="token attr-name">:</span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value">style</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>u-form-item</span> <span class="token attr-name">label-width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>270rpx<span class="token punctuation">"</span></span> <span class="token attr-name">:label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span> <span class="token attr-name">:label-position</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>labelPosition<span class="token punctuation">"</span></span> <span class="token attr-name">:required</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>isRequired<span class="token punctuation">"</span></span>                <span class="token attr-name">:prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>propRule<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>u-input</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>handleClick<span class="token punctuation">"</span></span> <span class="token attr-name">:border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>border<span class="token punctuation">"</span></span> <span class="token attr-name">:type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>type<span class="token punctuation">"</span></span> <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>isDisabled<span class="token punctuation">"</span></span>                    <span class="token attr-name">:input-align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>inputAlign<span class="token punctuation">"</span></span> <span class="token attr-name">:clearable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>value<span class="token punctuation">"</span></span> <span class="token attr-name">@input</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tabtap()<span class="token punctuation">"</span></span> <span class="token attr-name">:placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>placeholder<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>u-input</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>u-form-item</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>u-line</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#F3F3F3<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        name<span class="token punctuation">:</span> <span class="token string">"form"</span><span class="token punctuation">,</span>        methods<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">tabtap</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                 <span class="token comment" spellcheck="true">// 可以理解为最上面展示的@input="msg = $event.target.value"这个事件</span>                <span class="token comment" spellcheck="true">// 即触发父组件的input事件，并将传递的值e变量的值赋值给msg    </span>                <span class="token comment" spellcheck="true">// 此处必须传“input”</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            <span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// console.log("click point");</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"myClick"</span><span class="token punctuation">,</span> <span class="token string">"adviceText"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token number">.</span>everyItem &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">30</span>px<span class="token punctuation">;</span>    &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue中直接将对象的值赋给自定义的变量，但操作后者时，原对象的值会被修改</title>
      <link href="/2021/12/13/vue-zhong-zhi-jie-jiang-dui-xiang-de-zhi-fu-gei-zi-ding-yi-de-bian-liang-dan-cao-zuo-hou-zhe-shi-yuan-dui-xiang-de-zhi-hui-bei-xiu-gai/"/>
      <url>/2021/12/13/vue-zhong-zhi-jie-jiang-dui-xiang-de-zhi-fu-gei-zi-ding-yi-de-bian-liang-dan-cao-zuo-hou-zhe-shi-yuan-dui-xiang-de-zhi-hui-bei-xiu-gai/</url>
      
        <content type="html"><![CDATA[<h3 id="存在问题"><a href="#存在问题" class="headerlink" title="存在问题"></a>存在问题</h3><p><a href="https://imgtu.com/i/oODD2t"><img src="https://s4.ax1x.com/2021/12/13/oODD2t.png" alt="oODD2t.png"></a></p><p>如上图为解决办法，其中，this.params4就是定义的一个空对象（this.params4={}），当点击时间触发时将一行记录传到方法openEditBlocCarWind（）中，直接赋值给this.params4，然后修改时就会修改obj的值，加上上面的Json处理后就不会啦。</p><p>下图贴出对应的对象打印到控制台的结构：</p><p><a href="https://imgtu.com/i/oODIx0"><img src="https://s4.ax1x.com/2021/12/13/oODIx0.png" alt="oODIx0.png"></a></p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//this.saleList本地变量</span><span class="token comment" spellcheck="true">//res.data.data后端请求过来的变量</span><span class="token keyword">this</span><span class="token punctuation">.</span>saleList <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data后端请求过来的变量<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>app开发之Cordova配置</title>
      <link href="/2021/11/16/app-kai-fa-zhi-cordova-pei-zhi/"/>
      <url>/2021/11/16/app-kai-fa-zhi-cordova-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="app开发之Cordova配置"><a href="#app开发之Cordova配置" class="headerlink" title="app开发之Cordova配置"></a>app开发之Cordova配置</h1><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><blockquote><p>首先要求有java环境。</p><p><a href="https://www.oracle.com/cn/java/technologies/javase/javase8-archive-downloads.html">下载地址x64</a></p><p>配置环境变量。</p><p><a href="https://www.runoob.com/java/java-environment-setup.html">配环境变量</a></p></blockquote><h2 id="配cordova"><a href="#配cordova" class="headerlink" title="配cordova"></a>配cordova</h2><h3 id="1-第一步是确保安装了Cordova-CLI和必要的SDK"><a href="#1-第一步是确保安装了Cordova-CLI和必要的SDK" class="headerlink" title="1.第一步是确保安装了Cordova CLI和必要的SDK"></a>1.第一步是确保安装了Cordova CLI和必要的SDK</h3><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> -g cordova<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-添加Cordova-Quasar模式"><a href="#2-添加Cordova-Quasar模式" class="headerlink" title="2.添加Cordova Quasar模式"></a>2.添加Cordova Quasar模式</h3><p>为了开发/构建移动APP，我们需要将Cordova模式添加到我们的Quasar项目中。 它所做的是使用Cordova CLI在<code>/src-cordova</code>文件夹中生成一个Cordova项目。 每次构建时会覆盖<code>/src-cordova/www</code>文件夹。</p><pre class="line-numbers language-bash"><code class="language-bash">$ quasar mode add cordova<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-添加平台"><a href="#3-添加平台" class="headerlink" title="3. 添加平台"></a>3. 添加平台</h3><p>要切换到cordova项目，请键入：</p><pre class="line-numbers language-js"><code class="language-js">$ cd src<span class="token operator">-</span>cordova<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Quasar CLI按需安装目标平台。 但是，如果要手动添加平台，请键入：</p><pre class="line-numbers language-js"><code class="language-js">$ cordova platform add <span class="token punctuation">[</span>android<span class="token operator">|</span>ios<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>要验证所有内容是否正常，请键入：</p><pre class="line-numbers language-bash"><code class="language-bash">$ cordova requirements<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="下载Android-studio"><a href="#下载Android-studio" class="headerlink" title="下载Android studio"></a>下载Android studio</h2><p>先安装，安装后，下载对应的SDK。</p><p>选择所需的SDK。 根据2019年12月的数据，Cordova需要android-28（Android 9.0-Pie），因此请确保将其包括在内。 点击“Apply”安装SDK。</p><p><img src="https://cdn.quasar.dev/img/Android-Studio-SDK-selection.png" alt="SDK selection"></p><h2 id="运行已有项目"><a href="#运行已有项目" class="headerlink" title="运行已有项目"></a>运行已有项目</h2><p>打开Android studio</p><p>打开以下路径</p><p><a href="https://imgtu.com/i/Ifzkiq"><img src="https://z3.ax1x.com/2021/11/16/Ifzkiq.png" alt="Ifzkiq.png"></a></p><h2 id="遇到的坑"><a href="#遇到的坑" class="headerlink" title="遇到的坑"></a>遇到的坑</h2><p><a href="https://www.cnblogs.com/nxjblog/p/12455995.html">配置gradle环境变量</a></p><blockquote><p>检查时候报错可能是没有重启。</p></blockquote><p>以下是可能遇到的坑</p><p>gradle打包出错</p><p><a href="https://blog.csdn.net/qq_29494055/article/details/111386455">Error occurred during initialization of VM Could not reserve enough space for 2097152KB object heap</a></p><p>SDK的build tool版本出错问题</p><p><a href="https://stackoverflow.com/questions/68931751/could-not-determine-the-dependencies-of-task-appcompiledebugjavawithjavac-h"><a href="https://stackoverflow.com/questions/68931751/could-not-determine-the-dependencies-of-task-appcompiledebugjavawithjavac-h">Could not determine the dependencies of task ‘:app:compileDebugJavaWithJavac’. having issue’s in Cordova</a></a></p><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p>编译成功启动即可</p><p><a href="https://imgtu.com/i/IhSvDg"><img src="https://z3.ax1x.com/2021/11/16/IhSvDg.png" alt="IhSvDg.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> Quasar </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Quasar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>父子组件使用v-model实现组件通信</title>
      <link href="/2021/11/05/fu-zi-zu-jian-shi-yong-v-model-shi-xian-zu-jian-tong-xin/"/>
      <url>/2021/11/05/fu-zi-zu-jian-shi-yong-v-model-shi-xian-zu-jian-tong-xin/</url>
      
        <content type="html"><![CDATA[<h2 id="父子组件使用v-model实现组件通信"><a href="#父子组件使用v-model实现组件通信" class="headerlink" title="父子组件使用v-model实现组件通信"></a>父子组件使用v-model实现组件通信</h2><p>我们在使用别人的组件库的时候，经常是通过v-model来控制一个组件显示和隐藏的效果，例如：弹框，下面一步一步的解开v-model的什么面纱<br>提到v-model首先想到的就是我们对于表单用户数据的双向数据绑定，操作起来很简洁很粗暴，例如:</p><pre class="line-numbers language-haskell"><code class="language-haskell"><span class="token operator">&lt;</span><span class="token hvariable">input</span> <span class="token keyword">type</span><span class="token operator">=</span><span class="token string">"text"</span> <span class="token hvariable">v</span><span class="token operator">-</span><span class="token hvariable">model</span><span class="token operator">=</span><span class="token string">"msg"</span><span class="token operator">></span><span class="token keyword">data</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;#</span><span class="token number">123</span><span class="token punctuation">;</span>                <span class="token builtin">return</span> <span class="token operator">&amp;#</span><span class="token number">123</span><span class="token punctuation">;</span>                        <span class="token hvariable">msg</span><span class="token operator">:</span> ''                <span class="token operator">&amp;#</span><span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;#</span><span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其实v-model是个语法糖，上面这一段代码和下面这一段代码是一样的效果：</p><pre class="line-numbers language-kotlin"><code class="language-kotlin"><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> <span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"msg"</span> <span class="token label symbol">@input</span><span class="token operator">=</span><span class="token string">"msg = <span class="token interpolation variable">$event</span>.target.value"</span><span class="token operator">></span><span class="token keyword">data</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>        msg<span class="token operator">:</span> <span class="token string">''</span>     &amp;#<span class="token number">125</span><span class="token punctuation">;</span>        &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由此可以看出，v-model=”msg”实则是 :value=”msg” @input=”msg = $event.target.value”的语法糖。这里其实就是监听了表单的input事件，然后修改:value对应的值。除了在输入表单上面可以使用v-model外，在组件上也是可以使用的，<a href="https://link.segmentfault.com/?enc=5qWW0RYXGz16gm+s3FJCMA==.rv24FGszaC/43nRa3BkeG4iPiEcS+dzlqWAS6pwMUetPNUrOTOXtZqFaMUmaBYP25V/oQ78jWF7nxDf9AS3SlVlt2dgbCX6XfSlQkUzOFjh+KBztRQFu7UkYGXceDUbZLGvbRfYK4xiXn9ofo7V9/O3eB41zVc8At0KRUowdoME=">这点官网有提到</a>，但是介绍的不是很详细，导致刚接触的小伙伴会有一种云里雾里不知所云的感觉。既然了解了v-model语法糖本质的用法，那么我们就可以这样实现父子组件的双向数据绑定：</p><p><strong>以上原理实现方法，写法1：</strong></p><p>父组件用法：</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>empty</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>msg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>empty</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>子组件写法：</p><pre class="line-numbers language-awk"><code class="language-awk">// 点击该按钮触发父子组件的数据同步<div class="share-btn" @click="confirm">确定</div>// 接收父组件传递的value值// 注意，这种实现方法，这里只能使用value属性名props: &#123;                value: &#123;                        type: Boolean,                        default: false                &#125;        &#125;,methods: &#123;                confirm () &#123;                        // 双向数据绑定父组件:value对应的值         // 通过$emit触发父组件input事件，第二个参数为传递给父组件的值，这里传递了一个false值         // 可以理解为最上面展示的@input="msg = $event.target.value"这个事件        // 即触发父组件的input事件，并将传递的值‘false’赋值给msg                     this.$emit('input', false)                &#125;        &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这种方式实现了父子组件见v-model双向数据绑定的操作，例如你可以试一下实现一个全局弹窗组件的操作，通过v-model控制弹窗的显示隐藏，因为你要在页面内进行某些操作将他显示出来，控制其隐藏的代码是写在组件里面的，当组件隐藏了对应的也要父组件对应的值改变。</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react数据管理</title>
      <link href="/2021/10/31/react-shu-ju-guan-li/"/>
      <url>/2021/10/31/react-shu-ju-guan-li/</url>
      
        <content type="html"><![CDATA[<h1 id="react数据管理"><a href="#react数据管理" class="headerlink" title="react数据管理"></a>react数据管理</h1><blockquote><p>react数据传递只能通过父子组件的方式，而要实现没有关系的两个组件之间的传递，则需要其他方式。</p><p>以下介绍几种实现方式。</p></blockquote><h3 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h3><p><a href="https://imgtu.com/i/IpEupq"><img src="https://z3.ax1x.com/2021/10/31/IpEupq.png" alt="IpEupq.png"></a></p><h3 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h3><p><a href="https://imgtu.com/i/IpEYN9"><img src="https://z3.ax1x.com/2021/10/31/IpEYN9.png" alt="IpEYN9.png"></a></p><h3 id="方式三"><a href="#方式三" class="headerlink" title="方式三"></a>方式三</h3><p><a href="https://imgtu.com/i/IpE6Nd"><img src="https://z3.ax1x.com/2021/10/31/IpE6Nd.png" alt="IpE6Nd.png"></a></p><blockquote><p>Redux对应的场景，相同的组件保存在跟组件，根组件里面进行修改时，所以组件状态都跟着修改。</p></blockquote><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><p><a href="https://imgtu.com/i/IpEWgP"><img src="https://z3.ax1x.com/2021/10/31/IpEWgP.png" alt="IpEWgP.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react-router</title>
      <link href="/2021/10/31/react-router/"/>
      <url>/2021/10/31/react-router/</url>
      
        <content type="html"><![CDATA[<h1 id="react-router"><a href="#react-router" class="headerlink" title="react-router"></a>react-router</h1><h3 id="Router原理"><a href="#Router原理" class="headerlink" title="Router原理"></a>Router原理</h3><ol><li>历史</li><li>跳转</li><li>事件</li></ol><h3 id="常见的Router"><a href="#常见的Router" class="headerlink" title="常见的Router"></a>常见的Router</h3><ol><li><p>页面Router</p><blockquote><p>页面跳转，页面重新加载，回退也是页面重新加载。</p><pre class="line-numbers language-js"><code class="language-js">window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>herf <span class="token operator">=</span> <span class="token string">"http://www.baidu.com"</span>history<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></blockquote></li><li><p>Hash Router</p><blockquote><p>只有路由的哈希值在变化，只是状态改变，页面不会刷新。</p><pre class="line-numbers language-js"><code class="language-js">window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>herf <span class="token operator">=</span> <span class="token string">"#hash"</span>window<span class="token punctuation">.</span>hashchange <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"current hash"</span><span class="token punctuation">,</span>window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>hash<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></blockquote></li><li><p>H5 Router</p><blockquote><p>功能路由和hash路由是一样的，只是hash路由只能操作hash，h5路由既能操作hash，又能操作路径，只是兼容性差。</p><pre class="line-numbers language-js"><code class="language-js">history<span class="token punctuation">.</span><span class="token function">pushState</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">"title"</span><span class="token punctuation">,</span><span class="token string">"/path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>history<span class="token punctuation">.</span><span class="token function">replaceState</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">,</span><span class="token string">'title'</span><span class="token punctuation">,</span><span class="token string">'path'</span><span class="token punctuation">)</span>window<span class="token punctuation">.</span>onpopstate <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>loaction<span class="token punctuation">.</span>href<span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>pathname<span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>hash<span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>loaction<span class="token punctuation">.</span>search<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote></li></ol><h3 id="React-Router"><a href="#React-Router" class="headerlink" title="React-Router"></a>React-Router</h3><blockquote><p>react提供的路由，只用使用api。</p><p>动态路由，可以和组件用在一起。</p></blockquote><h4 id="一些组件"><a href="#一些组件" class="headerlink" title="一些组件"></a>一些组件</h4><ul><li><BrowerRouter></HashRouter>,路由方式，页面路由和哈希路由</li><li><Route>,路由规则</li><li><Switch>,路由选项</li><li><Link/>/<NavLink>,跳转导航</li><li><Redirect>,自动跳转</li></ul><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><blockquote><p>只需要安装react-router-dom</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash">yarn add react-router-dom@4.2.2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="react-router的基本使用"><a href="#react-router的基本使用" class="headerlink" title="react-router的基本使用"></a>react-router的基本使用</h3><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 创建"外壳"组件App</span><span class="token comment" spellcheck="true">// &amp;#123;compenent&amp;#125;是单独暴露,而非react的解构赋值</span><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> Component <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token keyword">import</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> HashRouter <span class="token keyword">as</span> Router<span class="token punctuation">,</span> Route<span class="token punctuation">,</span>Link <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">from</span> <span class="token string">'react-router-dom'</span><span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        Component A      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">B</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        Component B      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Wrapper</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">"/a"</span><span class="token operator">></span>组件A<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">></span>        <span class="token operator">&lt;</span>br<span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">"/b"</span><span class="token operator">></span>组件B<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">></span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>children<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// import Welcome from "./components/Welcome"</span><span class="token comment" spellcheck="true">// 创建并暴露App组件</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>Router<span class="token operator">></span>          <span class="token operator">&lt;</span>Wrapper<span class="token operator">></span>            <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/a"</span> component<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>A<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>              <span class="token operator">&lt;</span>A <span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>Route<span class="token operator">></span>            <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/b"</span> component<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>B<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>              <span class="token operator">&lt;</span>B <span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>Route<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>Wrapper<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>Router<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://imgtu.com/i/Ipi8J0"><img src="https://z3.ax1x.com/2021/10/31/Ipi8J0.png" alt="Ipi8J0.png"></a></p><p><a href="https://imgtu.com/i/IpisW6"><img src="https://z3.ax1x.com/2021/10/31/IpisW6.md.png" alt="IpisW6.md.png"></a></p><h3 id="传参"><a href="#传参" class="headerlink" title="传参"></a>传参</h3><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 创建"外壳"组件App</span><span class="token comment" spellcheck="true">// &amp;#123;compenent&amp;#125;是单独暴露,而非react的解构赋值</span><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> Component <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token keyword">import</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> BrowserRouter <span class="token keyword">as</span> Router<span class="token punctuation">,</span> Switch<span class="token punctuation">,</span> Route<span class="token punctuation">,</span> Link <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">from</span> <span class="token string">'react-router-dom'</span><span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        Component A        <span class="token operator">&lt;</span>Switch<span class="token operator">></span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* /a/123他会提取a，识别到a就跳转   exact是精准匹配，path是不完全匹配，所以带参数他也匹配到第一条，一般统配的放在后面 */</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>          <span class="token operator">&lt;</span>Route exact path<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token template-string"><span class="token string">`$&amp;#123;this.props.match.path&amp;#125;`</span></span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> render<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">></span>当前组件是不带参数的A<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">/</span><span class="token operator">></span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* 真子路径 */</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>          <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token template-string"><span class="token string">`$&amp;#123;this.props.match.path&amp;#125;/sub`</span></span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> render<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">></span>当前组件是带参数的Sub<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">/</span><span class="token operator">></span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* 传参 */</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>          <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token template-string"><span class="token string">`$&amp;#123;this.props.match.path&amp;#125;/:id`</span></span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> render<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">></span>当前组件是带参数的A<span class="token punctuation">,</span>参数是<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>route<span class="token punctuation">.</span>match<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>Switch<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">B</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        Component B      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Wrapper</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">"/a"</span><span class="token operator">></span>组件A<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">></span>        <span class="token operator">&lt;</span>br <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">"/a/123"</span><span class="token operator">></span>带参数的组件A<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">></span>        <span class="token operator">&lt;</span>br <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">"/b"</span><span class="token operator">></span>组件B<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">></span>        <span class="token operator">&lt;</span>br <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">"/a/sub"</span><span class="token operator">></span>子组件Asub<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">></span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>children<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// import Welcome from "./components/Welcome"</span><span class="token comment" spellcheck="true">// 创建并暴露App组件</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>Router<span class="token operator">></span>          <span class="token operator">&lt;</span>Wrapper<span class="token operator">></span>            <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/a"</span> component<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>A<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>              <span class="token operator">&lt;</span>A <span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>Route<span class="token operator">></span>            <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/b"</span> component<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>B<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>              <span class="token operator">&lt;</span>B <span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>Route<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>Wrapper<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>Router<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://imgtu.com/i/Ipk7qg"><img src="https://z3.ax1x.com/2021/10/31/Ipk7qg.png" alt="Ipk7qg.png"></a></p><p><a href="https://imgtu.com/i/IpkXin"><img src="https://z3.ax1x.com/2021/10/31/IpkXin.png" alt="IpkXin.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yarn与npm语法</title>
      <link href="/2021/10/31/yarn-yu-npm-yu-fa/"/>
      <url>/2021/10/31/yarn-yu-npm-yu-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="yarn与npm语法"><a href="#yarn与npm语法" class="headerlink" title="yarn与npm语法"></a>yarn与npm语法</h1><blockquote><p>yarn相比于npm有很多优势，比如安装速度等等。</p><p>yarn相当于npm的进阶。</p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> yarn -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p><a href="https://imgtu.com/i/ISzrJU"><img src="https://z3.ax1x.com/2021/10/31/ISzrJU.png" alt="ISzrJU.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>map与foreach</title>
      <link href="/2021/10/28/map-yu-foreach/"/>
      <url>/2021/10/28/map-yu-foreach/</url>
      
        <content type="html"><![CDATA[<h3 id="map"><a href="#map" class="headerlink" title="map( )"></a>map( )</h3><blockquote><p><code>**map()**</code> 方法创建一个<strong>新数组</strong>，其结果是该数组中的每个元素是调用一次提供的函数后的返回值。</p></blockquote><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// pass a function to map</span><span class="token keyword">const</span> map1 <span class="token operator">=</span> array1<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>x <span class="token operator">=</span><span class="token operator">></span> x <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// expected output: Array [2, 8, 18, 32]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> points <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>toFlashList<span class="token punctuation">;</span>points<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">new</span> <span class="token class-name">myMarker</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h3><blockquote><p><code>**forEach()**</code> 方法对数组的每个元素执行一次给定的函数。</p><p>相当于遍历，在原数组上进行修改</p></blockquote><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>array1<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>element <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// expected output: "a"</span><span class="token comment" spellcheck="true">// expected output: "b"</span><span class="token comment" spellcheck="true">// expected output: "c"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><blockquote><p>注意二者区别</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react编码流程</title>
      <link href="/2021/10/28/react-bian-ma-liu-cheng/"/>
      <url>/2021/10/28/react-bian-ma-liu-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="功能界面的组件化编码流程（通用）"><a href="#功能界面的组件化编码流程（通用）" class="headerlink" title="功能界面的组件化编码流程（通用）"></a>功能界面的组件化编码流程（通用）</h1><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><ol><li><p>拆分组件: 拆分界面,抽取组件</p></li><li><p>实现静态组件: 使用组件实现静态页面效果</p></li><li><p>实现动态组件</p><p>3.1 动态显示初始化数据</p><p>​    3.1.1 数据类型</p><p>​    3.1.2 数据名称</p><p>​    3.1.2 保存在哪个组件?</p><p>3.2 交互(从绑定事件监听开始)</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react样式模块化</title>
      <link href="/2021/10/28/react-yang-shi-mo-kuai-hua/"/>
      <url>/2021/10/28/react-yang-shi-mo-kuai-hua/</url>
      
        <content type="html"><![CDATA[<h1 id="react样式模块化"><a href="#react样式模块化" class="headerlink" title="react样式模块化"></a>react样式模块化</h1><h3 id="为什么要做模块化"><a href="#为什么要做模块化" class="headerlink" title="为什么要做模块化"></a>为什么要做模块化</h3><blockquote><p>组件样式的名字如果一样，到app.js里面就会冲突</p></blockquote><h3 id="实现样式模块化"><a href="#实现样式模块化" class="headerlink" title="实现样式模块化"></a>实现样式模块化</h3><p>一般引入css只能，</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token string">".index.css"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>不能用变量接。</p><p><a href="https://imgtu.com/i/5qv9Zd"><img src="https://z3.ax1x.com/2021/10/28/5qv9Zd.png" alt="5qv9Zd.png"></a></p><blockquote><p>通过改文件名，加module，然后就可以去接这个样式，样式就保存在hello里面。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react一个hello组件</title>
      <link href="/2021/10/28/react-yi-ge-hello-zu-jian/"/>
      <url>/2021/10/28/react-yi-ge-hello-zu-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="Hello-react"><a href="#Hello-react" class="headerlink" title="Hello react"></a>Hello react</h1><p>app.js文件</p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 创建"外壳"组件App</span><span class="token comment" spellcheck="true">// &amp;#123;compenent&amp;#125;是单独暴露,而非react的解构赋值</span><span class="token keyword">import</span> React<span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>Component<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        hello react      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>{compenent}是单独暴露,而非react的解构赋值</p><p>react用了多种暴露的形式如下所示：</p><p>module.js</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> React <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>React<span class="token punctuation">.</span>Component <span class="token operator">=</span> Component<span class="token keyword">export</span> <span class="token keyword">default</span> React<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用分别暴露的形式暴露Component</p><p>其实也可以这样再app.js引入</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'./moudles.js'</span><span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>Component<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> Reactconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Component</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></blockquote><p>index.js文件</p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 引入react核心库</span><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 引入ReactDom</span><span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">'react-dom'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'./index.css'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 引入app组件</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 引入性能检测的库</span><span class="token keyword">import</span> reportWebVitals <span class="token keyword">from</span> <span class="token string">'./reportWebVitals'</span><span class="token punctuation">;</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>  <span class="token comment" spellcheck="true">//外面的标签能帮我们检查代码</span>  <span class="token operator">&lt;</span>React<span class="token punctuation">.</span>StrictMode<span class="token operator">></span>    <span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>React<span class="token punctuation">.</span>StrictMode<span class="token operator">></span><span class="token punctuation">,</span>  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// If you want to start measuring performance in your app, pass a function</span><span class="token comment" spellcheck="true">// to log results (for example: reportWebVitals(console.log))</span><span class="token comment" spellcheck="true">// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals</span><span class="token function">reportWebVitals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="简化后"><a href="#简化后" class="headerlink" title="简化后"></a>简化后</h3><p>目录机构:</p><p><a href="https://imgtu.com/i/5qRgl6"><img src="https://z3.ax1x.com/2021/10/28/5qRgl6.png" alt="5qRgl6.png"></a></p><p>Hello文件中的index.jsx即是组件</p><pre class="line-numbers language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React<span class="token punctuation">,</span><span class="token entity" title="&#123;">&amp;#123;</span>Component<span class="token entity" title="&#125;">&amp;#125;</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token keyword">import</span> <span class="token string">'./index.css'</span><span class="token comment" spellcheck="true">// 创建并暴露App组件</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Hello</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span><span class="token entity" title="&#123;">&amp;#123;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token entity" title="&#123;">&amp;#123;</span>    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hello<span class="token punctuation">,</span>React<span class="token operator">!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>  <span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对应样式</p><pre class="line-numbers language-css"><code class="language-css"><span class="token number">.</span>title&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><a href="https://imgtu.com/i/5qWeAJ"><img src="https://z3.ax1x.com/2021/10/28/5qWeAJ.png" alt="5qWeAJ.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react脚手架</title>
      <link href="/2021/10/28/react-jiao-shou-jia/"/>
      <url>/2021/10/28/react-jiao-shou-jia/</url>
      
        <content type="html"><![CDATA[<h1 id="react脚手架"><a href="#react脚手架" class="headerlink" title="react脚手架"></a>react脚手架</h1><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><blockquote><p>之前的代码不是开发环境，编码慢，用脚手架可以快速编码。</p><p>react脚手架是用webpack搭建的。</p><p>但不需要手动配置，facebook已经为我们做好了一个脚手架。</p><p>前端三大框架Angular,React,Vue都有自己的脚手架。</p></blockquote><h3 id="react脚手架-1"><a href="#react脚手架-1" class="headerlink" title="react脚手架"></a>react脚手架</h3><ol><li>xxx脚手架用来帮助程序员快速搭建一个基于xxx库的模板项目。<ul><li>包含了所有需要的配置(语法检查、jsx编译、devSever)。</li><li>下载好所有的相关依赖。</li><li>可以直接运一个简单效果</li></ul></li><li>react提供了一个用于创建react项目的脚手架库(create-react-app)，基于react脚手架的项目，一般直接叫搭建react脚手架。</li><li>项目的整体技术架构：react+webpack+es6+eslint</li><li>使用脚手架开发项目的特点：模块化，组件化，工程化。</li></ol><blockquote><p>工程化，就是用 webpack搭建项目，到编译，语法检查，编译，一条龙服务，全自动的项目，就是一个工程化的项目，类似于生产线。</p></blockquote><h3 id="创建项目并启动"><a href="#创建项目并启动" class="headerlink" title="创建项目并启动"></a>创建项目并启动</h3><p><strong><em>\</em>第一步**</strong>，全局安装：npm i -g create-react-app</p><p><strong><em>\</em>第二步**</strong>，切换到想创项目的目录，使用命令：create-react-app hello-react</p><p><strong><em>\</em>第三步**</strong>，进入项目文件夹：cd hello-react</p><p><strong><em>\</em>第四步**</strong>，启动项目：npm start</p><blockquote><p>npm与yarn一样的功能，只不过推荐使用yarn，因为react和yarn都是facebook开发的。</p></blockquote><p><a href="https://imgtu.com/i/5qaZut"><img src="https://z3.ax1x.com/2021/10/28/5qaZut.md.png" alt="5qaZut.md.png"></a></p><blockquote><p>npm run eject是把webpack本隐藏的文件暴露出来，不可逆。</p><p>npm test 用于测试。</p></blockquote><h3 id="脚手架文件介绍"><a href="#脚手架文件介绍" class="headerlink" title="脚手架文件介绍"></a>脚手架文件介绍</h3><pre class="line-numbers language-#"><code class="language-#">    public ---- 静态资源文件夹        favicon.icon ------ 网站页签图标        index.html -------- 主页面        logo192.png ------- logo图        logo512.png ------- logo图        manifest.json ----- 应用加壳的配置文件        robots.txt -------- 爬虫协议文件src ---- 源码文件夹        App.css -------- App组件的样式        App.js --------- App组件        App.test.js ---- 用于给App做测试        index.css ------ 样式，通用性        index.js ------- 入口文件        logo.svg ------- logo图        reportWebVitals.js            --- 页面性能分析文件(需要web-vitals库的支持)        setupTests.js            ---- 组件单元测试的文件(需要jest-dom库的支持)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>html文件：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入图标，%PUBLIC_URL%代表public文件夹路径 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>icon<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>%PUBLIC_URL%/favicon.ico<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 开启理想视口，用做移动端网页适配 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 用于配置浏览器页签+地址栏的颜色(仅仅支持安卓手机浏览器，且兼容性不好) --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>theme-color<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#000000<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 用于描述网页，用于搜索爬虫 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span>      <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span>      <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Web site created using create-react-app<span class="token punctuation">"</span></span>    <span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 用于指定网页添加到手机屏幕后的图标，仅仅支持苹果手机 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>apple-touch-icon<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>%PUBLIC_URL%/logo192.png<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 用于应用加壳，应用加壳时候的配置文件 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>manifest<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>%PUBLIC_URL%/manifest.json<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>React App<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 若浏览器不支持js,则展示标签中的内容 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>noscript</span><span class="token punctuation">></span></span>You need to enable JavaScript to run this app.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>noscript</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用客户端开发，安卓和ios应用呀学java</p><blockquote><p>Android  java</p><p>ios     oc swift</p></blockquote><p>我们现在是web端开发，开发的是spa项目，s大一，p页面，a应用。写的是网页。要转换为客户端应用，有一种实现方式，就是先用框架生成html项目，通过应用加壳可以实现转换为apk和ios应用，壳里面是html即是网页，要么就用Java直接开发</p>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react生命周期(新)</title>
      <link href="/2021/10/25/react-sheng-ming-zhou-qi-xin/"/>
      <url>/2021/10/25/react-sheng-ming-zhou-qi-xin/</url>
      
        <content type="html"><![CDATA[<h1 id="react生命周期-新"><a href="#react生命周期-新" class="headerlink" title="react生命周期(新)"></a>react生命周期(新)</h1><h3 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h3><blockquote><p>即将废弃两个，新加两个</p><p><a href="https://imgtu.com/i/5hzAIg"><img src="https://z3.ax1x.com/2021/10/25/5hzAIg.png" alt="5hzAIg.png"></a></p><p>废弃的需要加unsafe才可以使用</p><p><a href="https://imgtu.com/i/5hz3oF"><img src="https://z3.ax1x.com/2021/10/25/5hz3oF.png" alt="5hz3oF.png"></a></p></blockquote><h3 id="生命周期函数-新"><a href="#生命周期函数-新" class="headerlink" title="生命周期函数(新)"></a>生命周期函数(新)</h3><p><a href="https://imgtu.com/i/54etE9"><img src="https://z3.ax1x.com/2021/10/25/54etE9.png" alt="54etE9.png"></a></p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个“容器” --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/17.1/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/17.1/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/17.1/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入proptypes,用于对组件标签属性进行限制--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/prop-types.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// 1.创建类式组件</span>          <span class="token keyword">class</span> <span class="token class-name">Count</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 构造器</span>            <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"count-constructor"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 初始化状态</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> count<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            state <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> count<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            add <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 获取原状态</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> count <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state                <span class="token comment" spellcheck="true">//跟新状态</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> count<span class="token punctuation">:</span> count <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            death <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                ReactDOM<span class="token punctuation">.</span><span class="token function">unmountComponentAtNode</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 强制更新状态</span>            force <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">forceUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//组件挂完毕后的勾子</span>            <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"count-componentDidMount"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//组件将要卸载的钩子</span>            <span class="token function">componentWillUnmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"count-componentWillUnmount"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//控制组件跟新的"阀门",不写react自己生成且返回一个值为真，如果写上，则需要手动写返回值，且为布尔值，true打开，false关闭</span>            <span class="token function">shouldComponentUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"count-shouldComponentUpdate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//组件跟新完毕的钩子,第三个是参数是快照，在跟新之前获取快照</span>            <span class="token function">componentDidUpdate</span><span class="token punctuation">(</span>preprops<span class="token punctuation">,</span>prestate<span class="token punctuation">,</span>Snapshot<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"count-componentDidUpdate"</span><span class="token punctuation">,</span>preprops<span class="token punctuation">,</span>prestate<span class="token punctuation">,</span>Snapshot<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//若state的值在任何时候却决于props，那么可以使用getDerivedStateFromProps</span>            <span class="token keyword">static</span>  <span class="token function">getDerivedStateFromProps</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span>state<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"getDerivedStateFromProps"</span><span class="token punctuation">,</span>props<span class="token punctuation">,</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 返回状态对象，或者null</span>                <span class="token keyword">return</span> <span class="token keyword">null</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">getSnapshotBeforeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"getSnapshotBeforeUpdate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token string">"guigu"</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">//初始化渲染、状态跟新之后</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 以下是jsx，后会被转换为html，被babel转</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> count <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"count-render"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>                    <span class="token operator">&lt;</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span>h2<span class="token operator">></span>当前求和为<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>count<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>                        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>add<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>点我加一<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>                        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>death<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>点我卸载<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>                        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>force<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>不更改任何状态中的数据，强制更新一下<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>              <span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 初始化状态</span>            state <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>carName<span class="token punctuation">:</span><span class="token string">"奔驰"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            changeCar <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>carName<span class="token punctuation">:</span><span class="token string">"奥托"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>                    <span class="token operator">&lt;</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span>div<span class="token operator">></span>我是a组件<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>changeCar<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>换车<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>                        <span class="token operator">&lt;</span>B carName<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>carName<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">/</span><span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>               <span class="token keyword">class</span> <span class="token class-name">B</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//第一次接受的props不调用</span>            <span class="token function">UNSAFE_componentWillReceiveProps</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"B-componentWillReceiveProps"</span><span class="token punctuation">,</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">shouldComponentUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"B-shouldComponentUpdate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//组件将要跟新的钩子</span>            <span class="token function">componentWillUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"B-componentWillUpdate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//组件跟新完毕的钩子</span>            <span class="token function">componentDidUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"B-componentDidUpdate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"B-render"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>                    <span class="token operator">&lt;</span>div<span class="token operator">></span>我是B组件，接受到的车是：<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>carName<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Count count<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">199</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="getSnapshotBeforeUpdate举例"><a href="#getSnapshotBeforeUpdate举例" class="headerlink" title="getSnapshotBeforeUpdate举例"></a>getSnapshotBeforeUpdate举例</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个“容器” --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token number">.</span>list &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">150</span>px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/* 设置为滑动 */</span>            <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token number">.</span>news &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/17.1/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/17.1/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/17.1/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入proptypes,用于对组件标签属性进行限制--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/prop-types.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// 1.创建类式组件</span>        <span class="token keyword">class</span> <span class="token class-name">NewsList</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                       state <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> newsArr<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            add <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 获取原状态</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> count <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state                <span class="token comment" spellcheck="true">//跟新状态</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> count<span class="token punctuation">:</span> count <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            death <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                ReactDOM<span class="token punctuation">.</span><span class="token function">unmountComponentAtNode</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 强制更新状态</span>            force <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">forceUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//组件挂完毕后的勾子</span>            <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"count-componentDidMount"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">//获取原状态</span>                    <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>newsArr<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state                    <span class="token comment" spellcheck="true">// 模拟一条新闻</span>                    <span class="token keyword">const</span> news <span class="token operator">=</span> <span class="token string">"新闻"</span> <span class="token operator">+</span><span class="token punctuation">(</span>newsArr<span class="token punctuation">.</span>length<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>                    <span class="token comment" spellcheck="true">// 跟新状态</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>newsArr<span class="token punctuation">:</span><span class="token punctuation">[</span>news<span class="token punctuation">,</span><span class="token operator">...</span>newsArr<span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//组件将要卸载的钩子</span>            <span class="token function">componentWillUnmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"count-componentWillUnmount"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//控制组件跟新的"阀门",不写react自己生成且返回一个值为真，如果写上，则需要手动写返回值，且为布尔值，true打开，false关闭</span>            <span class="token function">shouldComponentUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"count-shouldComponentUpdate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//组件跟新完毕的钩子,第三个是参数是快照，在跟新之前获取快照</span>            <span class="token function">componentDidUpdate</span><span class="token punctuation">(</span>preprops<span class="token punctuation">,</span> prestate<span class="token punctuation">,</span> height<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// console.log("count-componentDidUpdate", preprops, prestate, Snapshot);</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>refs<span class="token punctuation">.</span>list<span class="token punctuation">.</span>scrollTop <span class="token operator">+</span><span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>refs<span class="token punctuation">.</span>list<span class="token punctuation">.</span>scrollHeight <span class="token operator">-</span> height            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//若state的值在任何时候却决于props，那么可以使用getDerivedStateFromProps</span>            <span class="token keyword">static</span> <span class="token function">getDerivedStateFromProps</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> state<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"getDerivedStateFromProps"</span><span class="token punctuation">,</span> props<span class="token punctuation">,</span> state<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 返回状态对象，或者null</span>                <span class="token keyword">return</span> <span class="token keyword">null</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">getSnapshotBeforeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>refs<span class="token punctuation">.</span>list<span class="token punctuation">.</span>scrollHeight            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//初始化渲染、状态跟新之后</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 以下是jsx，后会被转换为html，被babel转</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> count <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"count-render"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>                    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"list"</span> ref<span class="token operator">=</span><span class="token string">"list"</span><span class="token operator">></span>                       <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                           <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>newsArr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span>index<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                               <span class="token keyword">return</span> <span class="token operator">&lt;</span>div key<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>index<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> className<span class="token operator">=</span><span class="token string">"news"</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>n<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                           <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>                       <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 初始化状态</span>            state <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> carName<span class="token punctuation">:</span> <span class="token string">"奔驰"</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            changeCar <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> carName<span class="token punctuation">:</span> <span class="token string">"奥托"</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>                    <span class="token operator">&lt;</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span>div<span class="token operator">></span>我是a组件<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>changeCar<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>换车<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>                        <span class="token operator">&lt;</span>B carName<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>carName<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">/</span><span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">class</span> <span class="token class-name">B</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//第一次接受的props不调用</span>            <span class="token function">UNSAFE_componentWillReceiveProps</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"B-componentWillReceiveProps"</span><span class="token punctuation">,</span> props<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">shouldComponentUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"B-shouldComponentUpdate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//组件将要跟新的钩子</span>            <span class="token function">componentWillUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"B-componentWillUpdate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//组件跟新完毕的钩子</span>            <span class="token function">componentDidUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"B-componentDidUpdate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"B-render"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>                    <span class="token operator">&lt;</span>div<span class="token operator">></span>我是B组件，接受到的车是：<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>carName<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>NewsList <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><a href="https://imgtu.com/i/54mLee"><img src="https://z3.ax1x.com/2021/10/25/54mLee.png" alt="54mLee.png"></a></p><p><a href="https://imgtu.com/i/54nFeg"><img src="https://z3.ax1x.com/2021/10/25/54nFeg.png" alt="54nFeg.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react生命周期(旧)</title>
      <link href="/2021/10/25/react-sheng-ming-zhou-qi-jiu/"/>
      <url>/2021/10/25/react-sheng-ming-zhou-qi-jiu/</url>
      
        <content type="html"><![CDATA[<h1 id="React生命周期"><a href="#React生命周期" class="headerlink" title="React生命周期"></a>React生命周期</h1><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ol><li>组件从创建到死亡它会经历一些特定的阶段</li><li>React组件中包含一系列勾子函数(生命周期函数)，会在特定时刻调用。</li><li>我们在定义组件时，会在特定的生命周期回调函数中，给特定的工作。</li></ol><blockquote><p>生命周期回调函数&lt;=&gt;生命周期钩子函数&lt;=&gt;生命周期函数&lt;=&gt;生命周期钩子。</p><p>生命周期回调就是，react会在不同的生命周期帮你掉生命周期函数，例如react.render()。</p><p>生命周期钩子，就是到合适的生命周期，把他勾出来调用。</p></blockquote><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><blockquote><p>每一次更新状态，render()就会被调一次，加初始化的一次，一共n+1次，n是改变状态的次数。</p></blockquote><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个“容器” --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入proptypes,用于对组件标签属性进行限制--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/prop-types.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// 1.创建类式组件</span>        <span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            state <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> opacity<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            death <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 卸载组件</span>                ReactDOM<span class="token punctuation">.</span><span class="token function">unmountComponentAtNode</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            action <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">// 获取原状态</span>                    <span class="token keyword">let</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> opacity <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state                    <span class="token comment" spellcheck="true">//减小0.1</span>                    opacity <span class="token operator">-</span><span class="token operator">=</span> <span class="token number">0.1</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>opacity <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> opacity <span class="token operator">=</span> <span class="token number">1</span>                    <span class="token comment" spellcheck="true">//设置新的透明度</span>                    <span class="token comment" spellcheck="true">// this.setState(&amp;#123;opacity:opacity&amp;#125;)</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> opacity <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//组件挂完毕后</span>            <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>timer <span class="token operator">=</span>    <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">// 获取原状态</span>                    <span class="token keyword">let</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> opacity <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state                    <span class="token comment" spellcheck="true">//减小0.1</span>                    opacity <span class="token operator">-</span><span class="token operator">=</span> <span class="token number">0.1</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>opacity <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> opacity <span class="token operator">=</span> <span class="token number">1</span>                    <span class="token comment" spellcheck="true">//设置新的透明度</span>                    <span class="token comment" spellcheck="true">// this.setState(&amp;#123;opacity:opacity&amp;#125;)</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> opacity <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//组件将要卸载</span>            <span class="token function">componentWillUnmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//情空定时器</span>                <span class="token function">clearInterval</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>timer<span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//初始化渲染、状态跟新之后</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 以下是jsx，后会被转换为html，被babel转</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"@"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>                        <span class="token operator">&lt;</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span>h2 style<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> opacity<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>opacity <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>React学不会怎么办？<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>                        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>death<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>不活了<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>                        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>action<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>开始变化<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Demo <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h3><p><a href="https://imgtu.com/i/5hBBp6"><img src="https://z3.ax1x.com/2021/10/25/5hBBp6.png" alt="5hBBp6.png"></a></p><blockquote><p>1.组件被卸载了，无法跟新状态。</p><p>2.所以上面的例子，得清空定时器。</p></blockquote><h3 id="生命周期勾子-旧"><a href="#生命周期勾子-旧" class="headerlink" title="生命周期勾子(旧)"></a>生命周期勾子(旧)</h3><p><a href="https://imgtu.com/i/5hyUKK"><img src="https://z3.ax1x.com/2021/10/25/5hyUKK.png" alt="5hyUKK.png"></a></p><h4 id="演示setState-和forceUpdate"><a href="#演示setState-和forceUpdate" class="headerlink" title="演示setState()和forceUpdate()"></a>演示setState()和forceUpdate()</h4><pre class="line-numbers language-js"><code class="language-js">   <span class="token keyword">class</span> <span class="token class-name">Count</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 构造器</span>            <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"count-constructor"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 初始化状态</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> count<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            state <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> count<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            add <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 获取原状态</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> count <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state                <span class="token comment" spellcheck="true">//跟新状态</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> count<span class="token punctuation">:</span> count <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            death <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                ReactDOM<span class="token punctuation">.</span><span class="token function">unmountComponentAtNode</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 强制更新状态</span>            force <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">forceUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 组件将要挂载的勾子</span>            <span class="token function">componentWillMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"count-componentWillMount"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//组件挂完毕后的勾子</span>            <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"count-componentDidMount"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//组件将要卸载的钩子</span>            <span class="token function">componentWillUnmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"count-componentWillUnmount"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//控制组件跟新的"阀门",不写react自己生成且返回一个值为真，如果写上，则需要手动写返回值，且为布尔值，true打开，false关闭</span>            <span class="token function">shouldComponentUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"count-shouldComponentUpdate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//组件将要跟新的钩子</span>            <span class="token function">componentWillUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"count-componentWillUpdate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//组件跟新完毕的钩子</span>            <span class="token function">componentDidUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"count-componentDidUpdate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//初始化渲染、状态跟新之后</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 以下是jsx，后会被转换为html，被babel转</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> count <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"count-render"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>                    <span class="token operator">&lt;</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span>h2<span class="token operator">></span>当前求和为<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>count<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>                        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>add<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>点我加一<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>                        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>death<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>点我卸载<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>                        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>force<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>不更改任何状态中的数据，强制更新一下<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Count <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="演示父组件"><a href="#演示父组件" class="headerlink" title="演示父组件"></a>演示父组件</h3><pre class="line-numbers language-js"><code class="language-js">    <span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 初始化状态</span>            state <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>carName<span class="token punctuation">:</span><span class="token string">"奔驰"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            changeCar <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>carName<span class="token punctuation">:</span><span class="token string">"奥托"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>                    <span class="token operator">&lt;</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span>div<span class="token operator">></span>我是a组件<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>changeCar<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>换车<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>                        <span class="token operator">&lt;</span>B carName<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>carName<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">/</span><span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">class</span> <span class="token class-name">B</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//第一次接受的props不调用</span>            <span class="token function">componentWillReceiveProps</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"B-componentWillReceiveProps"</span><span class="token punctuation">,</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">shouldComponentUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"B-shouldComponentUpdate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//组件将要跟新的钩子</span>            <span class="token function">componentWillUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"B-componentWillUpdate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//组件跟新完毕的钩子</span>            <span class="token function">componentDidUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"B-componentDidUpdate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"B-render"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>                    <span class="token operator">&lt;</span>div<span class="token operator">></span>我是B组件，接受到的车是：<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>carName<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>A <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="总结-旧"><a href="#总结-旧" class="headerlink" title="总结(旧)"></a>总结(旧)</h3><p>点击图片查看</p><blockquote><p><a href="https://imgtu.com/i/5hhIgJ"><img src="https://z3.ax1x.com/2021/10/25/5hhIgJ.png" alt="5hhIgJ.png"></a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对象相关知识</title>
      <link href="/2021/10/24/dui-xiang-xiang-guan-zhi-shi/"/>
      <url>/2021/10/24/dui-xiang-xiang-guan-zhi-shi/</url>
      
        <content type="html"><![CDATA[<h3 id="对象相关的知识"><a href="#对象相关的知识" class="headerlink" title="对象相关的知识"></a>对象相关的知识</h3><h3 id="读函数变量"><a href="#读函数变量" class="headerlink" title="读函数变量"></a>读函数变量</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token string">"name"</span>    <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//期待效果&amp;#123;name:'tom'&amp;#125;</span>    <span class="token comment" spellcheck="true">// 方法一：写入</span>    <span class="token comment" spellcheck="true">// obj.name = "tom"</span>    <span class="token comment" spellcheck="true">// console.log(obj);</span>        <span class="token comment" spellcheck="true">// 方法二：读变量读出来</span>    obj<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"tom"</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数柯里化</title>
      <link href="/2021/10/24/han-shu-ke-li-hua/"/>
      <url>/2021/10/24/han-shu-ke-li-hua/</url>
      
        <content type="html"><![CDATA[<h1 id="函数柯里化"><a href="#函数柯里化" class="headerlink" title="函数柯里化"></a>函数柯里化</h1><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token comment" spellcheck="true">// function sum(a,b,c)&amp;#123;</span>    <span class="token comment" spellcheck="true">//     return a+b+c</span>    <span class="token comment" spellcheck="true">// &amp;#125;</span>    <span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> a<span class="token operator">+</span>b<span class="token operator">+</span>c            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//sum(1)是定义个函数，sum(1)(2)也是定义的函数</span>    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react高级函数和函数柯里化</title>
      <link href="/2021/10/24/react-gao-ji-han-shu-he-han-shu-ke-li-hua/"/>
      <url>/2021/10/24/react-gao-ji-han-shu-he-han-shu-ke-li-hua/</url>
      
        <content type="html"><![CDATA[<h1 id="react高级函数-函数柯里化"><a href="#react高级函数-函数柯里化" class="headerlink" title="react高级函数_函数柯里化"></a>react高级函数_函数柯里化</h1><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><blockquote><p>高阶函数：如果一个函数符合下面两个规范中的任何一个，那么该函数就是高阶函数。</p><p>​     1.若A函数，接收到的参数是一个函数，那么A就可以称之为高级函数。</p><p>​      2.若A函数，调用的返回值依然是一个函数，那么a就可以称之为高阶函数。</p><p>​        常见的高级函数：Promise，settimeout符合第一种，arr.map()</p><p>函数柯里化：通过函数调用继续返回函数的方式，实现多次接受参数最后统一处理的函数编码形式。</p></blockquote><h3 id="react函数柯里化"><a href="#react函数柯里化" class="headerlink" title="react函数柯里化"></a>react函数柯里化</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个“容器” --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入proptypes,用于对组件标签属性进行限制--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/prop-types.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// 1.创建类式组件</span>        <span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            state <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                username<span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">,</span>                password<span class="token punctuation">:</span><span class="token string">""</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 保存用户名到状态中</span>            saveFormData <span class="token operator">=</span> <span class="token punctuation">(</span>dataType<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token punctuation">[</span>dataType<span class="token punctuation">]</span><span class="token punctuation">:</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 保存密码到状态中</span>            handleSubmit <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//组织表单提交</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>username<span class="token punctuation">,</span>password<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`你输入的用户名：$&amp;#123;username.value&amp;#125;,你输入的密码：$&amp;#123;password.value&amp;#125;`</span></span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 以下是jsx，后会被转换为html，被babel转</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>                    <span class="token operator">&lt;</span>form onSubmit<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleSubmit<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>                        用户名： <span class="token operator">&lt;</span>input onChange<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">saveFormData</span><span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"username"</span> <span class="token operator">/</span><span class="token operator">></span>                        密码<span class="token punctuation">:</span>   <span class="token operator">&lt;</span>input onChange<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">saveFormData</span><span class="token punctuation">(</span><span class="token string">'password'</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> type<span class="token operator">=</span><span class="token string">"password"</span> name<span class="token operator">=</span><span class="token string">"password"</span> <span class="token operator">/</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>button<span class="token operator">></span>登录<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Demo <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>1.onClick(this.saveFormData()),意思是回调this.saveFormData()函数,是onclick调</p><p>2.onClick(this.saveFormData(“username”)),意思是回调saveFormData(“username”)自己调用后的返回的结果，其实onClick调用的是saveFormData(“username”)返回的结果</p><p>3.如果this.saveFormData(“username”)把定义为上面所写的函数，则表示OnClick调用的是上面的那个箭头函数，所以event要写在箭头函数的形参里面，而saveFormData()接的参数是调用时候写的“username”</p><p>4.相当于闭包</p></blockquote><h3 id="不用函数柯里化"><a href="#不用函数柯里化" class="headerlink" title="不用函数柯里化"></a>不用函数柯里化</h3><blockquote><p>直接回调一个箭头函数，箭头函数里面调用改变状态函数。</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个“容器” --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入proptypes,用于对组件标签属性进行限制--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/prop-types.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// 1.创建类式组件</span>        <span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            state <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                username<span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">,</span>                password<span class="token punctuation">:</span><span class="token string">""</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 保存用户名到状态中</span>            saveFormData <span class="token operator">=</span> <span class="token punctuation">(</span>dataType<span class="token punctuation">,</span>event<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token punctuation">[</span>dataType<span class="token punctuation">]</span><span class="token punctuation">:</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 保存密码到状态中</span>            handleSubmit <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//组织表单提交</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>username<span class="token punctuation">,</span>password<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`你输入的用户名：$&amp;#123;username.value&amp;#125;,你输入的密码：$&amp;#123;password.value&amp;#125;`</span></span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 以下是jsx，后会被转换为html，被babel转</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>                    <span class="token operator">&lt;</span>form onSubmit<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleSubmit<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>                        用户名： <span class="token operator">&lt;</span>input onChange<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>event <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">saveFormData</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span>event<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"username"</span> <span class="token operator">/</span><span class="token operator">></span>                        密码<span class="token punctuation">:</span>   <span class="token operator">&lt;</span>input onChange<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>event <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">saveFormData</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">,</span>event<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> type<span class="token operator">=</span><span class="token string">"password"</span> name<span class="token operator">=</span><span class="token string">"password"</span> <span class="token operator">/</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>button<span class="token operator">></span>登录<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Demo <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react的事件处理</title>
      <link href="/2021/10/24/react-de-shi-jian-chu-li/"/>
      <url>/2021/10/24/react-de-shi-jian-chu-li/</url>
      
        <content type="html"><![CDATA[<h1 id="react的事件处理"><a href="#react的事件处理" class="headerlink" title="react的事件处理"></a>react的事件处理</h1><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><blockquote><p>1)通过onXxxx属性指定事件处理函数(注意大小写)。</p><p>​    a.React使用的是自定义(合成)事件，而不是使用原生DOM事件。    ——为了更好的兼容性</p><p>​    b.React中的事件是通过事件委托方式处理的(委托给组件最外层的元素)。    ——为了高效</p><p>2)通过event.target得到发生事件的DOM元素对象。     ————不要过度使用ref</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个“容器” --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入proptypes,用于对组件标签属性进行限制--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/prop-types.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// 1.创建类式组件</span>        <span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//创建ref容器</span>            myRef <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            myRef2 <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">//展示左侧输入框的内容</span>            showData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>myRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//展示右侧输入框的数据</span>            showData2 <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token function">alert</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 以下是jsx，后会被转换为html，被babel转</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>                    <span class="token operator">&lt;</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span>input ref<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>myRef<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> type<span class="token operator">=</span><span class="token string">"text"</span> placeholder<span class="token operator">=</span><span class="token string">"点击按钮提示数据"</span> <span class="token operator">/</span><span class="token operator">></span> <span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>                        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>showData<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>点我提示左侧的数据<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span> <span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>                        <span class="token operator">&lt;</span>input  onBlur<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>showData2<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> type<span class="token operator">=</span><span class="token string">"text"</span> placeholder<span class="token operator">=</span><span class="token string">"点击按钮提示数据"</span> <span class="token operator">/</span><span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Demo <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react非受控组件和受控组件</title>
      <link href="/2021/10/24/react-fei-shou-kong-zu-jian-he-shou-kong-zu-jian/"/>
      <url>/2021/10/24/react-fei-shou-kong-zu-jian-he-shou-kong-zu-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="react非受控组件和受控组件"><a href="#react非受控组件和受控组件" class="headerlink" title="react非受控组件和受控组件"></a>react非受控组件和受控组件</h1><h3 id="非受控组件"><a href="#非受控组件" class="headerlink" title="非受控组件"></a>非受控组件</h3><blockquote><p>现用现取</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个“容器” --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入proptypes,用于对组件标签属性进行限制--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/prop-types.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// 1.创建类式组件</span>        <span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            handleSubmit <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//组织表单提交</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>username<span class="token punctuation">,</span>password<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`你输入的用户名：$&amp;#123;username.value&amp;#125;,你输入的密码：$&amp;#123;password.value&amp;#125;`</span></span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 以下是jsx，后会被转换为html，被babel转</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>                    <span class="token operator">&lt;</span>form onSubmit<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleSubmit<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>                        用户名：<span class="token operator">&lt;</span>input ref<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>c <span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> c<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"username"</span> <span class="token operator">/</span><span class="token operator">></span>                        密码<span class="token punctuation">:</span>  <span class="token operator">&lt;</span>input ref<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>c <span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> c<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> type<span class="token operator">=</span><span class="token string">"password"</span> name<span class="token operator">=</span><span class="token string">"password"</span> <span class="token operator">/</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>button<span class="token operator">></span>登录<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Demo <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="受控组件"><a href="#受控组件" class="headerlink" title="受控组件"></a>受控组件</h3><blockquote><p>先存在状态里面，用的时候再取，类似于双向绑定。</p><p>react里面没有双向绑定。</p><p>提交时候再取state里面的用户名和密码。</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个“容器” --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入proptypes,用于对组件标签属性进行限制--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/prop-types.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// 1.创建类式组件</span>        <span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            state <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                username<span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">,</span>                password<span class="token punctuation">:</span><span class="token string">""</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">// 保存用户名到状态中</span>            saveUsername <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>username<span class="token punctuation">:</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            savePassword <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>password<span class="token punctuation">:</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 保存密码到状态中</span>            handleSubmit <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//组织表单提交</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>username<span class="token punctuation">,</span>password<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`你输入的用户名：$&amp;#123;username.value&amp;#125;,你输入的密码：$&amp;#123;password.value&amp;#125;`</span></span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 以下是jsx，后会被转换为html，被babel转</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>                    <span class="token operator">&lt;</span>form onSubmit<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleSubmit<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>                        用户名： <span class="token operator">&lt;</span>input onChange<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>saveUsername<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"username"</span> <span class="token operator">/</span><span class="token operator">></span>                        密码<span class="token punctuation">:</span>   <span class="token operator">&lt;</span>input onChange<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>savePassword<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> type<span class="token operator">=</span><span class="token string">"password"</span> name<span class="token operator">=</span><span class="token string">"password"</span> <span class="token operator">/</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>button<span class="token operator">></span>登录<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Demo <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react组件实例的属性ref</title>
      <link href="/2021/10/24/react-zu-jian-shi-li-de-shu-xing-ref/"/>
      <url>/2021/10/24/react-zu-jian-shi-li-de-shu-xing-ref/</url>
      
        <content type="html"><![CDATA[<h1 id="组件实例的三大核心属性-1-ref-类组件"><a href="#组件实例的三大核心属性-1-ref-类组件" class="headerlink" title="组件实例的三大核心属性  1.ref(类组件)"></a>组件实例的三大核心属性  1.ref(类组件)</h1><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><blockquote><p>1.组件内的标签可以定义ref属性来标识自己。</p><p>2.标识用ref，生成的属性是ref。</p></blockquote><h3 id="原生的id到ref"><a href="#原生的id到ref" class="headerlink" title="原生的id到ref"></a>原生的id到ref</h3><p>原生id:</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个“容器” --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入proptypes,用于对组件标签属性进行限制--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/prop-types.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// 1.创建类式组件</span>        <span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//展示左侧输入框的内容</span>            showData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"input1"</span><span class="token punctuation">)</span>                <span class="token function">alert</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span>value<span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>                   <span class="token operator">&lt;</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span>input id<span class="token operator">=</span> <span class="token string">"input1"</span> type<span class="token operator">=</span><span class="token string">"text"</span> placeholder <span class="token operator">=</span><span class="token string">"点击按钮提示数据"</span> <span class="token operator">/</span><span class="token operator">></span> <span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>                    <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>showData<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>点我提示左侧的数据<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span> <span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>                    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> placeholder <span class="token operator">=</span><span class="token string">"点击按钮提示数据"</span> <span class="token operator">/</span><span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Demo<span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>字符串形式的ref，ref是针对react设计的，id则是原生的。</p></blockquote><h3 id="字符串形式ref"><a href="#字符串形式ref" class="headerlink" title="字符串形式ref"></a>字符串形式ref</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个“容器” --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入proptypes,用于对组件标签属性进行限制--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/prop-types.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// 1.创建类式组件</span>        <span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//展示左侧输入框的内容</span>            showData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//  this的指向是Demo的实例对象，因为组件创建的函数只能供实例对象调用，this是谁调用指向谁</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> input1 <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>refs                <span class="token function">alert</span><span class="token punctuation">(</span>input1<span class="token punctuation">.</span>value<span class="token punctuation">)</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            showData2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> input2 <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>refs                <span class="token function">alert</span><span class="token punctuation">(</span>input2<span class="token punctuation">.</span>value<span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 以下是jsx，后会被转换为html，被babel转</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>                    <span class="token operator">&lt;</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span>input ref<span class="token operator">=</span><span class="token string">"input1"</span> type<span class="token operator">=</span><span class="token string">"text"</span> placeholder<span class="token operator">=</span><span class="token string">"点击按钮提示数据"</span> <span class="token operator">/</span><span class="token operator">></span> <span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>                        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>showData<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>点我提示左侧的数据<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span> <span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>                        <span class="token operator">&lt;</span>input ref<span class="token operator">=</span><span class="token string">"input2"</span> onBlur<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>showData2<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> type<span class="token operator">=</span><span class="token string">"text"</span> placeholder<span class="token operator">=</span><span class="token string">"点击按钮提示数据"</span> <span class="token operator">/</span><span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Demo <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>1.ref去标识标签，在属性中以refs形式显示</p><p>2.onClik和onBulr是react自己封装的一套</p></blockquote><h3 id="回调形式的ref"><a href="#回调形式的ref" class="headerlink" title="回调形式的ref"></a>回调形式的ref</h3><blockquote><p>1.字符串的ref存在一些效率上的问题，可能会在未来的版本移除。</p><p>2.所谓回调函数，就是自己定义的函数，自己没调用，被其他调用。</p><p>3.注意回调函数，你只需要定义在那，至于调用，不用管，react会帮你调用。</p><p>4.不仅仅调用了，还把当前节点传进回调函数里面。</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个“容器” --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入proptypes,用于对组件标签属性进行限制--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/prop-types.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// 1.创建类式组件</span>        <span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//展示左侧输入框的内容</span>            showData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//  this的指向是Demo的实例对象，因为组件创建的函数只能供实例对象调用，this是谁调用指向谁</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> input1 <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span>                <span class="token function">alert</span><span class="token punctuation">(</span>input1<span class="token punctuation">.</span>value<span class="token punctuation">)</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            showData2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> input2 <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span>                <span class="token function">alert</span><span class="token punctuation">(</span>input2<span class="token punctuation">.</span>value<span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 以下是jsx，后会被转换为html，被babel转</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>                    <span class="token operator">&lt;</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span>input ref<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>input1 <span class="token operator">=</span> c<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> type<span class="token operator">=</span><span class="token string">"text"</span> placeholder<span class="token operator">=</span><span class="token string">"点击按钮提示数据"</span> <span class="token operator">/</span><span class="token operator">></span> <span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>                        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>showData<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>点我提示左侧的数据<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span> <span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>                        <span class="token operator">&lt;</span>input ref<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span>input2 <span class="token operator">=</span> c<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> onBlur<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>showData2<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> type<span class="token operator">=</span><span class="token string">"text"</span> placeholder<span class="token operator">=</span><span class="token string">"点击按钮提示数据"</span> <span class="token operator">/</span><span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Demo <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="回调ref中调用次数的问题"><a href="#回调ref中调用次数的问题" class="headerlink" title="回调ref中调用次数的问题"></a>回调ref中调用次数的问题</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个“容器” --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入proptypes,用于对组件标签属性进行限制--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/prop-types.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// 1.创建类式组件</span>        <span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            state <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>isHot<span class="token punctuation">:</span><span class="token boolean">false</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            showData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>input1<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span>                <span class="token function">alert</span><span class="token punctuation">(</span>input1<span class="token punctuation">.</span>value<span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//展示左侧输入框的内容</span>            changeWeather <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 获取原来的状态</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>isHot<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state                <span class="token comment" spellcheck="true">// 更新状态</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>isHot<span class="token punctuation">:</span><span class="token operator">!</span>isHot<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            saveInput <span class="token operator">=</span> <span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>               <span class="token keyword">this</span><span class="token punctuation">.</span>input1 <span class="token operator">=</span> c<span class="token punctuation">;</span>               console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"@"</span><span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>isHot<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state                <span class="token comment" spellcheck="true">// 以下是jsx，后会被转换为html，被babel转</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>                    <span class="token operator">&lt;</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span>h2<span class="token operator">></span>今天天气很热<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>isHot <span class="token operator">?</span><span class="token string">"炎热"</span><span class="token punctuation">:</span><span class="token string">"凉快"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>                        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*jsx里面的注释要先加&amp;#123;&amp;#125;，&amp;#123;&amp;#125;里面可以写js，再用js的注释方法注释*/</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*&lt;input ref=&amp;#123;(c) =>&amp;#123;console.log(c);this.input1 = c&amp;#125;&amp;#125; type="text" placeholder="点击按钮提示数据" /> &amp;nbsp;*/</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                        <span class="token operator">&lt;</span>input ref<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>saveInput<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  type<span class="token operator">=</span><span class="token string">"text"</span> placeholder<span class="token operator">=</span><span class="token string">"点击按钮提示数据"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span>br<span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span>br<span class="token operator">/</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>showData<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>点我提示左侧的数据<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>                         <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>changeWeather<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>点我切换天气<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Demo <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>关于回调refs的说明<br>1.如果ref回调函数是以内联函数的方式定义的，在更新过程中它会被执行两次，第一次传入参数null，然后第二次会传入参数DOM元素。这是因为在每次渲染时会创建一个新的函数实例，所以React清空旧的ref并且设置新的。</p><p>2.通过将ref 的回调函数定义class的绑定函数的方式可以避免上述问颗,但是大多数情况下它是无关紧要的。</p><p>3.更新过程，相当于更新状态，如果用内联的方式写，跟新状态后，reder()会被调两次，因为有第一次初始化，因为跟新后react任务他是新函数，古返回为null，而通过绑定函数形式写，因为是挂在实例对象上的，所以他知道之前调用过，不打印null。</p><p>4.jsx注释，不能直接注释，需要{}，{}里面可以用js注释，用js的注释方法，{/**/}。</p></blockquote><h3 id="createRef的使用"><a href="#createRef的使用" class="headerlink" title="createRef的使用"></a>createRef的使用</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个“容器” --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入proptypes,用于对组件标签属性进行限制--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/prop-types.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// 1.创建类式组件</span>        <span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/*                React.createRef调用后可以返回一个容器，该容器可以存储ref所标识的节点，该容器是“专人专用”            */</span>           myRef <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span>           myRef2 <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">//展示左侧输入框的内容</span>            showData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//  this的指向是Demo的实例对象，因为组件创建的函数只能供实例对象调用，this是谁调用指向谁</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>myRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            showData2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>myRef2<span class="token punctuation">.</span>current<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 以下是jsx，后会被转换为html，被babel转</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>                    <span class="token operator">&lt;</span>div<span class="token operator">></span>                        <span class="token operator">&lt;</span>input ref<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>myRef<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> type<span class="token operator">=</span><span class="token string">"text"</span> placeholder<span class="token operator">=</span><span class="token string">"点击按钮提示数据"</span> <span class="token operator">/</span><span class="token operator">></span> <span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>                        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>showData<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>点我提示左侧的数据<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span> <span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>                        <span class="token operator">&lt;</span>input ref<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>myRef2<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> onBlur<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>showData2<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> type<span class="token operator">=</span><span class="token string">"text"</span> placeholder<span class="token operator">=</span><span class="token string">"点击按钮提示数据"</span> <span class="token operator">/</span><span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Demo <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p> React.createRef调用后可以返回一个容器,然而每返回一个容器，只能装一个refs。</p></blockquote><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>开发一般使用内联的写法，出问题也无关紧要。</p><p>推荐使用最麻烦的reateRef的写法。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络第一章</title>
      <link href="/2021/10/14/ji-suan-ji-wang-luo-di-yi-zhang/"/>
      <url>/2021/10/14/ji-suan-ji-wang-luo-di-yi-zhang/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机网络-第一章"><a href="#计算机网络-第一章" class="headerlink" title="计算机网络       第一章"></a>计算机网络       第一章</h1><h2 id="第一节"><a href="#第一节" class="headerlink" title="第一节"></a>第一节</h2><h3 id="1-1-1-概述"><a href="#1-1-1-概述" class="headerlink" title="1.1.1  概述"></a>1.1.1  概述</h3><h4 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h4><p>计算机网络属于网络的一部分，网络还包括其他的，如铁路网、电话网、人体内神经结构等。</p><p>计算机网络：是一分散的、具有独立功能的计算机系统，通过通信设备与线路连接起来，由功能完善的软件实现资源共享和信息传递的系统。</p><blockquote><p>通信设备往往指交换机，路由器，线路就是一种传播介质。</p></blockquote><p>计算机网络是互连的、自治的计算机集合。</p><h4 id="计算机网络的功能"><a href="#计算机网络的功能" class="headerlink" title="计算机网络的功能"></a>计算机网络的功能</h4><ol><li>数据通信(连通性)       不同主机之间</li><li>资源共享                    硬件  软件  数据</li><li>分布式处理                 多台计算机各自承担同一工作任务的不同部分      Hadoop平台</li><li>提高可靠性                 替代机</li><li>负载均衡                     各个计算机亲密接触</li></ol><h4 id="计算机网络的组成"><a href="#计算机网络的组成" class="headerlink" title="计算机网络的组成"></a>计算机网络的组成</h4><p>1.组成部分   硬件、软件、协议</p><p>2.工作方式  </p><ul><li>边缘部分  用户直接使用  包括C/S方式和P2P方式。</li><li>核心部分   为边缘部分服务，包括路由器和大量的网络。</li></ul><p>3.功能组成</p><ul><li>通信子网   实现数据通信    各种传输介质、通信设备、相应的网络协议组成</li><li>资源子网   实现资源共享/数据处理</li></ul><blockquote><p>先资源子网处理资源，再通过通信子网进行通信</p></blockquote><h4 id="计算机网络的分类"><a href="#计算机网络的分类" class="headerlink" title="计算机网络的分类"></a>计算机网络的分类</h4><p>1.按分布范围分</p><ul><li>广域网WAN  跨度非常广，通常指跨国   交换技术</li><li>城域网MAN   一个城区以内</li><li>局域网LAN   一千米左右，校园网就是多个局域网连接起来的，一个局域网的范围大概是一个教室    广播技术</li><li>个人区域网PAN  自己使用的设备用无线技术连接起来的网络就是个人区域网，大概十米左右</li></ul><p>2.按使用者分</p><ul><li>公用网  中国电信</li><li>专用网  军队、政府、银行等</li><li>按交换技术分 电路交换 报文交换  分组交换</li><li>拓扑结构   总线型、星型、环型、网状型   internet网就是使用的网状结构</li><li>按照传播技术分  </li></ul><blockquote><ol><li>广播式网络 共享公共通信信道</li><li>点对点网络  使用分组存储转发和路由选择机制</li></ol></blockquote><p><a href="https://imgtu.com/i/4z1b5t"><img src="https://z3.ax1x.com/2021/10/06/4z1b5t.png" alt="4z1b5t.png"></a></p><h3 id="1-1-2-标准化工作"><a href="#1-1-2-标准化工作" class="headerlink" title="1.1.2 标准化工作"></a>1.1.2 标准化工作</h3><h4 id="标准的分类"><a href="#标准的分类" class="headerlink" title="标准的分类"></a>标准的分类</h4><ol><li>法定标准  </li></ol><p>由权威机构指定的正式的、合法的标准。   OSI</p><ol><li>事实标准</li></ol><p>某些公司的产品在竞争中占据主流，时间长了，这些产品中的协议和技术就成了标准。  TCP/IP</p><h4 id="自己制定标准流程"><a href="#自己制定标准流程" class="headerlink" title="自己制定标准流程"></a>自己制定标准流程</h4><p><a href="https://imgtu.com/i/4z3xW6"><img src="https://z3.ax1x.com/2021/10/06/4z3xW6.png" alt="4z3xW6.png"></a></p><h4 id="标准化工作的相关组织"><a href="#标准化工作的相关组织" class="headerlink" title="标准化工作的相关组织"></a>标准化工作的相关组织</h4><ol><li>国际标准化组织ISO</li><li>国际电信联盟ITU</li><li>国际电气电子工程师协会IEEE</li><li>Internet工程任务组IETF</li></ol><p><a href="https://imgtu.com/i/4z847d"><img src="https://z3.ax1x.com/2021/10/06/4z847d.png" alt="4z847d.png"></a></p><h3 id="1-1-3速率相关的性能指标"><a href="#1-1-3速率相关的性能指标" class="headerlink" title="1.1.3速率相关的性能指标"></a>1.1.3速率相关的性能指标</h3><h4 id="速率"><a href="#速率" class="headerlink" title="速率"></a>速率</h4><p>速率即数据率或称数据运输率或比特率。</p><blockquote><p>比特，数据传输的单位    表现形式1/0   单位是位</p></blockquote><p>速率是计算机网络上的主机在数字信道上传输数据位数的速率。单位是b/s，kb/s,Mb/s,Gb/s,Tb/s。</p><p>千 1kb/s=10^3b/s</p><p>兆 1Mb/s= 10^3kb/s=10^6b/s</p><p>吉 1Gb/s=10^3Mb/s=10^6kb/s=10^9b/s</p><p>太 1Tb/s= 10^3Gb/s=10^6Mb/s=10^9kb/s=10^12b/s</p><blockquote><p>形容速率的时候换算单位是10^3,而形容存储容量时候换算单位是2^10</p></blockquote><p>存储容量</p><p>1Byte(字节)  = 8bit(比特)</p><p>1KB= 2^10B=1024B=1024*8b</p><p>1GB = 2^10MB=1024MB</p><p>1TB = 2^10GB=1024GB</p><h4 id="带宽"><a href="#带宽" class="headerlink" title="带宽"></a>带宽</h4><p>带宽原本是指某个信号具有的频带宽带，即最高频率与最低频率之差，单位是赫兹(Hz)</p><p>计算机网络中，带宽用来表示网络的通信线路传送数据的能力，通常是指单位时间内从网络中的某一个点到另一个点所能通过的“最高数据率”。单位是“比特每秒”，b/s,kb/s,Mb/s，Gb/s。</p><blockquote><p>网络设备所支持的最高速度。而电磁波的传播速率是基本不变的，为2*10^8m/s。</p><p>要区别开，带宽是在链路入口位置发送数据的速率，而不是在传播的速率，传播的速率是电磁波的速率。</p></blockquote><p><a href="https://imgtu.com/i/4zNesK"><img src="https://z3.ax1x.com/2021/10/06/4zNesK.png" alt="4zNesK.png"></a></p><blockquote><p>带宽只会影响传播的数据变多了</p></blockquote><h4 id="吞吐量"><a href="#吞吐量" class="headerlink" title="吞吐量"></a>吞吐量</h4><p>表示在单位时间内通过某个网络(或信道、接口)的数据量。单位b/s,kb/s,Mb/s等。</p><p>吞吐量受到网络的带宽或网络的额定速率的限制。</p><blockquote><p>吞吐量是实际发送速率</p></blockquote><p><a href="https://imgtu.com/i/4zUEkQ"><img src="https://z3.ax1x.com/2021/10/06/4zUEkQ.png" alt="4zUEkQ.png"></a></p><blockquote><p>带宽是100Mb/s的意思是，主机口向外发送的数据最大速率是100Mb/s,交换机口向外发送数据的最大速率也是100Mb/s，所以才说这个链路的带宽是100Mb/s。</p><p>但接受速率要受缓存的大小。</p><p>一个服务器的发送速率是20Mb/s，另外一个服务器发送速率是10Mb/s,这台电脑的网卡，或者通过这条链路的某一个关口的接受量就是30Mb/s，即吞吐量。</p></blockquote><h4 id="时延、时延带宽积、RTT和利用率"><a href="#时延、时延带宽积、RTT和利用率" class="headerlink" title="时延、时延带宽积、RTT和利用率"></a>时延、时延带宽积、RTT和利用率</h4><p>指数据(报文/分组/比特流)从网络(链路)的一端传送到另一端的时间。也叫延迟或迟延。单位是s。</p><p>包括：</p><ol><li><p>发送时延（传输时延）    主机内部发生的。</p><p>从发送分组的第一个比特算起，到该分组的最后一给比特发送完毕所需要的时间。</p><p><a href="https://imgtu.com/i/4z0aPe"><img src="https://z3.ax1x.com/2021/10/06/4z0aPe.png" alt="4z0aPe.png"></a></p></li><li><p>传播时延</p><p>取决于电磁波传播速度和链路长度。</p><p><a href="https://imgtu.com/i/4z0WGQ"><img src="https://z3.ax1x.com/2021/10/06/4z0WGQ.png" alt="4z0WGQ.png"></a></p><p>电磁波背着比特流跑。</p></li><li><p>排队时延</p><p>路由器有一定的内存，比特流在路由器里面待的时间就是排队时延。</p><p>等待输出/输入链路可用</p></li><li><p>处理时延</p><p>检错和找出口</p></li></ol><blockquote><p>高速链路是高带宽，只会影响发送速率，不会影响电磁波的传播。</p></blockquote><h4 id="时延带宽积"><a href="#时延带宽积" class="headerlink" title="时延带宽积"></a>时延带宽积</h4><p>时延带宽积=传播时延x带宽</p><p>时延带宽积又称为<strong>比特为单位的链路长队</strong>，即“某段链路现在又多少比特”，又称“容量”。</p><h4 id="往返时延RTT"><a href="#往返时延RTT" class="headerlink" title="往返时延RTT"></a>往返时延RTT</h4><p><a href="https://imgtu.com/i/4zsJQH"><img src="https://z3.ax1x.com/2021/10/06/4zsJQH.png" alt="4zsJQH.png"></a></p><p>从发送方发送数据开始，到发送方收到方的确定(接受方接收数据后立即发送确定)，总共经历的时延。</p><p>RTT越大，在收到确定之前，可以发送的数据就越多。</p><blockquote><p>因为延迟越高，就只能一直发送数据，所以可以发送数据越多。</p></blockquote><p>RTT包括</p><ol><li>往返传播时延 = 传播时延*2</li><li>末端处理时间</li></ol><blockquote><p>是不包括发送时延的，就是把比特流放到链路的时间。</p></blockquote><h4 id="利用率"><a href="#利用率" class="headerlink" title="利用率"></a>利用率</h4><p>利用率包括：</p><ol><li><p>信道利用率</p><p><a href="https://imgtu.com/i/4zstOA"><img src="https://z3.ax1x.com/2021/10/06/4zstOA.png" alt="4zstOA.png"></a></p></li><li><p>网络利用率</p><p><a href="https://imgtu.com/i/4zsdTP"><img src="https://z3.ax1x.com/2021/10/06/4zsdTP.png" alt="4zsdTP.png"></a></p></li></ol><p><a href="https://imgtu.com/i/4zsOTx"><img src="https://z3.ax1x.com/2021/10/06/4zsOTx.png" alt="4zsOTx.png"></a></p><blockquote><p>车道满了，自然通行就慢，利用率为1的时候，延迟自然就很低。</p></blockquote><p>平时我们会遇到传输速率或者下载速率只有几十k/s,其实是k后面省略一个B，B字节，换算过来还要乘以一个8。而且带宽是最高数据率，实际生活中是无法达到的。</p><p><a href="https://imgtu.com/i/4zyGNV"><img src="https://z3.ax1x.com/2021/10/06/4zyGNV.png" alt="4zyGNV.png"></a></p><h2 id="第二节"><a href="#第二节" class="headerlink" title="第二节"></a>第二节</h2><h3 id="1-2-1-分层几个、协议、接口、服务"><a href="#1-2-1-分层几个、协议、接口、服务" class="headerlink" title="1.2.1 分层几个、协议、接口、服务"></a>1.2.1 分层几个、协议、接口、服务</h3><p>一个主机向另外一个主机发文件时，发送文件前要完成的工作：</p><ol><li>发起通信的计算机必须将数据通信的通路进行激活。</li><li>要告诉网络如何识别目的主机。</li><li>发起通信的计算机要查明目的主机是否开机，并且与网络连接正常</li><li>发起通信的计算机要弄清楚，对方计算机中文件管理程序是否已经做好了准备工作。</li><li>确保差错和意外可以解决。</li></ol><h4 id="怎么分层？"><a href="#怎么分层？" class="headerlink" title="怎么分层？"></a>怎么分层？</h4><p>拉菲分层</p><p><a href="https://imgtu.com/i/4z6Li6"><img src="https://z3.ax1x.com/2021/10/06/4z6Li6.png" alt="4z6Li6.png"></a></p><blockquote><p>从打包，运输到客户手里，客户拆开拉菲过程，分别解释了实体，接口，服务等概念。</p></blockquote><p>分层的基本原则</p><p>1.各层之间相互独立，每层只实现一种相对独立的功能。</p><p>2.每层之间界面自然清晰，易于理解，相互交流尽可能少。</p><p>3.结构上可分割开。每层都采用最合适的技术来实现。<br>4.保持下层对上层的独立性，上层单向使用下层提供的服务。</p><p>5.整个分层结构应该能促进标准化工作。</p><p>正式认识分层结构：</p><p><a href="https://imgtu.com/i/4zgm9K"><img src="https://z3.ax1x.com/2021/10/06/4zgm9K.png" alt="4zgm9K.png"></a></p><h4 id="相关概念整合"><a href="#相关概念整合" class="headerlink" title="相关概念整合"></a>相关概念整合</h4><p>1.网络体系结构是从功能上描述计算机网络结构。计算机网络体系结构简称网络体系结构是分层结构。每层遵循某个/些网络协议以完成本层功能。<br>2.计算机网络体系结构是计算机网络的各层及其协议的集合。<br>3.第n层在向n+1层提供服务时，此服务不仅包含第n层本身的功能，还包含由下层服务提供的功能。仅仅在相邻层间有接口，且所提供服务的具体实现细节对上一层完全屏蔽。<br>4.体系结构是抽象的，而实现是指能运行的一些软件和硬件。</p><h3 id="1-2-2-OSI参考模型-1"><a href="#1-2-2-OSI参考模型-1" class="headerlink" title="1.2.2 OSI参考模型(1)"></a>1.2.2 OSI参考模型(1)</h3><p>计算机网络分层结构分为:</p><ul><li>7层OSI参考模型   法定标准</li><li>4层TCP/IP参考模型  事实标准</li></ul><p>最后衍生为五层的体系结构。</p><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><p>为了解决计算机复杂的大问题=》分层机构(按功能)</p><p>目标：支持异构网络系统的互联互通。</p><p>国际标准化(iso于1984年提出开放系统互连参考模型。</p><p><a href="https://imgtu.com/i/5QcIXV"><img src="https://z3.ax1x.com/2021/10/14/5QcIXV.png" alt="5QcIXV.png"></a></p><h4 id="通信过程，用两个主机加中间系统来模拟，中间系统可能不止一个"><a href="#通信过程，用两个主机加中间系统来模拟，中间系统可能不止一个" class="headerlink" title="通信过程，用两个主机加中间系统来模拟，中间系统可能不止一个"></a>通信过程，用两个主机加中间系统来模拟，中间系统可能不止一个</h4><p><a href="https://imgtu.com/i/5Q2lqK"><img src="https://z3.ax1x.com/2021/10/14/5Q2lqK.png" alt="5Q2lqK.png"></a></p><blockquote><ol><li>类似于打包，拆包的过程</li><li>物理层相当于传输介质，傻瓜层</li><li>前四层中间系统是没有的，可以理解为前四层，A和中间系统和B是一体的，为端到端传输</li></ol></blockquote><h4 id="具体每层变化"><a href="#具体每层变化" class="headerlink" title="具体每层变化"></a>具体每层变化</h4><p><a href="https://imgtu.com/i/5Q2WMq"><img src="https://z3.ax1x.com/2021/10/14/5Q2WMq.png" alt="5Q2WMq.png"></a></p><blockquote><p>物理层就简单地将数据二进制bit流序列排列,转换为电信号传送。</p></blockquote><h3 id="1-2-3-OSI参考模型-2）"><a href="#1-2-3-OSI参考模型-2）" class="headerlink" title="1.2.3  OSI参考模型(2）"></a>1.2.3  OSI参考模型(2）</h3><p>认识七层结构</p><h4 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h4><p>所有能和用户交互产生网络流量的程序</p><p><a href="https://imgtu.com/i/5QqJne"><img src="https://z3.ax1x.com/2021/10/14/5QqJne.png" alt="5QqJne.png"></a></p><h4 id="表示层"><a href="#表示层" class="headerlink" title="表示层"></a>表示层</h4><p><a href="https://imgtu.com/i/5QqatI"><img src="https://z3.ax1x.com/2021/10/14/5QqatI.png" alt="5QqatI.png"></a></p><blockquote><p>因为可能两台主机对于的数据格式不一样，再通信时候需要转换。</p></blockquote><h4 id="会话层"><a href="#会话层" class="headerlink" title="会话层"></a>会话层</h4><p><a href="https://imgtu.com/i/5QqA6U"><img src="https://z3.ax1x.com/2021/10/14/5QqA6U.png" alt="5QqA6U.png"></a></p><blockquote><p>各个会话互不影响。</p></blockquote><h4 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h4><p><a href="https://imgtu.com/i/5QqrjS"><img src="https://z3.ax1x.com/2021/10/14/5QqrjS.png" alt="5QqrjS.png"></a></p><blockquote><p>微信和qq相当于进程，每个进程都有一个端口号，另一个主机接受时，会识别，假如qq端口号为1，微信为2，接收时会对其进行识别，1用qq接受，2用微信接受</p><p>可靠传输是文件</p><p>不可靠是文字</p></blockquote><h4 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h4><p><a href="https://imgtu.com/i/5Qqc7j"><img src="https://z3.ax1x.com/2021/10/14/5Qqc7j.png" alt="5Qqc7j.png"></a></p><blockquote><ol><li>路由选择是指选择不同的通过路由器的路线</li><li>拥堵控制是对全局的控制</li></ol></blockquote><h4 id="数据链层"><a href="#数据链层" class="headerlink" title="数据链层"></a>数据链层</h4><p><a href="https://imgtu.com/i/5Qq5cT"><img src="https://z3.ax1x.com/2021/10/14/5Qq5cT.png" alt="5Qq5cT.png"></a></p><h4 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h4><p><a href="https://imgtu.com/i/5Qq7B4"><img src="https://z3.ax1x.com/2021/10/14/5Qq7B4.png" alt="5Qq7B4.png"></a></p><blockquote><p>将bit流转为电信号在传输介质传输。</p></blockquote><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p><a href="https://imgtu.com/i/5Qqj9x"><img src="https://z3.ax1x.com/2021/10/14/5Qqj9x.png" alt="5Qqj9x.png"></a></p><h3 id="1-2-4-TCP、IP参考模型和5层参考模型"><a href="#1-2-4-TCP、IP参考模型和5层参考模型" class="headerlink" title="1.2.4 TCP、IP参考模型和5层参考模型"></a>1.2.4 TCP、IP参考模型和5层参考模型</h3><h4 id="OSI与TCP-IP参考模型之间的比较"><a href="#OSI与TCP-IP参考模型之间的比较" class="headerlink" title="OSI与TCP/IP参考模型之间的比较"></a>OSI与TCP/IP参考模型之间的比较</h4><p><a href="https://imgtu.com/i/5GcgRe"><img src="https://z3.ax1x.com/2021/10/16/5GcgRe.png" alt="5GcgRe.png"></a></p><h4 id="OSI参考模型与TCP-IP参考模型相同点"><a href="#OSI参考模型与TCP-IP参考模型相同点" class="headerlink" title="OSI参考模型与TCP/IP参考模型相同点"></a>OSI参考模型与TCP/IP参考模型相同点</h4><p><a href="https://imgtu.com/i/5GgSoV"><img src="https://z3.ax1x.com/2021/10/16/5GgSoV.png" alt="5GgSoV.png"></a></p><h4 id="OSI参考模型与TCP-IP参考模型模型不同点"><a href="#OSI参考模型与TCP-IP参考模型模型不同点" class="headerlink" title="OSI参考模型与TCP/IP参考模型模型不同点"></a>OSI参考模型与TCP/IP参考模型模型不同点</h4><p><a href="https://imgtu.com/i/5GgCJU"><img src="https://z3.ax1x.com/2021/10/16/5GgCJU.png" alt="5GgCJU.png"></a></p><h4 id="五层参考模型"><a href="#五层参考模型" class="headerlink" title="五层参考模型"></a>五层参考模型</h4><p><a href="https://imgtu.com/i/5GgMWD"><img src="https://z3.ax1x.com/2021/10/16/5GgMWD.png" alt="5GgMWD.png"></a></p><h4 id="五层参考模型的数据封装与解封装"><a href="#五层参考模型的数据封装与解封装" class="headerlink" title="五层参考模型的数据封装与解封装"></a>五层参考模型的数据封装与解封装</h4><p><img src="https://z3.ax1x.com/2021/10/16/5GgaY8.png" alt="5GgaY8.png"></p><h4 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h4><p><a href="https://imgtu.com/i/5Gg56J"><img src="https://z3.ax1x.com/2021/10/16/5Gg56J.png" alt="5Gg56J.png"></a></p><h3 id="第一章-总结"><a href="#第一章-总结" class="headerlink" title="第一章    总结"></a>第一章    总结</h3><p><a href="https://imgtu.com/i/5GfnnH"><img src="https://z3.ax1x.com/2021/10/16/5GfnnH.png" alt="5GfnnH.png"></a></p><p><a href="https://imgtu.com/i/5Qqj9x">https://imgtu.com/i/5Qqj9x</a>)</p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react组件实例里面属性之props</title>
      <link href="/2021/09/22/react-zu-jian-shi-li-li-mian-shu-xing-zhi-props/"/>
      <url>/2021/09/22/react-zu-jian-shi-li-li-mian-shu-xing-zhi-props/</url>
      
        <content type="html"><![CDATA[<h1 id="组件实例的三大核心属性-1-props-类组件"><a href="#组件实例的三大核心属性-1-props-类组件" class="headerlink" title="组件实例的三大核心属性  1.props (类组件)"></a>组件实例的三大核心属性  1.props (类组件)</h1><h3 id="概述："><a href="#概述：" class="headerlink" title="概述："></a>概述：</h3><p>state只能在组件内部传值，修改，是一个统一修改，而在想从一个个传值对每个实例进行修改就要用 到props。</p><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><p>代码：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个“容器” --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// 1.创建类式组件</span>        <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// const &amp;#123; isHot, wind &amp;#125; = this.state</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>name<span class="token punctuation">,</span>sex<span class="token punctuation">,</span>age<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props                <span class="token keyword">return</span> <span class="token punctuation">(</span>                    <span class="token operator">&lt;</span>ul<span class="token operator">></span>                        <span class="token operator">&lt;</span>li<span class="token operator">></span>姓名<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>name<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>                        <span class="token operator">&lt;</span>li<span class="token operator">></span>性别<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>sex<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>                        <span class="token operator">&lt;</span>li<span class="token operator">></span>年龄<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>age<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Person name <span class="token operator">=</span> <span class="token string">'tom'</span> age <span class="token operator">=</span> <span class="token string">'18'</span> sex<span class="token operator">=</span> <span class="token string">'女'</span><span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Person name <span class="token operator">=</span> <span class="token string">'sarara'</span> age <span class="token operator">=</span> <span class="token string">'17'</span> sex<span class="token operator">=</span> <span class="token string">'女'</span><span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Person name <span class="token operator">=</span> <span class="token string">'jom'</span> age <span class="token operator">=</span> <span class="token string">'16'</span> sex<span class="token operator">=</span> <span class="token string">'男'</span><span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test3"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="组合传值和限制传值规则"><a href="#组合传值和限制传值规则" class="headerlink" title="组合传值和限制传值规则"></a>组合传值和限制传值规则</h3><blockquote><ol><li>原生js虽然不能展开运算符不能展开对象，但babel加react下，能展开对象，且只针对组件传值，{}是为了显示表达式。</li><li>Person.propTypes限制类型和必要性，Person.defaultPorps限制默认值。</li><li>props是只读，不能修改。</li></ol></blockquote><p>代码：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个“容器” --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入proptypes,用于对组件标签属性进行限制--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/prop-types.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// 1.创建类式组件</span>        <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// const &amp;#123; isHot, wind &amp;#125; = this.state</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>name<span class="token punctuation">,</span>sex<span class="token punctuation">,</span>age<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props                <span class="token comment" spellcheck="true">//props是只读的</span>                <span class="token comment" spellcheck="true">//this.props.name = 'jack' //此行代码会报错，因为props是只读的</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>                    <span class="token operator">&lt;</span>ul<span class="token operator">></span>                        <span class="token operator">&lt;</span>li<span class="token operator">></span>姓名<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>name<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>                        <span class="token operator">&lt;</span>li<span class="token operator">></span>性别<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>sex<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>                        <span class="token operator">&lt;</span>li<span class="token operator">></span>年龄<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>age<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 对props传的值做限制,对标签属性进行类型、必要性的限制</span>        Person<span class="token punctuation">.</span>propTypes <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            name<span class="token punctuation">:</span>PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">.</span>isRequired <span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//限制name必填，且为字符串</span>            sex<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>              <span class="token comment" spellcheck="true">//限制sex为字符串</span>            age<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>              <span class="token comment" spellcheck="true">//限制age为数值</span>            speak<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>func               <span class="token comment" spellcheck="true">//限制speak为函数</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 如果不传，则默认传值如下，指定默认标签属性值</span>        Person<span class="token punctuation">.</span>defaultProps <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            sex<span class="token punctuation">:</span><span class="token string">"不男不女"</span><span class="token punctuation">,</span>            age<span class="token punctuation">:</span><span class="token number">18</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Person name <span class="token operator">=</span> <span class="token string">'tom'</span> age <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">18</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> sex<span class="token operator">=</span> <span class="token string">'女'</span> speak <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>speak<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Person name <span class="token operator">=</span> <span class="token string">'sarara'</span> age <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">17</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> sex<span class="token operator">=</span> <span class="token string">'女'</span><span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>name<span class="token punctuation">:</span><span class="token string">"老刘"</span><span class="token punctuation">,</span>age<span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span>sex<span class="token punctuation">:</span><span class="token string">'女'</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// ReactDOM.render(&lt;Person name = 'jom' age = '16' sex= '男'/>, document.getElementById("test3"))</span>        <span class="token comment" spellcheck="true">// 此处注意，原生js虽然不能展开运算符不能展开对象，但babel加react下，能展开对象，且只针对组件传值</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Person <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">...</span>p<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test3"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">function</span> <span class="token function">speak</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"我说话了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="props简写方式"><a href="#props简写方式" class="headerlink" title="props简写方式"></a>props简写方式</h3><blockquote><p>person的属性可以放到类里面，作为类自身的属性。</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个“容器” --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入proptypes,用于对组件标签属性进行限制--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/prop-types.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// 1.创建类式组件</span>        <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// static是给类自身加属性</span>            <span class="token comment" spellcheck="true">// 对props传的值做限制,对标签属性进行类型、必要性的限制</span>            <span class="token keyword">static</span> propTypes <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                name<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//限制name必填，且为字符串</span>                sex<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>              <span class="token comment" spellcheck="true">//限制sex为字符串</span>                age<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>              <span class="token comment" spellcheck="true">//限制age为数值</span>                speak<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>func               <span class="token comment" spellcheck="true">//限制speak为函数</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 如果不传，则默认传值如下，指定默认标签属性值</span>            <span class="token keyword">static</span> defaultProps <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                sex<span class="token punctuation">:</span> <span class="token string">"不男不女"</span><span class="token punctuation">,</span>                age<span class="token punctuation">:</span> <span class="token number">18</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// this指向react的实例对象，下面创建了三个实例对象，所以打印三遍this。</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// const &amp;#123; isHot, wind &amp;#125; = this.state</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> age <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props                <span class="token keyword">return</span> <span class="token punctuation">(</span>                    <span class="token operator">&lt;</span>ul<span class="token operator">></span>                        <span class="token operator">&lt;</span>li<span class="token operator">></span>姓名<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>name<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>                        <span class="token operator">&lt;</span>li<span class="token operator">></span>性别<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>sex<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>                        <span class="token operator">&lt;</span>li<span class="token operator">></span>年龄<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>age<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Person name<span class="token operator">=</span><span class="token string">'tom'</span> age<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">18</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> sex<span class="token operator">=</span><span class="token string">'女'</span> speak<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>speak<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Person name<span class="token operator">=</span><span class="token string">'sarara'</span> age<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">17</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> sex<span class="token operator">=</span><span class="token string">'女'</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> name<span class="token punctuation">:</span> <span class="token string">"老刘"</span><span class="token punctuation">,</span> age<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> sex<span class="token punctuation">:</span> <span class="token string">'女'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// ReactDOM.render(&lt;Person name = 'jom' age = '16' sex= '男'/>, document.getElementById("test3"))</span>        <span class="token comment" spellcheck="true">// 此处注意，原生js虽然不能展开运算符不能展开对象，但babel加react下，能展开对象，且只针对组件传值</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Person <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">...</span>p<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test3"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">function</span> <span class="token function">speak</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"我说话了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="类式组件中的构造器与props"><a href="#类式组件中的构造器与props" class="headerlink" title="类式组件中的构造器与props"></a>类式组件中的构造器与props</h3><blockquote><p>构造器是否接受props，是否传递super，取决于：是否希望在构造器中通过this访问props。</p><p>构造器一般可省略。</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个“容器” --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入proptypes,用于对组件标签属性进行限制--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/prop-types.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// 1.创建类式组件</span>        <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//构造器是否接受props，是否传递super，取决于：是否希望在构造器中通过this访问props</span>            <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// console.log(props);</span>                <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"constructor"</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// static是给类自身加属性</span>            <span class="token comment" spellcheck="true">// 对props传的值做限制,对标签属性进行类型、必要性的限制</span>            <span class="token keyword">static</span> propTypes <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                name<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//限制name必填，且为字符串</span>                sex<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>              <span class="token comment" spellcheck="true">//限制sex为字符串</span>                age<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>              <span class="token comment" spellcheck="true">//限制age为数值</span>                speak<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>func               <span class="token comment" spellcheck="true">//限制speak为函数</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 如果不传，则默认传值如下，指定默认标签属性值</span>            <span class="token keyword">static</span> defaultProps <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                sex<span class="token punctuation">:</span> <span class="token string">"男"</span><span class="token punctuation">,</span>                age<span class="token punctuation">:</span> <span class="token number">18</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// this指向react的实例对象，下面创建了三个实例对象，所以打印三遍this。</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// const &amp;#123; isHot, wind &amp;#125; = this.state</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> age <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props                <span class="token keyword">return</span> <span class="token punctuation">(</span>                    <span class="token operator">&lt;</span>ul<span class="token operator">></span>                        <span class="token operator">&lt;</span>li<span class="token operator">></span>姓名<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>name<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>                        <span class="token operator">&lt;</span>li<span class="token operator">></span>性别<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>sex<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>                        <span class="token operator">&lt;</span>li<span class="token operator">></span>年龄<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>age<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>                <span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Person name<span class="token operator">=</span><span class="token string">'jerry'</span><span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="函数式组件使用props"><a href="#函数式组件使用props" class="headerlink" title="函数式组件使用props"></a>函数式组件使用props</h3><blockquote><p>1.之前说的组件的三大属性针对的是实例，函数没有实例，没有this，故不能使用stata，refs</p><p>2.但函数可以传递参数，可以使用props</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个“容器” --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入proptypes,用于对组件标签属性进行限制--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/prop-types.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// 1.创建类式组件</span>        <span class="token comment" spellcheck="true">// class Person extends React.Component &amp;#123;</span>        <span class="token comment" spellcheck="true">//     // static是给类自身加属性</span>        <span class="token comment" spellcheck="true">//     // 对props传的值做限制,对标签属性进行类型、必要性的限制</span>        <span class="token comment" spellcheck="true">//     static propTypes = &amp;#123;</span>        <span class="token comment" spellcheck="true">//         name: PropTypes.string.isRequired,  //限制name必填，且为字符串</span>        <span class="token comment" spellcheck="true">//         sex: PropTypes.string,              //限制sex为字符串</span>        <span class="token comment" spellcheck="true">//         age: PropTypes.number,              //限制age为数值</span>        <span class="token comment" spellcheck="true">//         speak: PropTypes.func               //限制speak为函数</span>        <span class="token comment" spellcheck="true">//     &amp;#125;</span>        <span class="token comment" spellcheck="true">//     // 如果不传，则默认传值如下，指定默认标签属性值</span>        <span class="token comment" spellcheck="true">//     static defaultProps = &amp;#123;</span>        <span class="token comment" spellcheck="true">//         sex: "男",</span>        <span class="token comment" spellcheck="true">//         age: 18</span>        <span class="token comment" spellcheck="true">//     &amp;#125;</span>        <span class="token comment" spellcheck="true">//     render() &amp;#123;</span>        <span class="token comment" spellcheck="true">//         // this指向react的实例对象，下面创建了三个实例对象，所以打印三遍this。</span>        <span class="token comment" spellcheck="true">//         console.log(this);</span>        <span class="token comment" spellcheck="true">//         // const &amp;#123; isHot, wind &amp;#125; = this.state</span>        <span class="token comment" spellcheck="true">//         const &amp;#123; name, sex, age &amp;#125; = this.props</span>        <span class="token comment" spellcheck="true">//         return (</span>        <span class="token comment" spellcheck="true">//             &lt;ul></span>        <span class="token comment" spellcheck="true">//                 &lt;li>姓名:&amp;#123;name&amp;#125;&lt;/li></span>        <span class="token comment" spellcheck="true">//                 &lt;li>性别:&amp;#123;sex&amp;#125;&lt;/li></span>        <span class="token comment" spellcheck="true">//                 &lt;li>年龄:&amp;#123;age&amp;#125;&lt;/li></span>        <span class="token comment" spellcheck="true">//             &lt;/ul></span>        <span class="token comment" spellcheck="true">//         )</span>        <span class="token comment" spellcheck="true">//     &amp;#125;</span>        <span class="token comment" spellcheck="true">// &amp;#125;</span>        <span class="token comment" spellcheck="true">// 创建函数式组件,函数组件没有this</span>        <span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>name<span class="token punctuation">,</span>sex<span class="token punctuation">,</span>age<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> props            <span class="token keyword">return</span> <span class="token punctuation">(</span>                <span class="token operator">&lt;</span>ul<span class="token operator">></span>                        <span class="token operator">&lt;</span>li<span class="token operator">></span>姓名<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>name<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>                        <span class="token operator">&lt;</span>li<span class="token operator">></span>性别<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>sex<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>                        <span class="token operator">&lt;</span>li<span class="token operator">></span>年龄<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>age<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>            <span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">// 对props传的值做限制,对标签属性进行类型、必要性的限制</span>         Person<span class="token punctuation">.</span>propTypes <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            name<span class="token punctuation">:</span>PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">.</span>isRequired <span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//限制name必填，且为字符串</span>            sex<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>              <span class="token comment" spellcheck="true">//限制sex为字符串</span>            age<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>              <span class="token comment" spellcheck="true">//限制age为数值</span>            speak<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>func               <span class="token comment" spellcheck="true">//限制speak为函数</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 如果不传，则默认传值如下，指定默认标签属性值</span>        Person<span class="token punctuation">.</span>defaultProps <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            sex<span class="token punctuation">:</span><span class="token string">"不男不女"</span><span class="token punctuation">,</span>            age<span class="token punctuation">:</span><span class="token number">18</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Person name<span class="token operator">=</span><span class="token string">'jerry'</span><span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>1.限制</p><p>2.默认值</p><p>3.简写是从类的外侧移到类的里侧</p><p>4.作用</p><p>1）通过标签属性从组件外向组件传递变化值。</p><p>2）注意组件内部不要修改props数据。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>展开运算符</title>
      <link href="/2021/09/22/zhan-kai-yun-suan-fu/"/>
      <url>/2021/09/22/zhan-kai-yun-suan-fu/</url>
      
        <content type="html"><![CDATA[<h1 id="展开运算符使用"><a href="#展开运算符使用" class="headerlink" title="展开运算符使用"></a>展开运算符使用</h1><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><blockquote><ol><li>展开一个数组</li><li>连接数组</li><li>原生js里面,展开运算符不能展开一个对象</li><li>在构造字面量对象时使用展开语法 </li><li>赋值对象的时候修改属性,合并</li></ol></blockquote><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">let</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span>        <span class="token keyword">let</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>arr1<span class="token punctuation">)</span>           <span class="token comment" spellcheck="true">//展开一个数组</span>        <span class="token keyword">let</span> arr3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr1<span class="token punctuation">,</span><span class="token operator">...</span>arr2<span class="token punctuation">]</span>   <span class="token comment" spellcheck="true">//连接数组</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> a <span class="token operator">+</span> b        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//在函数中使用</span>        <span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token operator">...</span>numbers<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> numbers<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>preValue<span class="token punctuation">,</span>currentValue<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> preValue <span class="token operator">+</span> currentValue            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>name<span class="token punctuation">:</span><span class="token string">'tom'</span><span class="token punctuation">,</span>age<span class="token punctuation">:</span><span class="token number">18</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// console.log(...person);         //原生js里面,展开运算符不能展开一个对象</span>        <span class="token keyword">let</span> person2 <span class="token operator">=</span> person        person<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"jerry"</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person2<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment" spellcheck="true">//person2跟person变，故直接赋值不相当于克隆</span>                <span class="token comment" spellcheck="true">//在构造字面量对象时使用展开语法</span>        <span class="token keyword">let</span> person3 <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">...</span>person<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        person<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"jim"</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person3<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment" spellcheck="true">//person3不跟person变，故直接赋值相当于克隆</span>        <span class="token comment" spellcheck="true">// 赋值对象的时候修改属性,合并</span>        <span class="token keyword">let</span> person4 <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">...</span>person<span class="token punctuation">,</span>name<span class="token punctuation">:</span><span class="token string">'jack'</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person4<span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>箭头函数中的this指向问题</title>
      <link href="/2021/09/22/jian-tou-han-shu-zhong-de-this-zhi-xiang-wen-ti/"/>
      <url>/2021/09/22/jian-tou-han-shu-zhong-de-this-zhi-xiang-wen-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="箭头函数的this指向问题"><a href="#箭头函数的this指向问题" class="headerlink" title="箭头函数的this指向问题"></a>箭头函数的this指向问题</h1><blockquote><p>​    箭头函数自身没有this指向，写this不会报错，会默认使用他外层是的this指向作为自己的this指向，可以在箭头函数中log一下this的指向。</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name                <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 该函数定义在原型对象上,类里面不能直接定义箭头函数。</span>            <span class="token function">study</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"定义在原型对象上常规函数的this指向"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            profession <span class="token operator">=</span> <span class="token string">"学生"</span>            study2 <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"定义在类本身上的this指向"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            study3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"通过赋值和箭头函数定义在类中的箭头函数的指向"</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"王小明"</span><span class="token punctuation">,</span> <span class="token string">"八岁"</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">;</span>        p1<span class="token punctuation">.</span><span class="token function">study</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        p1<span class="token punctuation">.</span><span class="token function">study</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//通过实例调用,this肯定是找得到的</span>        x <span class="token operator">=</span> p1<span class="token punctuation">.</span>study2        <span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span>         <span class="token comment" spellcheck="true">//直接调用普通函数则不行</span>        x2 <span class="token operator">=</span> p1<span class="token punctuation">.</span>study3        <span class="token function">x2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//直接调用箭头函数this指向任然存在</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>类中的this指向问题</title>
      <link href="/2021/09/22/lei-zhong-de-this-zhi-xiang-wen-ti/"/>
      <url>/2021/09/22/lei-zhong-de-this-zhi-xiang-wen-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="类中this指向问题"><a href="#类中this指向问题" class="headerlink" title="类中this指向问题"></a>类中this指向问题</h1><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>             <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name                <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age             <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>             <span class="token function">study</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// study放在哪里?-- weather的原型对象上，供实例使用</span>            <span class="token comment" spellcheck="true">// 通过student实例调用study时，study中的this就是student实例</span>                 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"tom"</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span>        p1<span class="token punctuation">.</span><span class="token function">study</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">//通过实例调用speak方法,是可以拿到this的</span>        <span class="token keyword">const</span> x <span class="token operator">=</span> p1<span class="token punctuation">.</span>study        <span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token comment" spellcheck="true">//此处函数属于直接调用,this按理说指向window，但类局部开了严格模式，让他不敢指向window</span>        <span class="token comment" spellcheck="true">// 实例一</span>        <span class="token comment" spellcheck="true">// 没有开启严格模式之前</span>        <span class="token keyword">function</span> <span class="token function">demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token function">demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// 开启严格模式后</span>        <span class="token keyword">function</span> <span class="token function">demo2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token string">'use strict'</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token function">demo2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// 修改this指向</span>        <span class="token keyword">function</span> <span class="token function">demo3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token function">demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">const</span> x <span class="token operator">=</span> demo<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>a<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>b<span class="token punctuation">:</span><span class="token number">2</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>        <span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="有明确调用者时，this指向调用者"><a href="#有明确调用者时，this指向调用者" class="headerlink" title="有明确调用者时，this指向调用者"></a>有明确调用者时，this指向调用者</h3><p>看这个例子：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  myName<span class="token punctuation">:</span> <span class="token string">"小小飞"</span><span class="token punctuation">,</span>  func<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>myName<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>obj<span class="token punctuation">.</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 小小飞</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述例子很好理解，因为调用者是obj，所以func里面的this就指向obj，<code>this.myName</code>就是<code>obj.myName</code>。其实这一条和上一条可以合在一起，没有明确调用者时其实隐含的调用者就是window，所以经常有人说<strong>this总是指向调用者</strong>。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li>只有通过实例调用原型中的函数,this才能生效。</li><li>类局部开启了严格模式，让this不敢指向windows。</li></ol>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React组件里面属性之state</title>
      <link href="/2021/09/22/react-zu-jian-li-mian-shu-xing/"/>
      <url>/2021/09/22/react-zu-jian-li-mian-shu-xing/</url>
      
        <content type="html"><![CDATA[<h2 id="react中组件实例的属性"><a href="#react中组件实例的属性" class="headerlink" title="react中组件实例的属性"></a>react中组件实例的属性</h2><h3 id="组件实例的三大核心属性-1-state-类组件"><a href="#组件实例的三大核心属性-1-state-类组件" class="headerlink" title="组件实例的三大核心属性  1.state (类组件)"></a>组件实例的三大核心属性  1.state (类组件)</h3><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>组件实例有几个属性，原型是react里面的component，其中一个是state表示状态，默认为空值。空值是react赋的。</p><p><a href="https://imgtu.com/i/4tUvSe"><img src="https://z3.ax1x.com/2021/09/21/4tUvSe.png" alt="4tUvSe.png"></a></p><h3 id="代码-初写"><a href="#代码-初写" class="headerlink" title="代码(初写)"></a>代码(初写)</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个“容器” --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// let that = this</span>        <span class="token comment" spellcheck="true">//1.创建类式组件,是继承react里面内置的一个类</span>        <span class="token keyword">class</span> <span class="token class-name">Weather</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 构造器调用了几次？ ——1次</span>            <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"constructor"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> isHot<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> wind<span class="token punctuation">:</span> <span class="token string">"微风"</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// that = this</span>                <span class="token comment" spellcheck="true">// bind是改this指向,this指向改成this,this即实例对象,实例自身会生成一个changeWeather函数,会被优先调用</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>changeWeather <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>changeWeather<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//构造器可以不用写，直接继承，但render必须写</span>            <span class="token comment" spellcheck="true">//render调用几次？ ---- 1+n次 1是初始化的那次，n是状态跟新的次数</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"render"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//render是放在哪里的？ --- 类的原型对象上，供实例使用。</span>                <span class="token comment" spellcheck="true">//render中的this是谁？---- MyComponent的实例对象。</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"redner中的this"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 解构赋值</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> isHot<span class="token punctuation">,</span>wind <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state                <span class="token comment" spellcheck="true">// react中onclik中c要大写,且函数名不能是字符串，要读出demo得用&amp;#123;&amp;#125;，且吧demo()去掉，demo交给onclick回调，加括号就相当于直接被调用了</span>                <span class="token keyword">return</span> <span class="token operator">&lt;</span>h2 onClick<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>changeWeather<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>今天天气很<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>isHot <span class="token operator">?</span> <span class="token string">"炎热"</span> <span class="token punctuation">:</span> <span class="token string">"凉爽"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>wind<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// changeweather放在哪里?-- weather的原型对象上，供实例使用</span>            <span class="token comment" spellcheck="true">// 通过weather实例调用changeweather时，changelweather中的this就是weather实例</span>            <span class="token comment" spellcheck="true">// changeWeather调用几次？ 点几次调用几次</span>            <span class="token function">changeWeather</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'changeWeather'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// alert("标题被点击了")</span>            <span class="token comment" spellcheck="true">// babel开启了严格模式，this不是window而是undefined，this是拿不到state里面的数据的</span>            <span class="token comment" spellcheck="true">// 类中方法默认开启了局部严格模式，所有changeWeather中的this为undefined，没有通过实例来调用</span>            <span class="token comment" spellcheck="true">// console.log(this.state.isHot);</span>            <span class="token comment" spellcheck="true">// 严重注意，状态(state)不可直接更改，下面这行就是直接更改，要借助一个内置api去更改</span>            <span class="token keyword">const</span> isHot <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>isHot              <span class="token comment" spellcheck="true">// this.state.isHot = !isHot        这是错误写法</span>            <span class="token comment" spellcheck="true">// 严重注意，状态必须通过setState更改,是一种合并而不是替代</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>isHot<span class="token punctuation">:</span><span class="token operator">!</span>isHot<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>        <span class="token comment" spellcheck="true">// 上面一个render和下面一个render不是一个东西</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Weather <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true">/*        执行了ReactDOM.render(&lt;Demo/>,document.getElementById("test"))之后会发生什么    1.react解析组件标签，找到了MyComponent组件。    2.发现组件的使用类定义的，随后new出来该类的实例，并通过实例调用到原型的render方法。    3.将render返回的虚拟DOM转为真实dom，随后呈现在页面中。    */</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>总结</p><blockquote><ol><li>构造器this是没问题的。</li><li>render构造器中this也没问题,因为写成了组件，组件默认会创建一个实例，然后通过实例去调用，this会生效。</li><li>changeWeather中的this有问题，因为不是通过实例来调用的，如果要使用则需要改this指向。</li></ol></blockquote><h3 id="简写"><a href="#简写" class="headerlink" title="简写"></a>简写</h3><ol><li>初始化状态简写</li></ol><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个“容器” --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// 1.创建类式组件</span>        <span class="token keyword">class</span> <span class="token class-name">Weather</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 为实例添加一个属性</span>            state <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> isHot<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> wind<span class="token punctuation">:</span> <span class="token string">"微风"</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> isHot<span class="token punctuation">,</span> wind <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state                <span class="token keyword">return</span> <span class="token operator">&lt;</span>h2 onClick<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>changeWeather<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>今天天气很<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>isHot <span class="token operator">?</span> <span class="token string">"炎热"</span> <span class="token punctuation">:</span> <span class="token string">"凉爽"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>wind<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 以赋值形式出现，不需要写在原型对象上，写在示例自身，但this有问题，所以得写成箭头函数</span>            <span class="token comment" spellcheck="true">/*            changeWeather=function() &amp;#123;                           const isHot = this.state.isHot                           this.setState(&amp;#123; isHot: !isHot &amp;#125;)                       &amp;#125; */</span>            <span class="token comment" spellcheck="true">// 箭头函数自身没有this指向，写this不会报错，会默认使用他外层是的this指向作为自己的this指向，可以在箭头函数中log一下this的指向</span>            <span class="token comment" spellcheck="true">// 自定义方法——要用赋值语句的形式加箭头函数</span>            changeWeather <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> isHot <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>isHot                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> isHot<span class="token punctuation">:</span> <span class="token operator">!</span>isHot <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Weather <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true">/*                 执行了ReactDOM.render(&lt;Demo/>,document.getElementById("test"))之后会发生什么             1.react解析组件标签，找到了MyComponent组件。             2.发现组件的使用类定义的，随后new出来该类的实例，并通过实例调用到原型的render方法。             3.将render返回的虚拟DOM转为真实dom，随后呈现在页面中。             */</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><ol><li> 箭头函数自身没有this指向，写this不会报错，会默认使用他外层是的this指向作为自己的this指向，可以在箭头函数中log一下this的指向</li><li> 类中可以直接写赋值语句,不用let，类中不能随便写代码，如下代码的含义是，给car的实例对象添加一个属性，名为a，值为1。但值从外部传，则必须从写构造器接，如果写死则直接写在类里面以赋值语句形式。</li></ol></blockquote><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h4 id="理解"><a href="#理解" class="headerlink" title="理解"></a>理解</h4><h4 id="强烈注意"><a href="#强烈注意" class="headerlink" title="强烈注意"></a>强烈注意</h4><ol><li>组件中render方法中的this为组件实例对象。</li><li>组件自定义的方法中this为undefined，如何解决？</li></ol><blockquote><p>a.强制绑定this：通过函数对象的bind()</p><p>b.箭头函数</p></blockquote><p>​    3.状态数据，不能直接修改或者跟新。</p>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react里面的组件</title>
      <link href="/2021/09/22/react-li-mian-de-zu-jian/"/>
      <url>/2021/09/22/react-li-mian-de-zu-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="类式组件"><a href="#类式组件" class="headerlink" title="类式组件"></a>类式组件</h1><h2 id="react中的组件"><a href="#react中的组件" class="headerlink" title="react中的组件"></a>react中的组件</h2><h3 id="函数组件"><a href="#函数组件" class="headerlink" title="函数组件"></a>函数组件</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">      <span class="token comment" spellcheck="true">//1.创建函数式组件</span>       <span class="token keyword">function</span> <span class="token function">MyComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>           console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//此处的this是undefined，因为babel编译后开启了严格模式</span>           <span class="token keyword">return</span> <span class="token operator">&lt;</span>h2<span class="token operator">></span><span class="token function">我是用函数定义的组件</span><span class="token punctuation">(</span>适用于【简单组件】的定义<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>       <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>       ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyComponent<span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>       <span class="token comment" spellcheck="true">/*        执行了ReactDOM.render(&lt;Demo/>,document.getElementById("test"))之后会发生什么            1.react解析组件标签，找到了MyComponent组件。            2.发现组件是使用函数定义的，随后调用函数，将返回的虚拟dom转为真实dom，随后呈现再页面中。       */</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="类式组件-1"><a href="#类式组件-1" class="headerlink" title="类式组件"></a>类式组件</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个“容器” --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">//1.创建类式组件,是继承react里面内置的一个类</span>        <span class="token keyword">class</span> <span class="token class-name">MyComponent</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//构造器不用写，直接继承，但render必须写</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//render是放在哪里的？ --- 类的原型对象上，供实例使用。</span>                <span class="token comment" spellcheck="true">//render中的this是谁？---- MyComponent的实例对象。</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"redner中的this"</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token operator">&lt;</span>h2<span class="token operator">></span><span class="token function">我是用类定义的组件</span><span class="token punctuation">(</span>适用于【复杂组件】的定义<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>        <span class="token comment" spellcheck="true">// 上面一个render和下面一个render不是一个东西</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyComponent<span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>               <span class="token comment" spellcheck="true">/*        执行了ReactDOM.render(&lt;Demo/>,document.getElementById("test"))之后会发生什么            1.react解析组件标签，找到了MyComponent组件。            2.发现组件的使用类定义的，随后new出来该类的实例，并通过实例调用到原型的render方法。            3.将render返回的虚拟DOM转为真实dom，随后呈现在页面中。       */</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>原生js的点击事件及react点击事件</title>
      <link href="/2021/09/22/yuan-sheng-js-de-dian-ji-shi-jian-ji-react-dian-ji-shi-jian/"/>
      <url>/2021/09/22/yuan-sheng-js-de-dian-ji-shi-jian-ji-react-dian-ji-shi-jian/</url>
      
        <content type="html"><![CDATA[<h3 id="原生js点击事件"><a href="#原生js点击事件" class="headerlink" title="原生js点击事件"></a>原生js点击事件</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>btn1<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>按钮1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>btn2<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>按钮2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>按钮3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token comment" spellcheck="true">// 方法一</span>        <span class="token comment" spellcheck="true">// 拿到dom</span>        <span class="token keyword">const</span> btn1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn1'</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>btn1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 操作dom</span>        btn1<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"按钮1被点击了"</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//方法二</span>        <span class="token comment" spellcheck="true">// 拿到dom</span>        <span class="token keyword">const</span> btn2 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn2'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// 操作dom</span>        btn2<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'按钮2被点击了'</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 方法三,react推荐方法</span>        <span class="token keyword">function</span> <span class="token function">demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"按钮3被点击了"</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="react点击事件"><a href="#react点击事件" class="headerlink" title="react点击事件"></a>react点击事件</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个“容器” --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">//1.创建类式组件,是继承react里面内置的一个类</span>        <span class="token keyword">class</span> <span class="token class-name">Weather</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> isHot<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> wind<span class="token punctuation">:</span> <span class="token string">"微风"</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//构造器可以不用写，直接继承，但render必须写</span>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//render是放在哪里的？ --- 类的原型对象上，供实例使用。</span>                <span class="token comment" spellcheck="true">//render中的this是谁？---- MyComponent的实例对象。</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"redner中的this"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 解构赋值</span>                <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> isHot <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state                <span class="token comment" spellcheck="true">// react中onclik中c要大写,且函数名不能是字符串，要读出demo得用&amp;#123;&amp;#125;，且吧demo()去掉，demo交给onclick回调，加括号就相当于直接被调用了</span>                <span class="token keyword">return</span> <span class="token operator">&lt;</span>h2 onClick<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>demo<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>今天天气很<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>isHot <span class="token operator">?</span> <span class="token string">"炎热"</span> <span class="token punctuation">:</span> <span class="token string">"凉爽"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>        <span class="token comment" spellcheck="true">// 上面一个render和下面一个render不是一个东西</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Weather <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">function</span> <span class="token function">demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"标题被点击了"</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">/*        执行了ReactDOM.render(&lt;Demo/>,document.getElementById("test"))之后会发生什么    1.react解析组件标签，找到了MyComponent组件。    2.发现组件的使用类定义的，随后new出来该类的实例，并通过实例调用到原型的render方法。    3.将render返回的虚拟DOM转为真实dom，随后呈现在页面中。    */</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>类的复习总结</title>
      <link href="/2021/09/21/lei-de-fu-xi-zong-jie/"/>
      <url>/2021/09/21/lei-de-fu-xi-zong-jie/</url>
      
        <content type="html"><![CDATA[<h3 id="类的复习"><a href="#类的复习" class="headerlink" title="类的复习"></a>类的复习</h3><h3 id="this指向问题"><a href="#this指向问题" class="headerlink" title="this指向问题"></a>this指向问题</h3><blockquote><p>哪个函数调用，this就指向谁,一般是指向实例。</p></blockquote><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li>类中的构造器不是必须写的，要对实例进行一些初始化操作，如添加指定属性时候才写。</li><li>如果Ａ类继承了Ｂ类，且Ａ类中写了构造器，那么Ａ类构造器中的ｓｕｐｅｒ是必须要调用的。</li><li>类中所定义的方法，都是放在类的原型对象上的，供实例去使用。</li><li>类中可以直接写赋值语句,不用let，类中不能随便写代码，如下代码的含义是，给car的实例对象添加一个属性，名为a，值为1。<br> 但值从外部传，则必须从写构造器接，如果写死则直接写在类里面以赋值语句形式。</li></ol><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>类的基本知识<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">//创建一个Person类</span>        <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 构造器方法</span>            <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//构造器中this是谁？ -- 类的实例对象</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name                <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//一般方法</span>            <span class="token function">speak</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//speak方法放在哪里？---类的原型对象上，供实例使用,this谁调用就指向谁</span>                <span class="token comment" spellcheck="true">//speak中的this是Person的实例</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`我叫$&amp;#123;this.name&amp;#125;，我年龄是$&amp;#123;this.age&amp;#125;`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//创建一个Person的实例对象</span>        <span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"tom"</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span>        <span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"jerry"</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span>        p1<span class="token punctuation">.</span><span class="token function">speak</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        p2<span class="token punctuation">.</span><span class="token function">speak</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//创建一个student类，继承于Person类</span>        <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token keyword">extends</span> <span class="token class-name">Person</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>grade<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 相当于上面的 this.name = name  this.age = age super是继承父类的写法</span>                <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>grade <span class="token operator">=</span> grade            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>             <span class="token comment" spellcheck="true">// 重写从父类继承过程的方法，原型链优先查找前面的，找到后后面就失效了</span>             <span class="token function">speak</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`叫$&amp;#123;this.name&amp;#125;，我年龄是$&amp;#123;this.age&amp;#125;,我是$&amp;#123;this.grade&amp;#125;`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>             <span class="token function">study</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                 <span class="token comment" spellcheck="true">//study方法放在哪里？-类的原型对象上，供实例使用</span>                <span class="token comment" spellcheck="true">//通过Student实例调用study时，study中的this就是是student的实例</span>                 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"我努力的许信"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> s1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"小张"</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token string">"高一"</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 调用了父类的说话方法</span>        s1<span class="token punctuation">.</span><span class="token function">speak</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        s1<span class="token punctuation">.</span><span class="token function">study</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>price<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name                <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price                <span class="token comment" spellcheck="true">// this.wheel = 4</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 类中可以直接写赋值语句,不用let，类中不能随便写代码，如下代码的含义是，给car的实例对象添加一个属性，名为a，值为1。</span>            <span class="token comment" spellcheck="true">// 但值从外部传，则必须从写构造器接，如果写死则直接写在类里面以赋值语句形式。</span>            a <span class="token operator">=</span> <span class="token number">1</span>            wheel <span class="token operator">=</span> <span class="token number">4</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> c1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token string">'奔驰c63'</span><span class="token punctuation">,</span><span class="token number">199</span><span class="token punctuation">)</span>        <span class="token keyword">const</span> c2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token string">'宝马'</span><span class="token punctuation">,</span><span class="token number">198</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c1<span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c2<span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="原型对象和原型链"><a href="#原型对象和原型链" class="headerlink" title="原型对象和原型链"></a>原型对象和原型链</h3><p><a href="https://imgtu.com/i/4tAMIf"><img src="https://z3.ax1x.com/2021/09/21/4tAMIf.png" alt="4tAMIf.png"></a></p><blockquote><p>以继承来的student类为例，原型是person，speak和study方法是放在原型里面供student实例调用的，调用speak方法时候，他会顺着原型链去找，优先使用前面原型的speak方法，后面没用，在student里面重写的speak方法会被优先调用。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hello react</title>
      <link href="/2021/09/21/hello-react/"/>
      <url>/2021/09/21/hello-react/</url>
      
        <content type="html"><![CDATA[<h1 id="React"><a href="#React" class="headerlink" title="React"></a>React</h1><h2 id="认识React"><a href="#认识React" class="headerlink" title="认识React"></a>认识React</h2><h3 id="是什么？"><a href="#是什么？" class="headerlink" title="是什么？"></a>是什么？</h3><p>用于构建用户界面的javascript的库。</p><p>是一个将数据渲染为html视图的开源javascript库。</p><h3 id="怎么展示数据"><a href="#怎么展示数据" class="headerlink" title="怎么展示数据"></a>怎么展示数据</h3><p><a href="https://imgtu.com/i/hLa1ZF"><img src="https://z3.ax1x.com/2021/09/09/hLa1ZF.png" alt="hLa1ZF.png"></a></p><blockquote><p>react负责最后最后一步，只负责数据的呈现。</p></blockquote><h3 id="谁开发的？"><a href="#谁开发的？" class="headerlink" title="谁开发的？"></a>谁开发的？</h3><blockquote><p>由Facebook开发，且开源。现被腾讯阿里广泛使用。</p></blockquote><h3 id="为什么要学？"><a href="#为什么要学？" class="headerlink" title="为什么要学？"></a>为什么要学？</h3><p><a href="https://imgtu.com/i/hLw9HS"><img src="https://z3.ax1x.com/2021/09/09/hLw9HS.md.png" alt="hLw9HS.md.png"></a></p><h3 id="react的特点"><a href="#react的特点" class="headerlink" title="react的特点"></a>react的特点</h3><p><a href="https://imgtu.com/i/hLwWVS"><img src="https://z3.ax1x.com/2021/09/09/hLwWVS.png" alt="hLwWVS.png"></a></p><h3 id="原生js和react操作数据的区别"><a href="#原生js和react操作数据的区别" class="headerlink" title="原生js和react操作数据的区别"></a>原生js和react操作数据的区别</h3><p><a href="https://imgtu.com/i/hL01Z8"><img src="https://z3.ax1x.com/2021/09/09/hL01Z8.png" alt="hL01Z8.png"></a></p><p><a href="https://imgtu.com/i/hL0roF"><img src="https://z3.ax1x.com/2021/09/09/hL0roF.png" alt="hL0roF.png"></a></p><blockquote><p>react会比较虚拟dom，已经有的dom不会重新操作，只会操作新的。</p></blockquote><h3 id="jQuery与react的区别"><a href="#jQuery与react的区别" class="headerlink" title="jQuery与react的区别"></a>jQuery与react的区别</h3><p>首先来看jQuery</p><blockquote><p>jQuery 是一个 JavaScript 库。</p><p>jQuery 极大地简化了 JavaScript 编程。</p><p>jQuery 很容易学习。</p></blockquote><p>jQuery只是简化了操作dom的代码，用$来简化代码，但是并没有简化过程，而react是简化过程。</p><h2 id="hello-react"><a href="#hello-react" class="headerlink" title="hello react"></a>hello react</h2><h3 id="首先引入babel，react核心库，react操作dom库"><a href="#首先引入babel，react核心库，react操作dom库" class="headerlink" title="首先引入babel，react核心库，react操作dom库"></a>首先引入babel，react核心库，react操作dom库</h3><p>babel可以</p><blockquote><p>1.es6 =》 es5  以前</p><p>2.jsx  =》 js 现在</p></blockquote><p>代码区域：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// 1.创建虚拟dom</span>        <span class="token keyword">const</span> VDOM <span class="token operator">=</span> <span class="token operator">&lt;</span>h1<span class="token operator">></span>Hello<span class="token punctuation">,</span>React<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>  <span class="token comment" spellcheck="true">//此处一定不要写引号，因为不是字符串</span>        <span class="token comment" spellcheck="true">// 2.渲染虚拟dom到页面,ReactDom是上面引入的react-dom</span>        <span class="token comment" spellcheck="true">// ReactDom.render(虚拟dom,容器)</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>VDOM<span class="token punctuation">,</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果：</p><p><a href="https://imgtu.com/i/hL4Qa9"><img src="https://z3.ax1x.com/2021/09/09/hL4Qa9.png" alt="hL4Qa9.png"></a></p><blockquote><p>jsx比纯js写法简单，jsx可以比较简洁的创建虚拟dom</p></blockquote><h3 id="虚拟dom与真实dom"><a href="#虚拟dom与真实dom" class="headerlink" title="虚拟dom与真实dom"></a>虚拟dom与真实dom</h3><pre class="line-numbers language-js"><code class="language-js">  <span class="token keyword">const</span> TDOM <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"虚拟dom"</span><span class="token punctuation">,</span>VDOM<span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"真实dom"</span><span class="token punctuation">,</span>TDOM<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">debugger</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// console.log(typeof VDOM);</span>        <span class="token comment" spellcheck="true">// console.log(VDOM instanceof Object);</span>        <span class="token comment" spellcheck="true">// 关于虚拟dom</span>        <span class="token comment" spellcheck="true">// 1.本质是Object类型的对象(一般对象)</span>        <span class="token comment" spellcheck="true">// 2.虚拟dom比较"轻",真实dom比较重，因为虚拟dom是react内部在用，无需真实dom上那么的多属性</span>        <span class="token comment" spellcheck="true">// 3.虚拟dom最终会被React转化为真实dom,呈现在页面上</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="jsx语法规则"><a href="#jsx语法规则" class="headerlink" title="jsx语法规则"></a>jsx语法规则</h3><blockquote><pre><code>           1.定义虚拟dom时候，不要写引号。       2.标签中混入js表达式要用&#123;&#125;。       3.样式的类名不要用class，要用className。       4.内联样式，要用style=&#123;&#123;key:value&#125;&#125;的形式去写       5.只有一个根标签       6.标签必须闭合       7.标签首字母           (1).若小写字母开头，则将改标签转为html中同名元素，若htm1中无该标签对应的同名元素，则报错。           (2).若大写字母开头，react就去渲染对应的组件，若组件没有定义，则报错。|</code></pre></blockquote><h4 id="xml"><a href="#xml" class="headerlink" title="xml"></a>xml</h4><blockquote><p>xml早期用于存储和传输数据</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>student</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Tom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>age</span><span class="token punctuation">></span></span>19<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>age</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>student</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>====》</p><pre class="line-numbers language-js"><code class="language-js"><span class="token string">"&amp;#123;"</span>name<span class="token string">":"</span>Tom<span class="token string">","</span>age<span class="token string">":19&amp;#125;"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token number">.</span>title &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">const</span> myId <span class="token operator">=</span> <span class="token string">"aTgUiGu"</span>        <span class="token keyword">const</span> myData <span class="token operator">=</span> <span class="token string">"Hello,rEaCt"</span>        <span class="token comment" spellcheck="true">// 1.创建虚拟dom </span>        <span class="token keyword">const</span> VDOM <span class="token operator">=</span> <span class="token punctuation">(</span>            <span class="token operator">&lt;</span>div<span class="token operator">></span>                <span class="token operator">&lt;</span>h2 className<span class="token operator">=</span><span class="token string">"title"</span> id<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>myId<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> color<span class="token punctuation">:</span> <span class="token string">"white"</span><span class="token punctuation">,</span> fontSize<span class="token punctuation">:</span> <span class="token string">"29px"</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>myData<span class="token punctuation">.</span><span class="token function">toLocaleLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>                <span class="token operator">&lt;</span>h2 className<span class="token operator">=</span><span class="token string">"title"</span> id<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>myId<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>span style<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> color<span class="token punctuation">:</span> <span class="token string">"white"</span><span class="token punctuation">,</span> fontSize<span class="token punctuation">:</span> <span class="token string">"29px"</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>myData<span class="token punctuation">.</span><span class="token function">toLocaleLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>                <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> <span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//渲染虚拟dom到页面</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>VDOM<span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">/*            jsx语法规则:                1.定义虚拟dom时候，不要写引号。                2.标签中混入js表达式要用&amp;#123;&amp;#125;。                3.样式的类名不要用class，要用className。                4.内联样式，要用style=&amp;#123;&amp;#123;key:value&amp;#125;&amp;#125;的形式去写                5.只有一个根标签                6.标签必须闭合                7.标签首字母                (1).若小写字母开头，则将改标签转为html中同名元素，若htm1中无该标签对应的同名元素，则报错。                (2).若大写字母开头，react就去渲染对应的组件，若组件没有定义，则报错。|            */</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="表达式和代码-语句-的区别"><a href="#表达式和代码-语句-的区别" class="headerlink" title="表达式和代码(语句)的区别"></a>表达式和代码(语句)的区别</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">/*一定注意区分:【js语句(代码)】与【js表达式】                用const可以接，就是表达式，不能接就是代码                1.表达式：一个表达式会表示一个值，可以放在任何一个需要值的地方下面这这些都是表达式                (1). a                (2). a + b                (3). demo(1)                (4).arr.map()                2.语句(代码)                下面这些都是语句(代码)：                    (1).if() &amp;#123;&amp;#125;                    (2).for() &amp;#123;&amp;#125;                    (3).switch()&amp;#123;case:xxxxx&amp;#125;        */</span>        <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Angular'</span><span class="token punctuation">,</span> <span class="token string">'react'</span><span class="token punctuation">,</span> <span class="token string">'Vue'</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true">// 1.创建虚拟dom</span>        <span class="token keyword">const</span> VDOM <span class="token operator">=</span> <span class="token punctuation">(</span>            <span class="token operator">&lt;</span>div<span class="token operator">></span>                <span class="token operator">&lt;</span>h1<span class="token operator">></span>前端js框架列表<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>                <span class="token operator">&lt;</span>ul<span class="token operator">></span>                    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span>index<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                            <span class="token keyword">return</span> <span class="token operator">&lt;</span>li key<span class="token operator">=</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>index<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>item<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>                        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//此处一定不要写引号，因为不是字符串</span>        <span class="token comment" spellcheck="true">// 2.渲染虚拟dom到页面,ReactDom是上面引入的react-dom</span>        <span class="token comment" spellcheck="true">// ReactDom.render(虚拟dom,容器)</span>        ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>VDOM<span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="react中的组件"><a href="#react中的组件" class="headerlink" title="react中的组件"></a>react中的组件</h2><h3 id="函数组件"><a href="#函数组件" class="headerlink" title="函数组件"></a>函数组件</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 准备好一个容器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入包，注意引入顺序 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react核心库 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入react-dom，用于支持react操作dom --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/react-dom.development.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入babel，用于讲jsx转入为js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/babel.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 下面写babel表示写的是jsx，而不是js，而且用babel来翻译，此处必须写babel --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/babel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">      <span class="token comment" spellcheck="true">//1.创建函数式组件</span>       <span class="token keyword">function</span> <span class="token function">MyComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>           console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//此处的this是undefined，因为babel编译后开启了严格模式</span>           <span class="token keyword">return</span> <span class="token operator">&lt;</span>h2<span class="token operator">></span><span class="token function">我是用函数定义的组件</span><span class="token punctuation">(</span>适用于【简单组件】的定义<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>       <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//2.渲染组件到页面</span>       ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyComponent<span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>       <span class="token comment" spellcheck="true">/*        执行了ReactDOM.render(&lt;Demo/>,document.getElementById("test"))之后会发生什么            1.react解析组件标签，找到            2.发现组件是使用函数定义的，随后调用函数，将返回的虚拟dom转为真实dom，随后呈现再页面中。       */</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信自带的获取地理位置</title>
      <link href="/2021/09/02/wei-xin-zi-dai-de-huo-qu-di-li-wei-zhi/"/>
      <url>/2021/09/02/wei-xin-zi-dai-de-huo-qu-di-li-wei-zhi/</url>
      
        <content type="html"><![CDATA[<h3 id="一、配置-app-json-文件，加入以下代码："><a href="#一、配置-app-json-文件，加入以下代码：" class="headerlink" title="一、配置 app.json 文件，加入以下代码："></a>一、配置 app.json 文件，加入以下代码：</h3><pre class="line-numbers language-json"><code class="language-json"><span class="token property">"permission"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token property">"scope.userLocation"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token property">"desc"</span><span class="token operator">:</span> <span class="token string">"这里填写描述信息(如：美团请求获取您的位置信息)"</span>  &amp;#<span class="token number">125</span><span class="token punctuation">;</span>&amp;#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>不知道加在哪里的话，请看如下配置示例：</p><pre class="line-numbers language-json"><code class="language-json">&amp;#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token property">"pages"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token string">"pages/index/homePage/homePage"</span><span class="token punctuation">,</span>    <span class="token string">"pages/menu/homePage/homePage"</span><span class="token punctuation">,</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"permission"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token property">"scope.userLocation"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token property">"desc"</span><span class="token operator">:</span> <span class="token string">"请求获取您的位置信息"</span>    &amp;#<span class="token number">125</span><span class="token punctuation">;</span>  &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>  <span class="token property">"window"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token property">"navigationBarBackgroundColor"</span><span class="token operator">:</span> <span class="token string">"#ffffff"</span><span class="token punctuation">,</span>  &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>  <span class="token property">"sitemapLocation"</span><span class="token operator">:</span> <span class="token string">"sitemap.json"</span>&amp;#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样，就完成了授权配置工作。</p><h3 id="代码实现：打开地图选择位置"><a href="#代码实现：打开地图选择位置" class="headerlink" title="代码实现：打开地图选择位置"></a>代码实现：打开地图选择位置</h3><p>推荐这种方式，由用户选择并确定，开发者也容易获取到当前位置信息。</p><p>我们来实现一下 wx.chooseLocation 由用户选择或搜索地址。</p><pre class="line-numbers language-json"><code class="language-json">/** 很简单，直接在按钮中触发函数调用api即可* 返回的res就包含了用户所选择的当前位置信息* <span class="token punctuation">[</span>api其他配置项请参照文档根据自身需求配置<span class="token punctuation">]</span>  */  wx.chooseLocation(&amp;#<span class="token number">123</span><span class="token punctuation">;</span>   success<span class="token operator">:</span>function(res<span class="token punctuation">)</span>   &amp;#<span class="token number">123</span><span class="token punctuation">;</span>    console.log(res<span class="token punctuation">)</span>//包含所有当前位置信息   &amp;#<span class="token number">125</span><span class="token punctuation">;</span>  &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://imgtu.com/i/hraAX9"><img src="https://z3.ax1x.com/2021/09/02/hraAX9.png" alt="hraAX9.png"></a></p><p>打印结果：</p><p><a href="https://imgtu.com/i/hraY7t"><img src="https://z3.ax1x.com/2021/09/02/hraY7t.png" alt="hraY7t.png"></a></p><h3 id="实现：返回位置经纬度"><a href="#实现：返回位置经纬度" class="headerlink" title="实现：返回位置经纬度"></a>实现：返回位置经纬度</h3><blockquote><p>这种方式更适合与 map 地图组件配合，用于动态刷新地图位置，但不适合获取当前位置信息。</p></blockquote><p>我们来实现一下 wx.getLocation 方式获取经纬度等信息，但你需要将经纬度转为真实地址才能获取使用（如果你是与 map 地图组件配合那么不需要转换）。</p><pre class="line-numbers language-js"><code class="language-js">wx<span class="token punctuation">.</span><span class="token function">getLocation</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  type<span class="token punctuation">:</span> <span class="token string">'wgs84'</span><span class="token punctuation">,</span>  success <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 返回数据</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>打印结果（可以看到已经返回了经纬度，就证明已经定位到当前位置了）：</p><p><a href="https://imgtu.com/i/hrabAx"><img src="https://z3.ax1x.com/2021/09/02/hrabAx.png" alt="hrabAx.png"></a></p><p>经纬度转真实地址比较繁琐，具体请参照：这篇文章，或参照相关资料。</p><h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><p><a href="https://zhuanlan.zhihu.com/p/121549758">扩展连接</a></p><blockquote><p>亲测可实现</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> uniapp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uniapp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue中识别rem</title>
      <link href="/2021/09/01/vue-zhong-shi-bie-rem/"/>
      <url>/2021/09/01/vue-zhong-shi-bie-rem/</url>
      
        <content type="html"><![CDATA[<p>vue中使用rem<br>vue现在正是火的势头上，作者说明年估计3.0要出来了。那么在vue我们如果做移动端自适应怎么弄呢？</p><h3 id="安装flexible"><a href="#安装flexible" class="headerlink" title="安装flexible"></a>安装flexible</h3><p>在命令行中运行如下安装：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i lib-flexible --save-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="引入flexible"><a href="#引入flexible" class="headerlink" title="引入flexible"></a>引入flexible</h3><p>在项目入口文件 main.js 里 引入 lib-flexible</p><pre class="line-numbers language-bash"><code class="language-bash">// main.js<span class="token function">import</span> <span class="token string">'lib-flexible'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>​    对于我们的index.html，最好是不要meta标签，flexible会自动添加上的，因为有一个判断。当然了，懒惰果然是最大的生产力，有的人觉得换算rem太麻烦，就出现了插件px2rem-loader，把px自动转化为对应的rem。但是呢，麻烦的就是如果引入外部的css文件，那么也会把px转化为rem。自己在项目中就是手动计算rem，用上面的方法，直接除以100，这个应该很简单吧，都是程序员，数学这个还是可以吧……</p><h3 id="大屏自适应"><a href="#大屏自适应" class="headerlink" title="大屏自适应"></a>大屏自适应</h3><p><a href="https://imgtu.com/i/hw6ycD"><img src="https://z3.ax1x.com/2021/09/01/hw6ycD.png" alt="hw6ycD.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue中“$”未定义</title>
      <link href="/2021/09/01/vue-zhong/"/>
      <url>/2021/09/01/vue-zhong/</url>
      
        <content type="html"><![CDATA[<p>首先下载jQuery</p><pre class="line-numbers language-javascript"><code class="language-javascript">npm install jquery <span class="token operator">--</span>save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后在main.js中</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> $ <span class="token keyword">from</span> <span class="token string">'jquery'</span>window<span class="token punctuation">.</span>jQuery <span class="token operator">=</span> $window<span class="token punctuation">.</span>$ <span class="token operator">=</span> $<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这样组件里面的$就可以正常使用了</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务端渲染技术NUXT</title>
      <link href="/2021/08/25/fu-wu-duan-xuan-ran-ji-zhu-nuxt/"/>
      <url>/2021/08/25/fu-wu-duan-xuan-ran-ji-zhu-nuxt/</url>
      
        <content type="html"><![CDATA[<h1 id="一、服务端渲染技术NUXT"><a href="#一、服务端渲染技术NUXT" class="headerlink" title="一、服务端渲染技术NUXT"></a>一、服务端渲染技术NUXT</h1><h2 id="1、什么是服务端渲染"><a href="#1、什么是服务端渲染" class="headerlink" title="1、什么是服务端渲染"></a>1、什么是服务端渲染</h2><p>​    服务端渲染又称SSR  (Server Side Render)是在服务端完成页面的内容，而不是在客户端通过AJAX获取数据。</p><p>服务器端渲染(SSR)的优势主要在于：<strong>更好的 SEO</strong>，由于搜索引擎爬虫抓取工具可以直接查看完全渲染的页面。</p><p>如果你的应用程序初始展示 loading 菊花图，然后通过 Ajax 获取内容，抓取工具并不会等待异步完成后再进行页面内容的抓取。也就是说，如果 SEO 对你的站点至关重要，而你的页面又是异步获取内容，则你可能需要服务器端渲染(SSR)解决此问题。</p><p>另外，使用服务器端渲染，我们可以获得更快的内容到达时间(time-to-content)，无需等待所有的 JavaScript 都完成下载并执行，产生更好的用户体验，对于那些「内容到达时间(time-to-content)与转化率直接相关」的应用程序而言，服务器端渲染(SSR)至关重要。</p><h2 id="2、什么是NUXT"><a href="#2、什么是NUXT" class="headerlink" title="2、什么是NUXT"></a>2、什么是NUXT</h2><p>Nuxt.js 是一个基于 Vue.js 的轻量级应用框架,可用来创建服务端渲染 (SSR) 应用,也可充当静态站点引擎生成静态站点应用,具有优雅的代码结构分层和热加载等特性。</p><p>官网网站：</p><p><a href="https://zh.nuxtjs.org/">https://zh.nuxtjs.org/</a></p><h1 id="二、NUXT环境初始化"><a href="#二、NUXT环境初始化" class="headerlink" title="二、NUXT环境初始化"></a>二、NUXT环境初始化</h1><h2 id="1、下载压缩包"><a href="#1、下载压缩包" class="headerlink" title="1、下载压缩包"></a>1、下载压缩包</h2><p><a href="https://github.com/nuxt-community/starter-template/archive/master.zip">https://github.com/nuxt-community/starter-template/archive/master.zip</a></p><h2 id="2、解压"><a href="#2、解压" class="headerlink" title="2、解压"></a>2、解压</h2><p>将template中的内容复制到 guli</p><h2 id="3、安装ESLint"><a href="#3、安装ESLint" class="headerlink" title="3、安装ESLint"></a>3、安装ESLint</h2><p>将guli-admin项目下的.eslintrc.js配置文件复制到当前项目下</p><h2 id="4、修改package-json"><a href="#4、修改package-json" class="headerlink" title="4、修改package.json"></a>4、修改package.json</h2><p>name、description、author（必须修改这里，否则项目无法安装）</p><pre><code> &quot;name&quot;: &quot;guli&quot;, &quot;version&quot;: &quot;1.0.0&quot;, &quot;description&quot;: &quot;谷粒学院前台网站&quot;, &quot;author&quot;: &quot;Helen &lt;55317332@qq.com&gt;&quot;,</code></pre><h2 id="5、修改nuxt-config-js"><a href="#5、修改nuxt-config-js" class="headerlink" title="5、修改nuxt.config.js"></a>5、修改nuxt.config.js</h2><p>修改</p><pre class="line-numbers language-JS"><code class="language-JS">title: '&#123;&#123; name &#125;&#125;'、content: '&#123;&#123;escape description &#125;&#125;'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里的设置最后会显示在页面标题栏和meta数据中</p><pre><code>head: &#123;    title: &#39;谷粒学院 - Java视频|HTML5视频|前端视频|Python视频|大数据视频-自学拿1万+月薪的IT在线视频课程，谷粉力挺，老学员为你推荐&#39;,    meta: [      &#123; charset: &#39;utf-8&#39; &#125;,      &#123; name: &#39;viewport&#39;, content: &#39;width=device-width, initial-scale=1&#39; &#125;,      &#123; hid: &#39;keywords&#39;, name: &#39;keywords&#39;, content: &#39;谷粒学院,IT在线视频教程,Java视频,HTML5视频,前端视频,Python视频,大数据视频&#39; &#125;,      &#123; hid: &#39;description&#39;, name: &#39;description&#39;, content: &#39;谷粒学院是国内领先的IT在线视频学习平台、职业教育平台。截止目前,谷粒学院线上、线下学习人次数以万计！会同上百个知名开发团队联合制定的Java、HTML5前端、大数据、Python等视频课程，被广大学习者及IT工程师誉为：业界最适合自学、代码量最大、案例最多、实战性最强、技术最前沿的IT系列视频课程！&#39; &#125;    ],    link: [      &#123; rel: &#39;icon&#39;, type: &#39;image/x-icon&#39;, href: &#39;/favicon.ico&#39; &#125;    ]&#125;,</code></pre><h2 id="6、在命令提示终端中进入项目目录"><a href="#6、在命令提示终端中进入项目目录" class="headerlink" title="6、在命令提示终端中进入项目目录"></a>6、在命令提示终端中进入项目目录</h2><h2 id="7、安装依赖"><a href="#7、安装依赖" class="headerlink" title="7、安装依赖"></a>7、安装依赖</h2><pre><code>npm install</code></pre><p>![img](file:///C:/Users/29833/Documents/My Knowledge/temp/1056f577-b2d2-4fdc-8081-60ffbc276ea6/128/index_files/8e9bcd6d-6161-440b-aac2-bc9af65f5bc7.png)</p><h2 id="8、测试运行"><a href="#8、测试运行" class="headerlink" title="8、测试运行"></a>8、测试运行</h2><pre><code>npm run dev</code></pre><h2 id="9、NUXT目录结构"><a href="#9、NUXT目录结构" class="headerlink" title="9、NUXT目录结构"></a>9、NUXT目录结构</h2><p>（1）资源目录 assets</p><p> 用于组织未编译的静态资源如 LESS、SASS 或 JavaScript。</p><p>（2）组件目录 components</p><p>用于组织应用的 Vue.js 组件。Nuxt.js 不会扩展增强该目录下 Vue.js 组件，即这些组件不会像页面组件那样有 asyncData 方法的特性。</p><p>（3）布局目录 layouts</p><p>用于组织应用的布局组件。</p><p>（4）页面目录 pages</p><p>用于组织应用的路由及视图。Nuxt.js 框架读取该目录下所有的 .vue 文件并自动生成对应的路由配置。</p><p>（5）插件目录 plugins</p><p>用于组织那些需要在 根vue.js应用 实例化之前需要运行的 Javascript 插件。</p><p>（6）nuxt.config.js 文件</p><p>nuxt.config.js 文件用于组织Nuxt.js 应用的个性化配置，以便覆盖默认配置。</p><h2 id="三、幻灯片插件"><a href="#三、幻灯片插件" class="headerlink" title="三、幻灯片插件"></a>三、幻灯片插件</h2><h2 id="1、安装插件"><a href="#1、安装插件" class="headerlink" title="1、安装插件"></a><strong>1、安装插件</strong></h2><pre><code>npm install vue-awesome-swiper</code></pre><h2 id="2、配置插件"><a href="#2、配置插件" class="headerlink" title="2、配置插件"></a>2、配置插件</h2><p>在 plugins 文件夹下新建文件 nuxt-swiper-plugin.js，内容是</p><pre><code>import Vue from &#39;vue&#39;import VueAwesomeSwiper from &#39;vue-awesome-swiper/dist/ssr&#39;Vue.use(VueAwesomeSwiper)</code></pre><p>在 nuxt.config.js 文件中配置插件</p><p>将 plugins 和 css节点 复制到 module.exports节点下</p><pre><code>module.exports = &#123;  // some nuxt config...  plugins: [    &#123; src: &#39;~/plugins/nuxt-swiper-plugin.js&#39;, ssr: false &#125;  ],  css: [    &#39;swiper/dist/css/swiper.css&#39;  ]&#125;</code></pre><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      <categories>
          
          <category> nuxt </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nuxt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>首页静态效果整合和nuxt路由</title>
      <link href="/2021/08/25/shou-ye-jing-tai-xiao-guo-zheng-he-he-nuxt-lu-you/"/>
      <url>/2021/08/25/shou-ye-jing-tai-xiao-guo-zheng-he-he-nuxt-lu-you/</url>
      
        <content type="html"><![CDATA[<h1 id="一、页面布局"><a href="#一、页面布局" class="headerlink" title="一、页面布局"></a>一、页面布局</h1><h2 id="1、复制静态资源"><a href="#1、复制静态资源" class="headerlink" title="1、复制静态资源"></a>1、复制静态资源</h2><p>将静态原型中的css、img、js、photo目录拷贝至assets目录下 </p><p>将favicon.ico复制到static目录下</p><h2 id="2、定义布局"><a href="#2、定义布局" class="headerlink" title="2、定义布局"></a>2、定义布局</h2><p>我们可以把页头和页尾提取出来，形成布局页</p><p>修改layouts目录下default.vue，从静态页面中复制首页，修改了原始文件中的资源路径为~/assets/，将主内容区域的内容替换成<nuxt /></p><p>内容如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 页头部分 --></span>          <span class="token comment" spellcheck="true">&lt;!-- 内容的区域 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nuxt</span><span class="token punctuation">/></span></span>          <span class="token comment" spellcheck="true">&lt;!-- 页尾部分 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完整的内容如下</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>in-wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 公共头引入 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>logo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>谷粒学院<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>~/assets/img/logo.png<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>谷粒学院<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>h-r-nsl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>nav<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span> <span class="token attr-name">tag</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>li<span class="token punctuation">"</span></span> <span class="token attr-name">active-class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>current<span class="token punctuation">"</span></span> <span class="token attr-name">exact</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/course<span class="token punctuation">"</span></span> <span class="token attr-name">tag</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>li<span class="token punctuation">"</span></span> <span class="token attr-name">active-class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>current<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>课程<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/teacher<span class="token punctuation">"</span></span> <span class="token attr-name">tag</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>li<span class="token punctuation">"</span></span> <span class="token attr-name">active-class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>current<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>名师<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/article<span class="token punctuation">"</span></span> <span class="token attr-name">tag</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>li<span class="token punctuation">"</span></span> <span class="token attr-name">active-class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>current<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>文章<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/qa<span class="token punctuation">"</span></span> <span class="token attr-name">tag</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>li<span class="token punctuation">"</span></span> <span class="token attr-name">active-class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>current<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>问答<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>          <span class="token comment" spellcheck="true">&lt;!-- / nav --></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>h-r-login<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no-login<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/sing_in<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>登录<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>icon18 login-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vam ml5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>              |              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/sign_up<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>注册<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vam ml5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mr10 undis<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>is-login-one<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>消息<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>headerMsgCountId<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>icon18 news-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>q</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>red-point<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">display</span><span class="token punctuation">:</span> none</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>q</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>h-r-user undis<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>is-login-two<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>                  <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>~/assets/img/avatar-boy.gif<span class="token punctuation">"</span></span>                  <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span>                  <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span>                  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vam picImg<span class="token punctuation">"</span></span>                  <span class="token attr-name">alt</span>                <span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vam disIb<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userName<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>退出<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>exit();<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ml5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>退出<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- /未登录显示第1 li；登录后显示第2，3 li --></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>aside</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>h-r-search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>h-r-s-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>输入你想学的课程<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>queryCourse.courseName<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>s-btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>icon18<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>aside</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>aside</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mw-nav-btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mw-nav-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>aside</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>clear<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- /公共头引入 --></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nuxt</span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 公共底引入 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hLh30<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fsize18 f-fM c-999<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>友情链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>of flink-list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.atguigu.com/<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>尚硅谷<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>尚硅谷<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>clear<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>b-foot<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fl col-7<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mr20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>b-f-link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>关于我们<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>关于我们<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>|                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>联系我们<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>联系我们<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>|                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>帮助中心<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>帮助中心<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>|                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>资源下载<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>资源下载<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>|                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>服务热线：010-56253825(北京) 0755-85293825(深圳)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Email：info@atguigu.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>b-f-link mt10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>©2018课程版权均归谷粒学院所有 京ICP备17055252号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>aside</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fl col-3 tac mt15<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gf-tx<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>~/assets/img/wx-icon.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gf-tx<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>~/assets/img/wb-icon.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>aside</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>clear<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- /公共底引入 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">import</span> <span class="token string">"~/assets/css/reset.css"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"~/assets/css/theme.css"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"~/assets/css/global.css"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"~/assets/css/web.css"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="3、定义首页面"><a href="#3、定义首页面" class="headerlink" title="3、定义首页面"></a>3、定义首页面</h2><p>（不包含幻灯片）</p><p>修改pages/index.vue：</p><p>修改了原始文件中的资源路径为~/assets/</p><p>内容如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 幻灯片 开始 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 幻灯片 结束 --></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>aCoursesList<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 网校课程 开始 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>comm-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tac<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-333<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>热门课程<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>comm-course-list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>of<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bna<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cc-l-wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>course-img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>                        <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>~/assets/photo/course/1442295592705.jpg<span class="token punctuation">"</span></span>                        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img-responsive<span class="token punctuation">"</span></span>                        <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>听力口语<span class="token punctuation">"</span></span>                      <span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cc-mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>开始学习<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>comm-btn c-btn-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>开始学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hLh30 txtOf mt10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>听力口语<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>course-title fsize18 c-333<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>听力口语<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mt10 hLh20 of<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fr jgTag bg-green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-fff fsize12 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>免费<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fl jgAttr c-ccc f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-999 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>9634人学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                        |                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-999 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>9634评论<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cc-l-wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>course-img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>                        <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>~/assets/photo/course/1442295581911.jpg<span class="token punctuation">"</span></span>                        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img-responsive<span class="token punctuation">"</span></span>                        <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Java精品课程<span class="token punctuation">"</span></span>                      <span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cc-mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>开始学习<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>comm-btn c-btn-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>开始学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hLh30 txtOf mt10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Java精品课程<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>course-title fsize18 c-333<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Java精品课程<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mt10 hLh20 of<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fr jgTag bg-green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-fff fsize12 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>免费<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fl jgAttr c-ccc f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-999 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>501人学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                        |                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-999 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>501评论<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cc-l-wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>course-img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>                        <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>~/assets/photo/course/1442295604295.jpg<span class="token punctuation">"</span></span>                        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img-responsive<span class="token punctuation">"</span></span>                        <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>C4D零基础<span class="token punctuation">"</span></span>                      <span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cc-mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>开始学习<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>comm-btn c-btn-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>开始学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hLh30 txtOf mt10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>C4D零基础<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>course-title fsize18 c-333<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>C4D零基础<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mt10 hLh20 of<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fr jgTag bg-green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-fff fsize12 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>免费<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fl jgAttr c-ccc f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-999 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>300人学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                        |                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-999 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>300评论<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cc-l-wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>course-img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>                        <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>~/assets/photo/course/1442302831779.jpg<span class="token punctuation">"</span></span>                        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img-responsive<span class="token punctuation">"</span></span>                        <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>数学给宝宝带来的兴趣<span class="token punctuation">"</span></span>                      <span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cc-mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>开始学习<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>comm-btn c-btn-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>开始学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hLh30 txtOf mt10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>数学给宝宝带来的兴趣<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>course-title fsize18 c-333<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>数学给宝宝带来的兴趣<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mt10 hLh20 of<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fr jgTag bg-green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-fff fsize12 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>免费<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fl jgAttr c-ccc f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-999 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>256人学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                        |                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-999 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>256评论<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cc-l-wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>course-img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>                        <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>~/assets/photo/course/1442295455437.jpg<span class="token punctuation">"</span></span>                        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img-responsive<span class="token punctuation">"</span></span>                        <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>零基础入门学习Python课程学习<span class="token punctuation">"</span></span>                      <span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cc-mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>开始学习<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>comm-btn c-btn-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>开始学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hLh30 txtOf mt10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>                        <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span>                        <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>零基础入门学习Python课程学习<span class="token punctuation">"</span></span>                        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>course-title fsize18 c-333<span class="token punctuation">"</span></span>                      <span class="token punctuation">></span></span>零基础入门学习Python课程学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mt10 hLh20 of<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fr jgTag bg-green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-fff fsize12 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>免费<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fl jgAttr c-ccc f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-999 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>137人学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                        |                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-999 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>137评论<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cc-l-wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>course-img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>                        <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>~/assets/photo/course/1442295570359.jpg<span class="token punctuation">"</span></span>                        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img-responsive<span class="token punctuation">"</span></span>                        <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>MySql从入门到精通<span class="token punctuation">"</span></span>                      <span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cc-mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>开始学习<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>comm-btn c-btn-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>开始学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hLh30 txtOf mt10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>MySql从入门到精通<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>course-title fsize18 c-333<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>MySql从入门到精通<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mt10 hLh20 of<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fr jgTag bg-green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-fff fsize12 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>免费<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fl jgAttr c-ccc f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-999 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>125人学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                        |                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-999 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>125评论<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cc-l-wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>course-img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>                        <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>~/assets/photo/course/1442302852837.jpg<span class="token punctuation">"</span></span>                        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img-responsive<span class="token punctuation">"</span></span>                        <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>搜索引擎优化技术<span class="token punctuation">"</span></span>                      <span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cc-mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>开始学习<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>comm-btn c-btn-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>开始学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hLh30 txtOf mt10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>搜索引擎优化技术<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>course-title fsize18 c-333<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>搜索引擎优化技术<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mt10 hLh20 of<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fr jgTag bg-green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-fff fsize12 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>免费<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fl jgAttr c-ccc f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-999 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>123人学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                        |                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-999 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>123评论<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cc-l-wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>course-img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>                        <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>~/assets/photo/course/1442295379715.jpg<span class="token punctuation">"</span></span>                        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img-responsive<span class="token punctuation">"</span></span>                        <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20世纪西方音乐<span class="token punctuation">"</span></span>                      <span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cc-mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>开始学习<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>comm-btn c-btn-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>开始学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hLh30 txtOf mt10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20世纪西方音乐<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>course-title fsize18 c-333<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>20世纪西方音乐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mt10 hLh20 of<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fr jgTag bg-green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-fff fsize12 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>免费<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fl jgAttr c-ccc f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-999 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>34人学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                        |                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-999 f-fA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>34评论<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>clear<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tac pt20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>全部课程<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>comm-btn c-btn-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>全部课程<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- /网校课程 结束 --></span>      <span class="token comment" spellcheck="true">&lt;!-- 网校名师 开始 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>comm-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tac<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-333<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>名师大咖<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>i-teacher-list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>of<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>i-teach-wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>i-teach-pic<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/teacher/1<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>姚晨<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>姚晨<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>~/assets/photo/teacher/1442297885942.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mt10 hLh30 txtOf tac<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/teacher/1<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>姚晨<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fsize18 c-666<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>姚晨<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hLh30 txtOf tac<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fsize14 c-999<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>北京师范大学法学院副教授<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mt15 i-q-txt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span>                        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-999 f-fA<span class="token punctuation">"</span></span>                      <span class="token punctuation">></span></span>北京师范大学法学院副教授、清华大学法学博士。自2004年至今已有9年的司法考试培训经验。长期从事司法考试辅导，深知命题规律，了解解题技巧。内容把握准确，授课重点明确，层次分明，调理清晰，将法条法理与案例有机融合，强调综合，深入浅出。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>i-teach-wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>i-teach-pic<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/teacher/1<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>谢娜<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>谢娜<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>~/assets/photo/teacher/1442297919077.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mt10 hLh30 txtOf tac<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/teacher/1<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>谢娜<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fsize18 c-666<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>谢娜<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hLh30 txtOf tac<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fsize14 c-999<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>资深课程设计专家，专注10年AACTP美国培训协会认证导师<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mt15 i-q-txt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span>                        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-999 f-fA<span class="token punctuation">"</span></span>                      <span class="token punctuation">></span></span>十年课程研发和培训咨询经验，曾任国企人力资源经理、大型外企培训经理，负责企业大学和培训体系搭建；曾任专业培训机构高级顾问、研发部总监，为包括广东移动、东莞移动、深圳移动、南方电网、工商银行、农业银行、民生银行、邮储银行、TCL集团、清华大学继续教育学院、中天路桥、广西扬翔股份等超过200家企业提供过培训与咨询服务，并担任近50个大型项目的总负责人。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>i-teach-wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>i-teach-pic<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/teacher/1<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>刘德华<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>刘德华<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>~/assets/photo/teacher/1442297927029.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mt10 hLh30 txtOf tac<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/teacher/1<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>刘德华<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fsize18 c-666<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>刘德华<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hLh30 txtOf tac<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fsize14 c-999<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>上海师范大学法学院副教授<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mt15 i-q-txt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span>                        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-999 f-fA<span class="token punctuation">"</span></span>                      <span class="token punctuation">></span></span>上海师范大学法学院副教授、清华大学法学博士。自2004年至今已有9年的司法考试培训经验。长期从事司法考试辅导，深知命题规律，了解解题技巧。内容把握准确，授课重点明确，层次分明，调理清晰，将法条法理与案例有机融合，强调综合，深入浅出。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>i-teach-wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>i-teach-pic<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/teacher/1<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>周润发<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>周润发<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>~/assets/photo/teacher/1442297935589.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mt10 hLh30 txtOf tac<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/teacher/1<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>周润发<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fsize18 c-666<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>周润发<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hLh30 txtOf tac<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fsize14 c-999<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>考研政治辅导实战派专家，全国考研政治命题研究组核心成员。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mt15 i-q-txt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span>                        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c-999 f-fA<span class="token punctuation">"</span></span>                      <span class="token punctuation">></span></span>法学博士，北京师范大学马克思主义学院副教授，专攻毛泽东思想概论、邓小平理论，长期从事考研辅导。出版著作两部，发表学术论文30余篇，主持国家社会科学基金项目和教育部重大课题子课题各一项，参与中央实施马克思主义理论研究和建设工程项目。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>clear<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tac pt20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>全部讲师<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>comm-btn c-btn-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>全部讲师<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- /网校名师 结束 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、幻灯片插件"><a href="#4、幻灯片插件" class="headerlink" title="4、幻灯片插件"></a>4、幻灯片插件</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 幻灯片 开始 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-swiper:</span>mySwiper</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>swiperOption<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>swiper-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#040B1B</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>~/assets/photo/banner/1525939573202.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>首页banner<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#040B1B</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>~/assets/photo/banner/1525939573202.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>首页banner<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>swiper-pagination swiper-pagination-white<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>swiper-button-prev swiper-button-white<span class="token punctuation">"</span></span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button-prev<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>swiper-button-next swiper-button-white<span class="token punctuation">"</span></span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button-next<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 幻灯片 结束 --></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>script</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  data <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      swiperOption<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//配置分页</span>        pagination<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          el<span class="token punctuation">:</span> <span class="token string">'.swiper-pagination'</span><span class="token comment" spellcheck="true">//分页的dom节点</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">//配置导航</span>        navigation<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          nextEl<span class="token punctuation">:</span> <span class="token string">'.swiper-button-next'</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">//下一页dom节点</span>          prevEl<span class="token punctuation">:</span> <span class="token string">'.swiper-button-prev'</span><span class="token comment" spellcheck="true">//前一页dom节点</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实现效果：</p><p><a href="https://imgtu.com/i/hZn0Hg"><img src="https://z3.ax1x.com/2021/08/25/hZn0Hg.png" alt="hZn0Hg.png"></a></p><h1 id="二、路由"><a href="#二、路由" class="headerlink" title="二、路由"></a>二、路由</h1><h2 id="1、固定路由"><a href="#1、固定路由" class="headerlink" title="1、固定路由"></a>1、固定路由</h2><p><strong>（1）使用router-link构建路由，地址是/course</strong></p><p>![img](file:///C:/Users/29833/Documents/My Knowledge/temp/68995f6a-13bd-4c49-a2bb-e4e671f8d77f/128/index_files/3171c885-c389-43d9-b141-63c9aef6a701.png)</p><p><strong>（2）在page目录创建文件夹course ，在**</strong>course**<strong>目录创建index.vue</strong></p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    课程列表  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="点击导航，测试路由"><a href="#点击导航，测试路由" class="headerlink" title="点击导航，测试路由"></a>点击导航，测试路由</h2><h1 id="2、动态路由"><a href="#2、动态路由" class="headerlink" title="2、动态路由"></a>2、动态路由</h1><h2 id="（1）创建方式"><a href="#（1）创建方式" class="headerlink" title="（1）创建方式"></a>（1）创建方式</h2><p>如果我们需要根据id查询一条记录，就需要使用动态路由。NUXT的动态路由是以下划线开头的vue文件，参数名为下划线后边的文件名 </p><p>在pages下的course目录下创建_id.vue</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    讲师详情  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="三、封装axios"><a href="#三、封装axios" class="headerlink" title="三、封装axios"></a>三、封装axios</h1><p>我们可以参考guli-admin将axios操作封装起来</p><p>下载axios ，使用命令 <strong>npm install axios</strong></p><p>创建utils文件夹，utils下创建request.js</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span><span class="token comment" spellcheck="true">// 创建axios实例</span><span class="token keyword">const</span> service <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  baseURL<span class="token punctuation">:</span> <span class="token string">'http://localhost:8201'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// api的base_url</span>  timeout<span class="token punctuation">:</span> <span class="token number">20000</span> <span class="token comment" spellcheck="true">// 请求超时时间</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> nuxt </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nuxt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>富文本编辑器</title>
      <link href="/2021/08/20/fu-wen-ben-bian-ji-qi/"/>
      <url>/2021/08/20/fu-wen-ben-bian-ji-qi/</url>
      
        <content type="html"><![CDATA[<h1 id="一、Tinymce可视化编辑器"><a href="#一、Tinymce可视化编辑器" class="headerlink" title="一、Tinymce可视化编辑器"></a>一、Tinymce可视化编辑器</h1><p>参考</p><p><a href="https://panjiachen.gitee.io/vue-element-admin/#/components/tinymce">https://panjiachen.gitee.io/vue-element-admin/#/components/tinymce</a></p><p><a href="https://panjiachen.gitee.io/vue-element-admin/#/example/create">https://panjiachen.gitee.io/vue-element-admin/#/example/create</a></p><h1 id="二、组件初始化"><a href="#二、组件初始化" class="headerlink" title="二、组件初始化"></a>二、组件初始化</h1><p>Tinymce是一个传统javascript插件，默认不能用于Vue.js因此需要做一些特殊的整合步骤</p><h2 id="1、复制脚本库"><a href="#1、复制脚本库" class="headerlink" title="1、复制脚本库"></a>1、复制脚本库</h2><p>将脚本库复制到项目的static目录下（在vue-element-admin-master的static路径下）</p><h2 id="2、配置html变量"><a href="#2、配置html变量" class="headerlink" title="2、配置html变量"></a>2、配置html变量</h2><p>在 guli-admin/build/webpack.dev.conf.js 中添加配置</p><p>使在html页面中可是使用这里定义的BASE_URL变量</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token operator">...</span><span class="token operator">...</span><span class="token punctuation">,</span>        templateParameters<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                BASE_URL<span class="token punctuation">:</span> config<span class="token punctuation">.</span>dev<span class="token punctuation">.</span>assetsPublicPath <span class="token operator">+</span> config<span class="token punctuation">.</span>dev<span class="token punctuation">.</span>assetsSubDirectory                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><pre class="line-numbers language-js"><code class="language-js"> <span class="token comment" spellcheck="true">// these devServer options should be customized in /config/index.js</span>  devServer<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    clientLogLevel<span class="token punctuation">:</span> <span class="token string">'warning'</span><span class="token punctuation">,</span>    historyApiFallback<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    hot<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    compress<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    host<span class="token punctuation">:</span> HOST <span class="token operator">||</span> config<span class="token punctuation">.</span>dev<span class="token punctuation">.</span>host<span class="token punctuation">,</span>    port<span class="token punctuation">:</span> PORT <span class="token operator">||</span> config<span class="token punctuation">.</span>dev<span class="token punctuation">.</span>port<span class="token punctuation">,</span>    open<span class="token punctuation">:</span> config<span class="token punctuation">.</span>dev<span class="token punctuation">.</span>autoOpenBrowser<span class="token punctuation">,</span>    overlay<span class="token punctuation">:</span> config<span class="token punctuation">.</span>dev<span class="token punctuation">.</span>errorOverlay      <span class="token operator">?</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> warnings<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> errors<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    publicPath<span class="token punctuation">:</span> config<span class="token punctuation">.</span>dev<span class="token punctuation">.</span>assetsPublicPath<span class="token punctuation">,</span>    proxy<span class="token punctuation">:</span> config<span class="token punctuation">.</span>dev<span class="token punctuation">.</span>proxyTable<span class="token punctuation">,</span>    quiet<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// necessary for FriendlyErrorsPlugin</span>    watchOptions<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      poll<span class="token punctuation">:</span> config<span class="token punctuation">.</span>dev<span class="token punctuation">.</span>poll    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>DefinePlugin</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token string">'process.env'</span><span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'../config/dev.env'</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>HotModuleReplacementPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// https://github.com/ampedandwired/html-webpack-plugin</span>    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      filename<span class="token punctuation">:</span> <span class="token string">'index.html'</span><span class="token punctuation">,</span>      template<span class="token punctuation">:</span> <span class="token string">'index.html'</span><span class="token punctuation">,</span>      inject<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      favicon<span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">'favicon.ico'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      title<span class="token punctuation">:</span> <span class="token string">'vue-admin-template'</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">//此处加以上内容</span>      templateParameters<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        BASE_URL<span class="token punctuation">:</span> config<span class="token punctuation">.</span>dev<span class="token punctuation">.</span>assetsPublicPath <span class="token operator">+</span> config<span class="token punctuation">.</span>dev<span class="token punctuation">.</span>assetsSubDirectory      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、引入js脚本"><a href="#3、引入js脚本" class="headerlink" title="3、引入js脚本"></a>3、引入js脚本</h2><p>在guli-admin/index.html 中引入js脚本</p><pre class="line-numbers language-html"><code class="language-html">&lt;script src=&lt;%= BASE_URL %><span class="token script language-javascript"><span class="token operator">/</span>tinymce4<span class="token number">.7</span><span class="token punctuation">.</span><span class="token number">5</span><span class="token operator">/</span>tinymce<span class="token punctuation">.</span>min<span class="token punctuation">.</span>js<span class="token operator">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>&lt;script src=&lt;%= BASE_URL %><span class="token script language-javascript"><span class="token operator">/</span>tinymce4<span class="token number">.7</span><span class="token punctuation">.</span><span class="token number">5</span><span class="token operator">/</span>langs<span class="token operator">/</span>zh_CN<span class="token punctuation">.</span>js<span class="token operator">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>此处注意你加入js文件所处的路径，即static文件夹里面，所有不同的项目static所处的路径可能不一样。</p><p>比如这个项目在static文件夹在src目录下，而不是在根目录下。</p><p><a href="https://imgtu.com/i/fOk6ld"><img src="https://z3.ax1x.com/2021/08/20/fOk6ld.png" alt="fOk6ld.png"></a></p></blockquote><h1 id="三、组件引入"><a href="#三、组件引入" class="headerlink" title="三、组件引入"></a>三、组件引入</h1><p>为了让Tinymce能用于Vue.js项目，vue-element-admin-master对Tinymce进行了封装，下面我们将它引入到我们的课程信息页面</p><h2 id="1、复制组件"><a href="#1、复制组件" class="headerlink" title="1、复制组件"></a>1、复制组件</h2><p>src/components/Tinymce</p><h2 id="2、引入组件"><a href="#2、引入组件" class="headerlink" title="2、引入组件"></a>2、引入组件</h2><p>课程信息组件中引入 Tinymce</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">import</span> Tinymce <span class="token keyword">from</span> <span class="token string">'@/components/Tinymce'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  components<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> Tinymce <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token operator">...</span><span class="token operator">...</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、组件模板"><a href="#3、组件模板" class="headerlink" title="3、组件模板"></a>3、组件模板</h2><p>1</p><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 课程简介--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>课程简介<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tinymce</span> <span class="token attr-name">:height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>courseInfo.description<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、组件样式"><a href="#4、组件样式" class="headerlink" title="4、组件样式"></a>4、组件样式</h2><p>在info.vue文件的最后添加如下代码，调整上传图片按钮的高度</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css"><span class="token number">.</span>tinymce-container &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">29</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5、图片的base64编码"><a href="#5、图片的base64编码" class="headerlink" title="5、图片的base64编码"></a>5、图片的base64编码</h2><p>Tinymce中的图片上传功能直接存储的是图片的base64编码，因此无需图片服务器</p><h2 id="6、效果图"><a href="#6、效果图" class="headerlink" title="6、效果图"></a>6、效果图</h2><p><a href="https://imgtu.com/i/fOk4k8"><img src="https://z3.ax1x.com/2021/08/20/fOk4k8.png" alt="fOk4k8.png"></a></p><h2 id="7、富文本编辑器相关组件"><a href="#7、富文本编辑器相关组件" class="headerlink" title="7、富文本编辑器相关组件"></a>7、富文本编辑器相关组件</h2><p><a href="https://whatthfx11.oss-cn-beijing.aliyuncs.com/blog/%E5%AF%8C%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8%E7%BB%84%E4%BB%B6.rar">下载地址</a></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生命周期函数和Vue监听</title>
      <link href="/2021/08/18/sheng-ming-zhou-qi-han-shu-he-vue-jian-ting/"/>
      <url>/2021/08/18/sheng-ming-zhou-qi-han-shu-he-vue-jian-ting/</url>
      
        <content type="html"><![CDATA[<h3 id="生命周期函数和vue监听"><a href="#生命周期函数和vue监听" class="headerlink" title="生命周期函数和vue监听"></a>生命周期函数和vue监听</h3><pre class="line-numbers language-js"><code class="language-js"> <span class="token comment" spellcheck="true">// 页面渲染之前,多次跳转到同一个页面，created()方法只会执行一次，如果要多次执行就要vue的监听</span>  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//监听路由跳转,只要路由改变就调用</span>  watch<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">$route</span><span class="token punctuation">(</span>to<span class="token punctuation">,</span><span class="token keyword">from</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue 中的@、@/和./和../的区别</title>
      <link href="/2021/08/13/vue-zhong-de-he-de-qu-bie/"/>
      <url>/2021/08/13/vue-zhong-de-he-de-qu-bie/</url>
      
        <content type="html"><![CDATA[<h3 id="和-的区别"><a href="#和-的区别" class="headerlink" title="./和../的区别"></a>./和../的区别</h3><ol><li>. /：表示当前目录下；</li><li>../:   表示上一层目录下；</li></ol><h3 id="、-的区别"><a href="#、-的区别" class="headerlink" title="@、@/的区别"></a>@、@/的区别</h3><ol><li><p>@：表示vue语法中v-on的简写；绑定事件的专用格式。当事件触发的时候，函数才会来调用。</p><p>使用格式，在标签内部添加v-on:事件名=”事件”</p><p>注意：Vue实例中所有的函数必须放在methods对象中，否则利用v-on绑定的事件，系统会报找不到该事件的错误</p></li><li><p>@ /：表示 src目录下；</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数组对象的遍历</title>
      <link href="/2021/08/11/shu-zu-dui-xiang-de-bian-li/"/>
      <url>/2021/08/11/shu-zu-dui-xiang-de-bian-li/</url>
      
        <content type="html"><![CDATA[<h3 id="像数组对象里面插入属性-键-值"><a href="#像数组对象里面插入属性-键-值" class="headerlink" title="像数组对象里面插入属性(键+值)"></a>像数组对象里面插入属性(键+值)</h3><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//拼一个属性对象，forEach即遍历对每一个数组对象添加一个属性，键为styleId,值为style1</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>dotData<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        value<span class="token punctuation">[</span><span class="token string">"styleId"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"style1"</span><span class="token punctuation">;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="像数组对象删除属性-键-值"><a href="#像数组对象删除属性-键-值" class="headerlink" title="像数组对象删除属性(键+值)"></a>像数组对象删除属性(键+值)</h3><pre class="line-numbers language-js"><code class="language-js">    <span class="token comment" spellcheck="true">//先要遍历数组，得到每一个数组对象，再用delete操作删除</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>companyList<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">// 删除对象指定键值</span>                        <span class="token comment" spellcheck="true">// console.log(this.companyList[0].companyEmployee)</span>                        <span class="token keyword">delete</span> <span class="token keyword">this</span><span class="token punctuation">.</span>companyList<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>companyStage                        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> <span class="token keyword">this</span><span class="token punctuation">.</span>companyList<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>companyList<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                                <span class="token comment" spellcheck="true">// 没有完善</span>                                <span class="token keyword">this</span><span class="token punctuation">.</span>companyList<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>isInformation <span class="token operator">=</span> <span class="token boolean">true</span>                                <span class="token comment" spellcheck="true">// console.log(this.companyList[index].isInformation )</span>                                <span class="token comment" spellcheck="true">// console.log(this.isInformation)</span>                            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                                <span class="token keyword">this</span><span class="token punctuation">.</span>companyList<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>isInformation <span class="token operator">=</span> <span class="token boolean">false</span>                                <span class="token comment" spellcheck="true">// console.log(this.isInformation)</span>                            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="对数组对象里面的属性-值-进行赋值得操作"><a href="#对数组对象里面的属性-值-进行赋值得操作" class="headerlink" title="对数组对象里面的属性(值)进行赋值得操作"></a>对数组对象里面的属性(值)进行赋值得操作</h3><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//对属性的值进行了字符串转数字操作</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>dotData<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>dotData<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>lng <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dotData<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>lng<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>dotData<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>lat <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dotData<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>lat<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="对数组对象里面的属性名-键-进行赋值得操作"><a href="#对数组对象里面的属性名-键-进行赋值得操作" class="headerlink" title="对数组对象里面的属性名(键)进行赋值得操作"></a>对数组对象里面的属性名(键)进行赋值得操作</h3><pre class="line-numbers language-js"><code class="language-js">    <span class="token comment" spellcheck="true">//修改数组中的属性名,在此定义了一个函数</span>    <span class="token function">changeKeys</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> key<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          obj<span class="token punctuation">[</span>key<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">[</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        newArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> newArr<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//调用，[]里面是新的属性名</span>         <span class="token keyword">let</span> newdata <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">changeKeys</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dotData<span class="token punctuation">,</span> <span class="token punctuation">[</span>        <span class="token string">"companyEmployee"</span><span class="token punctuation">,</span>        <span class="token string">"companyName"</span><span class="token punctuation">,</span>        <span class="token string">"companyStage"</span><span class="token punctuation">,</span>        <span class="token string">"id"</span><span class="token punctuation">,</span>        <span class="token string">"lng"</span><span class="token punctuation">,</span>        <span class="token string">"lat"</span><span class="token punctuation">,</span>      <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="获取数组对象里面的属性和属性值"><a href="#获取数组对象里面的属性和属性值" class="headerlink" title="获取数组对象里面的属性和属性值"></a>获取数组对象里面的属性和属性值</h3><pre class="line-numbers language-js"><code class="language-js"> <span class="token comment" spellcheck="true">//ObjectValue是一个数组对象,以下操作是判断这个数组对象里面的 属性值是否存在为空的情况</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> ObjectValue<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>ObjectValue<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        flag <span class="token operator">=</span> <span class="token boolean">false</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人对promise的理解</title>
      <link href="/2021/07/30/ge-ren-dui-promise-de-li-jie/"/>
      <url>/2021/07/30/ge-ren-dui-promise-de-li-jie/</url>
      
        <content type="html"><![CDATA[<h3 id="个人对promise的理解"><a href="#个人对promise的理解" class="headerlink" title="个人对promise的理解"></a>个人对promise的理解</h3><blockquote><p>学promise之前，要理解回掉的概念。</p></blockquote><h4 id="回调"><a href="#回调" class="headerlink" title="回调"></a>回调</h4><p>回调函数就是作为参数被另外一个参数调用，但必须是外面的函数先执行，里面的函数再执行才能成回调。</p><p>回调分为同步回掉和异步回调。</p><h5 id="同步回调"><a href="#同步回调" class="headerlink" title="同步回调"></a>同步回调</h5><p>外面函数执行后，里面执行里面的回调函数。</p><h5 id="异步回调"><a href="#异步回调" class="headerlink" title="异步回调"></a>异步回调</h5><p>外面的函数执行需要一定时间，执行完之后才调用里面的回调函数。</p><h3 id="promise过程"><a href="#promise过程" class="headerlink" title="promise过程"></a>promise过程</h3><p>promise就是一个异步回调，每一个异步操作(请求)执行完之后都有两个状态，成功执行resolve，失败执行reject，此操作封装到promise对象里面，此时promise的值为捕获的成功的数据或者失败的数据。</p><p>然后通过then方法获取成功回掉的数据和失败回调的数据，然后得到了一个新的promise对象。</p><h4 id="为什么使用promise"><a href="#为什么使用promise" class="headerlink" title="为什么使用promise"></a>为什么使用promise</h4><p>1.解决了使用纯回调必须将异步操作和成功回调和失败的 回调函数一起调用，不然异步操作执行完就拿不到数据。</p><p>2.解决了回调地狱问题。</p><h3 id="解决回调地狱最优方法其实是async-await"><a href="#解决回调地狱最优方法其实是async-await" class="headerlink" title="解决回调地狱最优方法其实是async/await"></a>解决回调地狱最优方法其实是async/await</h3><p>async/await其实是是对promise的一个简化操作</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>     <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>doSomething()即异步操作</p><p>result返回的成功的数据</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue项目中请求方式</title>
      <link href="/2021/07/30/vue-xiang-mu-zhong-qing-qiu-fang-shi/"/>
      <url>/2021/07/30/vue-xiang-mu-zhong-qing-qiu-fang-shi/</url>
      
        <content type="html"><![CDATA[<h3 id="第一种，未封装"><a href="#第一种，未封装" class="headerlink" title="第一种，未封装"></a>第一种，未封装</h3><p>main.js文件</p><pre class="line-numbers language-js"><code class="language-js">axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>baseURL <span class="token operator">=</span> <span class="token string">'http://vueshop.pixiv.download/api/private/v1/'</span>axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>config <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>  config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>Authorization <span class="token operator">=</span> window<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'token'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//在最后必须return config</span>  <span class="token keyword">return</span> config<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//把这个包挂载到Vue的原型对象上,每一个组件都可以通过this，访问到$http从而发起axios请求，直接this.$http</span>Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$http <span class="token operator">=</span> axios<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>然后this.$http可以全局使用。</p></blockquote><p>.vue文件</p><pre class="line-numbers language-js"><code class="language-js">    <span class="token keyword">async</span> <span class="token function">getRightSList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>         <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>data<span class="token punctuation">:</span>res<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'rights/list'</span><span class="token punctuation">)</span>         <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>             <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'获取数据失败！'</span><span class="token punctuation">)</span>         <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>         <span class="token keyword">this</span><span class="token punctuation">.</span>rightsList <span class="token operator">=</span> res<span class="token punctuation">.</span>data         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>rightsList<span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="第二种，方法单独封装到api文件"><a href="#第二种，方法单独封装到api文件" class="headerlink" title="第二种，方法单独封装到api文件"></a>第二种，方法单独封装到api文件</h3><p>request.js文件</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span><span class="token comment" spellcheck="true">//配置请求的根路径</span>axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>withCredentials <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment" spellcheck="true">//cookie跨域</span><span class="token keyword">const</span> request <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    baseURL<span class="token punctuation">:</span> <span class="token string">'http://vueshop.pixiv.download/api/private/v1/'</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// request timeout</span>    timeout<span class="token punctuation">:</span> <span class="token number">5000</span>   <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>api.js文件</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">import</span> request <span class="token keyword">from</span> <span class="token string">'../utils/request'</span><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getToken</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> request<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">,</span>options<span class="token punctuation">)</span>  <span class="token keyword">return</span> result<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>简化</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">import</span> request <span class="token keyword">from</span> <span class="token string">'../utils/request'</span><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getToken</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token keyword">await</span> request<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">,</span>options<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>.vue文件</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> getToken <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">from</span> <span class="token string">"../api/login"</span><span class="token punctuation">;</span><span class="token function">getToken</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>loginForm<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="第三种，方法封装到store里面"><a href="#第三种，方法封装到store里面" class="headerlink" title="第三种，方法封装到store里面"></a>第三种，方法封装到store里面</h3>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见的一个跨域问题</title>
      <link href="/2021/07/30/chang-jian-de-yi-ge-kua-yu-wen-ti/"/>
      <url>/2021/07/30/chang-jian-de-yi-ge-kua-yu-wen-ti/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://imgtu.com/i/WLwW1f"><img src="https://z3.ax1x.com/2021/07/30/WLwW1f.png" alt="WLwW1f.png"></a></p><blockquote><p>亲测有效</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript高级原型链</title>
      <link href="/2021/07/29/javascript-gao-ji-yuan-xing-lian/"/>
      <url>/2021/07/29/javascript-gao-ji-yuan-xing-lian/</url>
      
        <content type="html"><![CDATA[<h2 id="构造函数-ES5-和原型"><a href="#构造函数-ES5-和原型" class="headerlink" title="构造函数(ES5)和原型"></a>构造函数(ES5)和原型</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>在典型的ＯＯＰ的语言中（如Java），都存在类的概念，类就是对象的模板，对象就是类的实例，但在ES6之前，JS中并密钥引入类的概念。</p><p>ES6，全称ECMAScript6.0，2015.0.6发版。但是目前浏览器JavaScript是ES5版本，大多数高版本的浏览器也支持ES6，不过只实现了ES6的部分特性和功能。</p><p>在ES6之前，对象不是基于类创建的，而是用一种称为<strong>构造函数</strong>的特殊函数来定义对象和他们的特征。</p><p>创建对象可以通过以下三种方式</p><ol><li><p>对象自变量</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> obj1 <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>new Object()</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> obj2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>自定义构造函数</p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//利用构造函数创建类</span><span class="token keyword">function</span> <span class="token function">Star</span><span class="token punctuation">(</span>uname<span class="token punctuation">,</span>age<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>uname <span class="token operator">=</span> uname<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>sing <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'I can dance'</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//创建对象</span><span class="token keyword">var</span> dlz <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Star</span><span class="token punctuation">(</span><span class="token string">'带篮子'</span>，<span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> zxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">star</span><span class="token punctuation">(</span><span class="token string">'张学友'</span>，<span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dlz<span class="token punctuation">)</span><span class="token punctuation">;</span>dlz<span class="token punctuation">.</span><span class="token function">sing</span><span class="token punctuation">(</span><span class="token punctuation">)</span>zxy<span class="token punctuation">.</span><span class="token function">sing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><p>构造函数是一中特殊的函数，主要用来初始化对象，即为对象成员变量赋值始值，它总与new一起使用。我们可以把对象中的一些公共的属性和方法抽取出来，然后封装到这个函数里面。</p><h4 id="new在执行时会做四件事情"><a href="#new在执行时会做四件事情" class="headerlink" title="new在执行时会做四件事情"></a>new在执行时会做四件事情</h4><ol><li>在内存中创建一个新的空对象</li><li>让this指向这个新的对象</li><li><strong>执行构造函数里面的代码</strong>（记住只是定义，在new之前没有调用），给这个新对象添加属性和方法</li><li>返回这个新对象(所以构造函数里面不需要return)</li></ol><h4 id="实例成员和静态成员"><a href="#实例成员和静态成员" class="headerlink" title="实例成员和静态成员"></a>实例成员和静态成员</h4><h5 id="实例成员"><a href="#实例成员" class="headerlink" title="实例成员"></a>实例成员</h5><blockquote><p>实例成员就说构造函数内部通过this添加的成员，uname，age，sing就是实例成员</p><p>实例对象只能通过实例化的对象访问</p></blockquote><pre class="line-numbers language-js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dlz<span class="token punctuation">.</span>uname<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//对</span>dlz<span class="token punctuation">.</span><span class="token function">sing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token comment" spellcheck="true">//对</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Star<span class="token punctuation">.</span>uname<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//undefined，不可以通过构造函数来访问实例对象</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h5 id="静态成员"><a href="#静态成员" class="headerlink" title="静态成员"></a>静态成员</h5><blockquote><p>在构造函数本身上添加的成员 </p></blockquote><pre class="line-numbers language-js"><code class="language-js">Star<span class="token punctuation">.</span>sex <span class="token operator">=</span> <span class="token string">'男'</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Star<span class="token punctuation">.</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dlz<span class="token punctuation">.</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//undefined,不能可以通过实例对象访问静态成员</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="构造函数存在的问题"><a href="#构造函数存在的问题" class="headerlink" title="构造函数存在的问题"></a>构造函数存在的问题</h4><blockquote><p>构造函数方法很好用，但是存在浪费内存的问题。</p><p>每创建一个对象，里面的函数都要开辟新的内存空间。</p></blockquote><pre class="line-numbers language-js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dlz<span class="token punctuation">.</span>sing <span class="token operator">===</span> zxy<span class="token punctuation">.</span>sing<span class="token punctuation">)</span>     <span class="token comment" spellcheck="true">//false，false比较的是内存地址，虽然是同一个函数，但用不同地址存。</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><p><a href="https://imgtu.com/i/WTKB38"><img src="https://z3.ax1x.com/2021/07/28/WTKB38.png" alt="WTKB38.png"></a></p><h3 id="构造函数原型prototype"><a href="#构造函数原型prototype" class="headerlink" title="构造函数原型prototype"></a>构造函数原型prototype</h3><blockquote><p>prototype是一个对象，prototype是原型的意思，故称之为原型对象。</p></blockquote><pre class="line-numbers language-js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>Star<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://imgtu.com/i/WTlIv8"><img src="https://z3.ax1x.com/2021/07/28/WTlIv8.png" alt="WTlIv8.png"></a></p><p>构造函数通过原型分配的函数是所有对象所<strong>共享的</strong>。</p><p>JavaScript规定，<strong>每一个构造函数都有一个prototype属性</strong>，指向另一个对象。注意这个prototype就是一个对象，这个对象的所有属性和方法，都会呗构造函数所拥有。</p><p><strong>我们可以把那些不变的方法，直接定义在prototype对象上，这样所有对象的实例可以共享这些方法。</strong></p><pre class="line-numbers language-js"><code class="language-js">  Star<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>sing<span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'i can dance'</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  dlz<span class="token punctuation">.</span><span class="token function">sing</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                           <span class="token comment" spellcheck="true">// i can dance</span>  zxy<span class="token punctuation">.</span><span class="token function">sing</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                           <span class="token comment" spellcheck="true">// i can dance</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dlz<span class="token punctuation">.</span>sing <span class="token operator">===</span> zxy<span class="token punctuation">.</span>sing<span class="token punctuation">)</span>     <span class="token comment" spellcheck="true">//true，实现了共享</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一般情况下，我们的公共属性定义到构造函数里面，公关的方法我们放到原型对象上。</p><h4 id="对象原型-proto"><a href="#对象原型-proto" class="headerlink" title="对象原型(proto)"></a>对象原型(<strong>proto</strong>)</h4><blockquote><p>对象都会有一个属性_proto_指向构造函数的prototype原型对象，之所以我们对象可以使用构造函数prototype原型对象的属性和方法，就是因为对象有_proto_原型的存在</p></blockquote><pre class="line-numbers language-js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dlz<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//对象身上系统自己添加一个_proto_指向我们构造函数的原型对象</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dlz<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> Star<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//true</span><span class="token comment" spellcheck="true">//方法的查找规则：首先先看dlz对象上是否有sing方法，如果有就执行这个对象上的sing</span><span class="token comment" spellcheck="true">//如果没有sing这个方法，因为有_proto_的存在，就取构造函数原型对象prototype身上取查找sing这个方法。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="constructor构造函数"><a href="#constructor构造函数" class="headerlink" title="constructor构造函数"></a>constructor构造函数</h5><p>对象原型(<em>proto</em>)和构造函数原型对象里面都有一个属性contructor属性，constructor我们称为构造函数，因为它指回到构造函数本身。</p><p>constructor主要记录该对象引用于哪个构造函数，它可以让原型对象重新指向原来的构造函数。</p><p>很多情况下，我们需要手动的利用constructor这个属性指回原来的构造函数</p><pre class="line-numbers language-js"><code class="language-js">Star<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    constructor<span class="token punctuation">:</span> Star<span class="token punctuation">,</span>    sing<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'i can sing'</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    movie<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'i can act'</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="构造函数、实例、原型对象三者之间的关系"><a href="#构造函数、实例、原型对象三者之间的关系" class="headerlink" title="构造函数、实例、原型对象三者之间的关系"></a>构造函数、实例、原型对象三者之间的关系</h3><p><a href="https://imgtu.com/i/WHeL6g"><img src="https://z3.ax1x.com/2021/07/29/WHeL6g.png" alt="WHeL6g.png"></a></p><h3 id="原型链"><a href="#原型链" class="headerlink" title="原型链"></a>原型链</h3><p><a href="https://imgtu.com/i/WH8MC9"><img src="https://z3.ax1x.com/2021/07/29/WH8MC9.png" alt="WH8MC9.png"></a></p><pre class="line-numbers language-js"><code class="language-js"><span class="token number">1</span><span class="token punctuation">.</span>是个对象就有__proto__，为对象原型，对应类的原型对象，即prototype。<span class="token number">2</span><span class="token punctuation">.</span>对象是根据类创建的，类里面是prototype，对象里面是__prototype__，二者相等。<span class="token number">3</span><span class="token punctuation">.</span>constructor是原型对象里面的一个属性，录该对象引用于哪个构造函数。<span class="token number">4</span><span class="token punctuation">.</span>prototype是对象，__proto__也是对象。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>学了原型链，更方便我们查找对象的原型对象所对应的构造函数，一层递一层。</p><h3 id="JavaScript成员查找机制"><a href="#JavaScript成员查找机制" class="headerlink" title="JavaScript成员查找机制"></a>JavaScript成员查找机制</h3><p><a href="https://imgtu.com/i/WH03Jf"><img src="https://z3.ax1x.com/2021/07/29/WH03Jf.png" alt="WH03Jf.png"></a></p><blockquote><p>1.只要原型链上有一个原型对象有实例对象想使用的方法或者属性，实例对象都能调用成功。</p><p>2.实例对象自身没有定义那个方法或者属性，它会就近使用。</p></blockquote><h3 id="原型对象中this指向"><a href="#原型对象中this指向" class="headerlink" title="原型对象中this指向"></a>原型对象中this指向</h3><blockquote><p>1.只有你调用了这个函数，才能知道的这个this指向谁。</p><p>2.一般情况下，this指的是函数的调用者。</p></blockquote><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> that<span class="token punctuation">;</span>Star<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>sing <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'i can sing'</span><span class="token punctuation">)</span>    that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">var</span> ldh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Star</span><span class="token punctuation">(</span><span class="token string">'刘德华'</span>，<span class="token number">18</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//1.在构造函数中，里面this指向的是实例对象ldh</span>ldh<span class="token punctuation">.</span><span class="token function">sing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>that <span class="token operator">=</span> ldh<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//2.原型对象函数里面的this指向实例对象ldh</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="原型对象的应用"><a href="#原型对象的应用" class="headerlink" title="原型对象的应用"></a>原型对象的应用</h3><h4 id="扩展内置对象方法"><a href="#扩展内置对象方法" class="headerlink" title="扩展内置对象方法"></a>扩展内置对象方法</h4><pre class="line-numbers language-js"><code class="language-js">   <span class="token comment" spellcheck="true">//array是一个内置对象，里面有一些固定的方法。</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span>        Array<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>sum  <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//this指向调用者</span>                sum <span class="token operator">+</span><span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> sum<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> arr1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//arr1调用了sum函数，故this指向arr1</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr1<span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//此处相当于实例对象</span>        <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 可以检验arr是否为Array的实例对象</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> Array<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//true</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//查看原型对象是否存在这个新加的sum函数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://imgtu.com/i/WHOpXF"><img src="https://z3.ax1x.com/2021/07/29/WHOpXF.png" alt="WHOpXF.png"></a></p><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><p>ES6之前并没有给我们提供extend继承。我们可以通过构造函数+原型对象模拟实现继承，被称为组合继承。</p><h4 id="call"><a href="#call" class="headerlink" title="call()"></a>call()</h4><p>调用这个函数，并且修改函数运行时的this指向。</p><pre class="line-numbers language-js"><code class="language-js">  <span class="token comment" spellcheck="true">//call方法</span>        <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'我想喝手磨咖啡'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//查看函数内部this的指向</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token operator">+</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// this.fn()//this是调用者，这个是window，可以省略this</span>        <span class="token comment" spellcheck="true">// fn()</span>        <span class="token comment" spellcheck="true">// fn.call()</span>        <span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            name<span class="token punctuation">:</span> <span class="token string">'andy'</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>        fn<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="借用构造函数继承父类型属性"><a href="#借用构造函数继承父类型属性" class="headerlink" title="借用构造函数继承父类型属性"></a>借用构造函数继承父类型属性</h4><blockquote><p>核心原理：通过call()把父类型的this指向子类型的this，这样就可以实现子类型继承父类型的属性。</p></blockquote><pre class="line-numbers language-js"><code class="language-js">  <span class="token comment" spellcheck="true">//借用父构造函数继承属性</span>        <span class="token comment" spellcheck="true">//1.父构造函数</span>        <span class="token keyword">function</span> Father <span class="token punctuation">(</span>uname<span class="token punctuation">,</span>age<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// this指向父构造函数的对象实例</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>uname <span class="token operator">=</span> uname<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span>age<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.子构造函数</span>        <span class="token keyword">function</span> <span class="token function">Son</span><span class="token punctuation">(</span>uname<span class="token punctuation">,</span>age<span class="token punctuation">,</span>score<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// this指向子构造函数的对象实例,把父函数的this改为子函数的this</span>            Father<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>uname<span class="token punctuation">,</span>age<span class="token punctuation">)</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>score <span class="token operator">=</span> score        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> son <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Son</span><span class="token punctuation">(</span><span class="token string">'刘德华'</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>son<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="借用原型对象继承方法"><a href="#借用原型对象继承方法" class="headerlink" title="借用原型对象继承方法"></a>借用原型对象继承方法</h4><pre class="line-numbers language-js"><code class="language-js">   <span class="token comment" spellcheck="true">//借用父构造函数继承属性</span>        <span class="token comment" spellcheck="true">//1.父构造函数</span>        <span class="token keyword">function</span> Father <span class="token punctuation">(</span>uname<span class="token punctuation">,</span>age<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// this指向父构造函数的对象实例</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>uname <span class="token operator">=</span> uname<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span>age<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        Father<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>money <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.子构造函数</span>        <span class="token keyword">function</span> <span class="token function">Son</span><span class="token punctuation">(</span>uname<span class="token punctuation">,</span>age<span class="token punctuation">,</span>score<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// this指向子构造函数的对象实例,把父函数的this改为子函数的this</span>            Father<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>uname<span class="token punctuation">,</span>age<span class="token punctuation">)</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>score <span class="token operator">=</span> score        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// son.prototype= Father.prototype //有问题，如果修改了子原型对象，父原型对象也会一起变化</span>        Son<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Father</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//如果利用对象形式修改了原型对象，别忘了利用constructor指回原来的原型对象</span>        Son<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> Son<span class="token punctuation">;</span>        Son<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>exam <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'孩子要考试'</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> son <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Son</span><span class="token punctuation">(</span><span class="token string">'刘德华'</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>son<span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Son<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ES5新增方法概述"><a href="#ES5新增方法概述" class="headerlink" title="ES5新增方法概述"></a>ES5新增方法概述</h3><p>ES5中给我们新增了一些方法，可以很方便的操作数组或者字符串，这些方法包括：</p><ul><li>数组方法</li><li>字符串方法</li><li>对象方法</li></ul><h4 id="数组方法"><a href="#数组方法" class="headerlink" title="数组方法"></a>数组方法</h4><p>迭代（遍历）方法：forEach(),map(),filter(),some(),every();</p><h5 id="forEach-里面有一个回调函数"><a href="#forEach-里面有一个回调函数" class="headerlink" title="forEach(里面有一个回调函数)"></a>forEach(里面有一个回调函数)</h5><p><a href="https://imgtu.com/i/WbfZvR"><img src="https://z3.ax1x.com/2021/07/29/WbfZvR.png" alt="WbfZvR.png"></a></p><pre class="line-numbers language-js"><code class="language-js">        <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>        <span class="token keyword">var</span> sum <span class="token operator">=</span> <span class="token number">0</span>        arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'每个数组元素'</span><span class="token operator">+</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'每个元素的索引号'</span><span class="token operator">+</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'数组本身'</span><span class="token operator">+</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>            sum <span class="token operator">+</span><span class="token operator">=</span> value        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h5><p><a href="https://imgtu.com/i/WbfWZV"><img src="https://z3.ax1x.com/2021/07/29/WbfWZV.png" alt="WbfWZV.png"></a></p><pre class="line-numbers language-js"><code class="language-js">     <span class="token comment" spellcheck="true">//filter 筛选数组</span>        <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>        <span class="token keyword">var</span> newArr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span>index<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// return value >=20;</span>            <span class="token keyword">return</span> value<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newArr<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="some"><a href="#some" class="headerlink" title="some"></a>some</h5><p><a href="https://imgtu.com/i/Wb4Vn1"><img src="https://z3.ax1x.com/2021/07/29/Wb4Vn1.png" alt="Wb4Vn1.png"></a></p><pre class="line-numbers language-js"><code class="language-js">  <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>        <span class="token keyword">var</span> flag <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> value <span class="token operator">>=</span> <span class="token number">20</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//true，返回布尔值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>只要查到一个满足条件，即跳出循环。</p></blockquote><h4 id="字符串方法"><a href="#字符串方法" class="headerlink" title="字符串方法"></a>字符串方法</h4><p>trim()方法会从一个字符串的两端删除空白字符。</p><pre class="line-numbers language-js"><code class="language-js">str<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>trim()方法并不影响字符串本身，它返回的是一个新的字符串，只去掉两侧的。</p><pre class="line-numbers language-js"><code class="language-js">  <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">'   andy    '</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> str1 <span class="token operator">=</span>str<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="对象方法"><a href="#对象方法" class="headerlink" title="对象方法"></a>对象方法</h4><h5 id="keys"><a href="#keys" class="headerlink" title="keys"></a>keys</h5><p><a href="https://imgtu.com/i/Wb7Awn"><img src="https://z3.ax1x.com/2021/07/29/Wb7Awn.png" alt="Wb7Awn.png"></a></p><pre class="line-numbers language-JS"><code class="language-JS">  var obj = &#123;            id: 1,            pname: 'xiaomi',            price: 19999,            num:2000        &#125;        var arr = Object.keys(obj)        console.log(arr);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="defineProperty"><a href="#defineProperty" class="headerlink" title="defineProperty"></a>defineProperty</h5><p><a href="https://imgtu.com/i/WbbprQ"><img src="https://z3.ax1x.com/2021/07/29/WbbprQ.png" alt="WbbprQ.png"></a></p><pre class="line-numbers language-js"><code class="language-js">    <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            id<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>            pname<span class="token punctuation">:</span> <span class="token string">'xiaomi'</span><span class="token punctuation">,</span>            price<span class="token punctuation">:</span> <span class="token number">19999</span><span class="token punctuation">,</span>            num<span class="token punctuation">:</span><span class="token number">2000</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// var arr = Object.keys(obj)</span>        <span class="token comment" spellcheck="true">// console.log(arr);</span>        <span class="token comment" spellcheck="true">// 新增或者修改以前</span>        obj<span class="token punctuation">.</span>num <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>        obj<span class="token punctuation">.</span>price <span class="token operator">=</span><span class="token number">99</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//es5新增</span>        Object<span class="token punctuation">.</span><span class="token function">defineProperties</span><span class="token punctuation">(</span>Obj<span class="token punctuation">,</span><span class="token string">'num'</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            value<span class="token punctuation">:</span><span class="token number">1000</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>        Object<span class="token punctuation">.</span><span class="token function">defineProperties</span><span class="token punctuation">(</span>Obj<span class="token punctuation">,</span><span class="token string">'price'</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            value<span class="token punctuation">:</span><span class="token number">9.9</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flex布局</title>
      <link href="/2021/07/28/flex/"/>
      <url>/2021/07/28/flex/</url>
      
        <content type="html"><![CDATA[<h2 id="flex布局"><a href="#flex布局" class="headerlink" title="flex布局"></a>flex布局</h2><h3 id="布局原理"><a href="#布局原理" class="headerlink" title="布局原理"></a>布局原理</h3><p>flex是flexible box的缩写，意为”弹性布局“，用来为盒状模型提供的灵活性，任何一个容器都可以指定为flex布局。</p><ul><li>当我们为父盒子设为felx布局以后，子元素的float，clear和vertical-align属性将失效</li><li>伸缩布局=弹性布局=伸缩盒布局=弹性盒布=flex布局</li></ul><blockquote><p>margin: atuo可以实现水平居中，flex布局不仅可实现水平居中且能垂直居中。</p></blockquote><p>采用felx布局的元素，称为felx容器，简称容器。它的所用子元素自动成为容器成员，称为felx项目，简称“项目”。</p><ul><li>体验中div就是flex父容器</li><li>体验中span就是子容器flex项目</li><li>子容器可以横向排列也可以纵向排列</li></ul><p>总结flex布局原理:</p><p>就是通过给父盒子添加flex属性，来控制子盒子的位置和排列方式。</p><h3 id="常用父项属性"><a href="#常用父项属性" class="headerlink" title="常用父项属性"></a>常用父项属性</h3><p>以下由6个属性对父元素设置的</p><ul><li>flex-direction：设置主轴的方向</li></ul><p><a href="https://imgtu.com/i/WhgRX9"><img src="https://z3.ax1x.com/2021/07/27/WhgRX9.png" alt="WhgRX9.png"></a></p><ul><li>justify-content： 设置主轴上的子元素排列方式</li></ul><p><a href="https://imgtu.com/i/WhfIDH"><img src="https://z3.ax1x.com/2021/07/27/WhfIDH.png" alt="WhfIDH.png"></a></p><ul><li>flex-wrap：设置子元素是否换行</li></ul><p><a href="https://imgtu.com/i/WhoKOO"><img src="https://z3.ax1x.com/2021/07/27/WhoKOO.png" alt="WhoKOO.png"></a></p><ul><li>align-content： 设置侧轴上的子元素 的排列方式(多行)</li></ul><p><a href="https://imgtu.com/i/WhLGtg"><img src="https://z3.ax1x.com/2021/07/27/WhLGtg.png" alt="WhLGtg.png"></a></p><ul><li>aligin-items： 设置侧轴上的子元素排列方式(单行)</li></ul><p><a href="https://imgtu.com/i/WhTcUH"><img src="https://z3.ax1x.com/2021/07/27/WhTcUH.png" alt="WhTcUH.png"></a></p><ul><li>flex-flow：复合属性，相当于同时设置了felx-direction和flex-wrap</li></ul><p><a href="https://imgtu.com/i/WhXyl9"><img src="https://z3.ax1x.com/2021/07/27/WhXyl9.png" alt="WhXyl9.png"></a></p><blockquote><p>align-content和align-items区别</p><p><a href="https://imgtu.com/i/WhO3K1"><img src="https://z3.ax1x.com/2021/07/27/WhO3K1.png" alt="WhO3K1.png"></a></p></blockquote><h3 id="flex布局子项常见属性"><a href="#flex布局子项常见属性" class="headerlink" title="flex布局子项常见属性"></a>flex布局子项常见属性</h3><ul><li>flex子项目占的分数</li><li>align-self控制子项自己再侧轴的排列方式</li><li>order属性定义子项的排列顺序I(前后顺序)</li></ul><h4 id="flex属性"><a href="#flex属性" class="headerlink" title="flex属性"></a>flex属性</h4><p><a href="https://imgtu.com/i/W4ZoaF"><img src="https://z3.ax1x.com/2021/07/27/W4ZoaF.png" alt="W4ZoaF.png"></a></p><h4 id="align-self"><a href="#align-self" class="headerlink" title="align-self"></a>align-self</h4><p><a href="https://imgtu.com/i/W4m9mV"><img src="https://z3.ax1x.com/2021/07/27/W4m9mV.png" alt="W4m9mV.png"></a></p><h4 id="order"><a href="#order" class="headerlink" title="order"></a>order</h4><p><img src="https://z3.ax1x.com/2021/07/27/W4mVp9.png" alt="W4mVp9.png"></p>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>promise的理解和使用</title>
      <link href="/2021/07/09/promise-de-li-jie-he-shi-yong/"/>
      <url>/2021/07/09/promise-de-li-jie-he-shi-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="promise是什么？"><a href="#promise是什么？" class="headerlink" title="promise是什么？"></a>promise是什么？</h2><h3 id="理解"><a href="#理解" class="headerlink" title="理解"></a>理解</h3><p>1.抽象表达</p><p>​    Promise是JS中进行异步编程的新的解决方案(旧的是谁？)</p><blockquote><p>旧的是纯回掉形式</p></blockquote><p>2.具体表达</p><ol><li>从语法上来说：Promise是一个构造函数。</li><li>从功能上来说，promise对象用来封装一个异步操作并可以获得其结果。</li></ol><h3 id="promise的状态改变"><a href="#promise的状态改变" class="headerlink" title="promise的状态改变"></a>promise的状态改变</h3><ol><li>pending(未确定)变成resolved(成功)</li><li>pending变为rejected(失败)</li></ol><p>最开始new的时候，状态为pending，只有两种，且一个promise对象只能改变一次，无论变为成功还是失败，都会有一个结果数据，成功的结果数据一般称为value，失败的结果数据一般称为reason。</p><p><a href="https://imgtu.com/i/RLTUXV"><img src="https://z3.ax1x.com/2021/07/08/RLTUXV.png" alt="RLTUXV.png"></a></p><h3 id="promise的基本使用"><a href="#promise的基本使用" class="headerlink" title="promise的基本使用"></a>promise的基本使用</h3><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 1.创建一个新的promise对象</span><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//执行器函数  同步回调</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"执行执行器 excutor"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//2.执行异步操作任务</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span>        <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> time <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//如果当前时间为偶数就代表成功，否则代表失败</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>time <span class="token operator">%</span><span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"成功的数据,time="</span><span class="token operator">+</span> time<span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//3.2 如果失败了，调用reject(reason)</span>            <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">"成功的数据,time="</span><span class="token operator">+</span> time<span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//3.1.如果成功了，调用resolve(value)</span>    <span class="token comment" spellcheck="true">//3.1.如果失败了，调用reject(reason</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span>logp<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>    value <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//接收得到成功的value的数据    onResolved 当为resolved状态执行</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"成功的回调"</span><span class="token punctuation">,</span>value<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    reason <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//接收得到失败的value数据     onRejected 当为onRejected状态执行</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"失败的回调"</span><span class="token punctuation">,</span>reason<span class="token punctuation">)</span>     <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="为什么要用promise？"><a href="#为什么要用promise？" class="headerlink" title="为什么要用promise？"></a>为什么要用promise？</h3><p>相比于纯回调函数：</p><p>1.promise相比于纯回调函数，指定回调函数比较灵活。</p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 使用纯回调函数的方式</span><span class="token comment" spellcheck="true">// 成功的回调函数</span><span class="token keyword">function</span> <span class="token function">successCallback</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"声音文件创建成功"</span><span class="token operator">+</span>result<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 失败的回调函数</span><span class="token keyword">function</span> <span class="token function">failureCallback</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"声音文件创建失败"</span><span class="token operator">+</span>error<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 使用纯回调函数</span><span class="token comment" spellcheck="true">// 先指定回调函数(即在参数中携带两个回调函数)，即先指定了回调函数，才执行的异步任务，在执行异步操作，否则</span><span class="token comment" spellcheck="true">// 创建音频文件肯定得花时间，audioSettings是创建文件的配置文件</span><span class="token function">createAudioFileAsync</span><span class="token punctuation">(</span>audioSettings<span class="token punctuation">,</span>successCallback<span class="token punctuation">,</span>failureCallback<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 不能先执行异步操作再指定回调函数，它完都完成了，你指定回调函数已经得不到数据了</span><span class="token comment" spellcheck="true">// 使用promise的方式</span><span class="token comment" spellcheck="true">//再执行异步操作</span>    <span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token function">createAudioFileAsync</span><span class="token punctuation">(</span>audioSettings<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">/*创建音频文件，返回一个promise，异步操作在createAudioFileAsync里面执行。    这个异步操作就是上面写的promise的基本使用*/</span>    <span class="token comment" spellcheck="true">// 上面一行执行完了，异步操作就完了，得到promise对象的时候，异步对象已经启动了。</span>    <span class="token comment" spellcheck="true">// 再指定回调操作</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>successCallback<span class="token punctuation">,</span>failureCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*由上面的比较得知:1.纯回调的方式，回调函数必须在异步操作前面指定2.promise方式，则可以在异步操作完后指定异步操作，然后得到返回的成功或者失败的数据比较知道:promise指定回调函数较为灵活。*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.纯回调可能存在回调地狱。</p><p>promise支持链式调用，可以解决回调地狱问题。</p><p>回调函数嵌套调用时候，上一层函数的结果作为下一层函数参数的条件。</p><p>回调地狱实例：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">doSomethingElse</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>newResult<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">doThirdThing</span><span class="token punctuation">(</span>newResult<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>finalResult<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Got the final result:"</span> <span class="token operator">+</span> finalResult<span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> failureCallback<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> failureCallback<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> failureCallback<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用promise的链式调用解决回调地狱：非嵌套关系，只写了成功的回调，没有写失败的回调处理，但失败的回调都会找到最后一个catch(failureCallback)</p><pre class="line-numbers language-js"><code class="language-js"><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">doSomethingElse</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>newResult<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">doThirdThing</span><span class="token punctuation">(</span>newResult<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>finalResult<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Got the final result"</span><span class="token punctuation">,</span> <span class="token operator">+</span>finalResult<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>failureCallback<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>doSomething()就是一个promise</p><p>每一个then前面都是一个promise</p><p>newResult=doSomethingElse(result)以此类推</p></blockquote><p>回调地狱的终极解决方式，promise并非解决回调地狱的终极解决方案，因为他还有回调函数，但他没有嵌套。</p><p>async/await:回调地狱的终极解决方案</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//result是doSomething这个promise返回的成功的结果，下面以此类推</span>        <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">const</span> newResult <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">doSomethingElse</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>        <span class="token keyword">const</span> finalResult <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">doThirdThing</span><span class="token punctuation">(</span>newResult<span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Got the final result"</span> <span class="token operator">+</span> finalResult<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">error</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">failureCallback</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue项目部署</title>
      <link href="/2021/07/09/vue-xiang-mu-bu-shu/"/>
      <url>/2021/07/09/vue-xiang-mu-bu-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="Vue项目部署"><a href="#Vue项目部署" class="headerlink" title="Vue项目部署"></a>Vue项目部署</h2><h3 id="1-创建vue项目"><a href="#1-创建vue项目" class="headerlink" title="1.创建vue项目"></a>1.创建vue项目</h3><pre class="line-numbers language-bash"><code class="language-bash">yarn build / <span class="token function">npm</span> run build<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此时工程根目录下多出一个<code>dist</code>文件夹</p><blockquote><p>如果将该dist目录整个传到服务器上，部署成静态资源站点就能直接访问到该项目。</p></blockquote><p>接下来就来构建一个这样的静态资源站点。</p><h3 id="2-构建vue应用镜像"><a href="#2-构建vue应用镜像" class="headerlink" title="2.构建vue应用镜像"></a>2.构建vue应用镜像</h3><blockquote><p>nginx 是一个高性能的HTTP和反向代理服务器，此处我们选用 nginx 镜像作为基础来构建我们的vue应用镜像。</p></blockquote><h3 id="3-获取-nginx-镜像"><a href="#3-获取-nginx-镜像" class="headerlink" title="3. 获取 nginx 镜像"></a>3. 获取 nginx 镜像</h3><pre class="line-numbers language-bash"><code class="language-bash">docker pull nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><ul><li><code>docker</code>镜像（Image）一个特殊的文件系统。Docker镜像是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。 镜像不包含任何动态数据，其内容在构建之后也不会被改变。</li><li>docker 镜像相关操作有: 搜索镜像<code>docker search [REPOSITORY[:TAG]]</code>、拉取镜像<code>docker pull [REPOSITORY[:TAG]]</code> 、查看镜像列表<code>docker image ls</code>、删除镜像：<code>docker image rm [REPOSITORY[:TAG]] / docker rmi [REPOSITORY[:TAG]]</code> 等等。</li><li>docker 镜像名称由REPOSITORY和TAG组成 <code>[REPOSITORY[:TAG]]</code>，TAG默认为latest</li></ul></blockquote><h3 id="4-创建-nginx-config配置文件"><a href="#4-创建-nginx-config配置文件" class="headerlink" title="4.创建 nginx config配置文件"></a>4.创建 nginx config配置文件</h3><p>先把dist文件上传到centos本地目录，此处做演示。上传到centos本地机的root文件夹里面</p><p>在项目根目录下创建<code>nginx</code>文件夹，该文件夹下新建文件<code>default.conf</code></p><pre class="line-numbers language-bash"><code class="language-bash">server <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    listen       80<span class="token punctuation">;</span>    server_name  localhost<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">#charset koi8-r;</span>    access_log  /var/log/nginx/host.access.log  main<span class="token punctuation">;</span>    error_log  /var/log/nginx/error.log  error<span class="token punctuation">;</span>    location / <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>        root   /usr/share/nginx/html<span class="token punctuation">;</span>        index  index.html index.htm<span class="token punctuation">;</span>    <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>    <span class="token comment" spellcheck="true">#error_page  404              /404.html;</span>    <span class="token comment" spellcheck="true"># redirect server error pages to the static page /50x.html</span>    <span class="token comment" spellcheck="true">#</span>    error_page   500 502 503 504  /50x.html<span class="token punctuation">;</span>    location <span class="token operator">=</span> /50x.html <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>        root   /usr/share/nginx/html<span class="token punctuation">;</span>    <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>该配置文件定义了首页的指向为 <code>/usr/share/nginx/html/index.html</code>, 所以我们可以一会把构建出来的index.html文件和相关的静态资源放到<code>/usr/share/nginx/html</code>目录下。</p><p><a href="https://imgtu.com/i/RjcWOe"><img src="https://z3.ax1x.com/2021/07/09/RjcWOe.png" alt="RjcWOe.png"></a></p><p><a href="https://imgtu.com/i/Rjgnt1"><img src="https://z3.ax1x.com/2021/07/09/Rjgnt1.png" alt="Rjgnt1.png"></a></p><h3 id="5-创建-Dockerfile-文件-在项目根目录-、"><a href="#5-创建-Dockerfile-文件-在项目根目录-、" class="headerlink" title="5.创建 Dockerfile 文件(在项目根目录)、"></a>5.创建 Dockerfile 文件(在项目根目录)、</h3><p>写入以下内容：前提是在dist目录下</p><pre class="line-numbers language-bash"><code class="language-bash">FROM nginxCOPY / /usr/share/nginx/html/COPY nginx/default.conf /etc/nginx/conf.d/default.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><a href="https://imgtu.com/i/Rjg0c8"><img src="https://z3.ax1x.com/2021/07/09/Rjg0c8.png" alt="Rjg0c8.png"></a></p><h3 id="6-基于该Dockerfile构建vue应用镜像"><a href="#6-基于该Dockerfile构建vue应用镜像" class="headerlink" title="6.基于该Dockerfile构建vue应用镜像"></a>6.基于该Dockerfile构建vue应用镜像</h3><p>运行命令（注意不要少了最后的 “.” ）</p><pre class="line-numbers language-bash"><code class="language-bash">docker build -t vuenginxcontainer <span class="token keyword">.</span>复制代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p><code>-t</code> 是给镜像命名 <code>.</code> 是基于当前目录的Dockerfile来构建镜像</p></blockquote><p>查看本地镜像，运行命令</p><pre class="line-numbers language-bash"><code class="language-bash">docker images<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://imgtu.com/i/Rj2MUs"><img src="https://z3.ax1x.com/2021/07/09/Rj2MUs.png" alt="Rj2MUs.png"></a></p><h3 id="7-启动-vue-app-容器"><a href="#7-启动-vue-app-容器" class="headerlink" title="7.启动 vue app 容器"></a>7.启动 vue app 容器</h3><blockquote><p>Docker 容器Container： 镜像运行时的实体。镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的类和实例一样，镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等 。</p></blockquote><p>基于 vuenginxcontainer 镜像启动容器，运行命令：</p><pre><code>docker run \-p 3000:80 \-d --name vueApp \vuenginxcontainer复制代码</code></pre><blockquote><ul><li><code>docker run</code> 基于镜像启动一个容器</li><li><code>-p 3000:80</code> 端口映射，将宿主的3000端口映射到容器的80端口</li><li><code>-d</code> 后台方式运行</li><li><code>--name</code> 容器名 查看 docker 进程</li></ul></blockquote><pre><code>docker ps复制代码</code></pre><p><a href="https://imgtu.com/i/Rj2bqg"><img src="https://z3.ax1x.com/2021/07/09/Rj2bqg.png" alt="Rj2bqg.png"></a></p><p>可以发现名为 vueApp的容器已经运行起来。此时访问 <a href="https://link.juejin.cn/?target=http://localhost:3000">http://localhost:3000</a> 或者服务器ip：3000就能访问到该vue应用:</p><p><a href="https://imgtu.com/i/RjR4w4"><img src="https://z3.ax1x.com/2021/07/09/RjR4w4.png" alt="RjR4w4.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> DOCKER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DOCKER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>promise学习前基础</title>
      <link href="/2021/07/08/promise-xue-xi-qian-ji-chu/"/>
      <url>/2021/07/08/promise-xue-xi-qian-ji-chu/</url>
      
        <content type="html"><![CDATA[<h2 id="区别实例对象和函数对象"><a href="#区别实例对象和函数对象" class="headerlink" title="区别实例对象和函数对象"></a>区别实例对象和函数对象</h2><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 1.函数对象与实例对象</span><span class="token comment" spellcheck="true">// 函数对象：讲函数作为对象使用时，简称为函数对象</span><span class="token comment" spellcheck="true">// 实例对象：new 函数产生的对象，简称为对象</span><span class="token keyword">function</span> <span class="token function">Fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//Fn函数</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">const</span> fn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//Fn是构造函数 fn是实例对象(简称为对象)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Fn<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//Fn是函数对象，用.来体现出来</span>Fn<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//Fn是函数对象</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#test'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//jQuery是函数($)</span>$<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'./test'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//jQuery函数对象($)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>语法：简单理解：()左边为函数，.左边是函数对象，new的为实例对象，简称为对象。</p></blockquote><h2 id="两种类型的回调函数"><a href="#两种类型的回调函数" class="headerlink" title="两种类型的回调函数"></a>两种类型的回调函数</h2><h2 id="什么是回调函数？"><a href="#什么是回调函数？" class="headerlink" title="什么是回调函数？"></a><strong>什么是回调函数？</strong></h2><p>在 JavaScript 中，函数即对象。我们可以将对象作为参数传递给函数吗？答案是“可以”。</p><p>所以，我们可以将函数作为参数传递给其他函数，在外部函数中调用它。听起来有点复杂？我们看一下下面的例子：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">print</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>print( ) 函数将另一个函数作为参数，并在函数体内部调用它。在 JavaScript 里，我们叫它“回调”。所以，被传递给另一个函数作为参数的函数叫作回调函数。</p><h3 id="为什么需要回调函数？"><a href="#为什么需要回调函数？" class="headerlink" title="为什么需要回调函数？"></a><strong>为什么需要回调函数？</strong></h3><p>JavaScript 按从上到下的顺序运行代码。但是，在有些情况下，必须在某些情况发生之后，代码才能运行（或者说必须运行），这就不是按顺序运行了。这是异步编程。</p><p>回调函数确保：函数在某个任务完成之前不运行，在任务完成之后立即运行。它帮助我们编写异步 JavaScript 代码，避免问题和错误。</p><p>在 JavaScript 里创建回调函数的方法是将它作为参数传递给另一个函数，然后当某个任务完成之后，立即调用它。</p><p> <strong>如何创建回调函数</strong></p><p>我们通过一个简单的例子来理解上面的内容。我们想在控制台打印一条消息（message），它在 3 秒之后显示。</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">const</span> message <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"This message is shown after 3 seconds"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>JavaScript 有一个内建方法叫作 “setTimeout”，它会在给定的时间段（以毫秒为单位）后调用函数或计算表达式。因此，在这里，经过 3 秒后将调用 message 函数（1 秒= 1000 毫秒） 。</p><p>换句话说，<strong>message 函数是在发生某事之后（在本示例中为 3 秒之后），而不是在此之前被调用。因此，message 函数就是一个回调函数</strong></p><h3 id="什么是匿名函数？"><a href="#什么是匿名函数？" class="headerlink" title="什么是匿名函数？"></a><strong>什么是匿名函数？</strong></h3><p>此外，我们可以直接在另一个函数内定义一个函数，而不是调用它，比如：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"This message is shown after 3 seconds"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>我们可以看到，这里的回调函数没有名称。在 JavaScript 里，一个没有名称的函数叫作“匿名函数”。这个例子和上面的例子执行的任务一样。</p><h3 id="用箭头函数写回调函数"><a href="#用箭头函数写回调函数" class="headerlink" title="用箭头函数写回调函数"></a><strong>用箭头函数写回调函数</strong></h3><p>你也可以用 ES6 箭头函数写回调函数。箭头函数是 JavaScript 里的一种新的函数形式。</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"This message is shown after 3 seconds"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="同步回调"><a href="#同步回调" class="headerlink" title="同步回调"></a>同步回调</h3><ol><li>理解：立即执行，完全执行完后结束，不会放入回调队列当中</li><li>例子：数组遍历相关的回调函数      / Promise的excutor函数</li></ol><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 同步回调函数</span><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//遍历回调，同步回调函数，执行完了再执行下一条语句，不会放入队列，一上来就要执行完</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"foreach()之后"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>分析：首先假如我们不知道forEach是遍历，但通过上面函数对象的理解，则arr.forEach是一个函数，arr是函数对象。</p><p>arr.forEach调用里面的箭头函数，箭头函数作为参数。arr.forEach自己携带三个参数，1，3，5，里面的回调函数，同样有这三个参数。里面的箭头函数是回调函数，是函数执行后，它才作含参数被执行。</p></blockquote><h3 id="异步回调"><a href="#异步回调" class="headerlink" title="异步回调"></a>异步回调</h3><ol><li>理解：不会立即执行，会放入回调队列将来执行</li><li>例子：定时器回调 / ajax回调 /Promise的成功|失败的回调</li></ol><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 异步回调函数</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"timout callback()"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//异步回调函数，会放入队列中将来执行，先开始，再等待完成再执行</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"setTimeout()之后"</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"setTimeout()之后2"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="JS的error处理"><a href="#JS的error处理" class="headerlink" title="JS的error处理"></a>JS的error处理</h2><blockquote><p>promise里面有错误回调，故要理解js的错误处理</p></blockquote><p>1.错误的类型</p><ul><li>  Error：所有错误的父类型</li><li>  ReferenceError：引用的变量不存在</li></ul><pre class="line-numbers language-js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//ReferenceError:  a is not defined</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'-----'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//没有捕获error，下面的代码不会执行</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>  TypeError：数据类型不确定的错误</li></ul><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">let</span> bconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>xxx<span class="token punctuation">)</span>b <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>b<span class="token punctuation">.</span><span class="token function">xxx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//TypeError：b.xxx is not a function</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>  RangeError：数据值不在其所允许的范围内</li></ul><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//递归调用fn，自己调用自己function fn() &amp;#123;    fn()&amp;#125;fn()//RangeError: Maximum call stack size exceeded,递归调用有次数限制</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>  SyntaxError：语法错误。</li></ul><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token string">""</span>"<span class="token comment" spellcheck="true">//SyntaxError: Unexpected string</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.错误处理</p><ul><li>  捕获错误：try …catch</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>meta http<span class="token operator">-</span>equiv<span class="token operator">=</span><span class="token string">"X-UA-Compatible"</span> content<span class="token operator">=</span><span class="token string">"IE=edge"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1.0"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>Document<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">//捕获错误：try ... catch</span>        <span class="token keyword">try</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">let</span> d            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>xxx<span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">error</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>stack<span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"出错之后"</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//抛出错误：throw error</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>  抛出错误：throw error</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>meta http<span class="token operator">-</span>equiv<span class="token operator">=</span><span class="token string">"X-UA-Compatible"</span> content<span class="token operator">=</span><span class="token string">"IE=edge"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1.0"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>Document<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">function</span> <span class="token function">something</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// Date.now()是获取当前数字和</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span><span class="token operator">===</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"当前时间为奇数，可以执行任务"</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//如果时间是偶数抛出异常，由调用来处理</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">"当前时间为偶数,无法执行任务"</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//捕获处理异常</span>    <span class="token keyword">try</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">something</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">error</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">alert</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// alert(Date.now)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3.错误对象</p><ul><li>  message属性：错误相关信息</li><li>  stack属性： 函数调用栈记录信息</li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker装odoo14</title>
      <link href="/2021/07/05/docker-zhuang-odoo14/"/>
      <url>/2021/07/05/docker-zhuang-odoo14/</url>
      
        <content type="html"><![CDATA[<p>创建数据库容器服务</p><pre class="line-numbers language-bash"><code class="language-bash">docker run -d -e POSTGRES_USER<span class="token operator">=</span>odoo -e POSTGRES_PASSWORD<span class="token operator">=</span>odoo -e POSTGRES_DB<span class="token operator">=</span>postgres --name db1 postgres:10.0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入cmd后 需要等待一部分时间，原因是此刻 正在拉取postgres的镜像<a href="https://imgtu.com/i/R5ksYD"><img src="https://z3.ax1x.com/2021/07/05/R5ksYD.png" alt="R5ksYD.png"></a></p><p>等待片刻会返回一串ID，这个ID为新建的postgres容器ID，同时记住：创建数据库容器服务时 有一个 -name 选项，后面跟着的是这个容器的名称（示范中写的是 db1），后面我们会用到。</p><p>接下来创建 odoo容器服务</p><p>我们创建odoo容器，注意 -p 8888:8069这个参数，8888是宿主机的端口（也就是我们ubuntu的端口，可以任意设定），8069是容器内的odoo端口，访问odoo容器的地址是 宿主机（ubuntu）的 ip:8888</p><pre class="line-numbers language-bash"><code class="language-bash">docker run -v /opt/addons/:/mnt/extra-addons -p 8888:8069 --name test_odoo1 --link db1:db -t odoo:14<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="C:\Users\29833\AppData\Roaming\Typora\typora-user-images\image-20210705175739835.png" alt="image-20210705175739835">此刻一样会等待</p><p>等待片刻看到这样的情况就是 odoo启动了，即可访问。</p><p>为了让odoo一直运行，我们需要 快捷键control + c 退出。然后输入 docker ps -a 查看容器，并找到 odoo14对应的容器id。</p><p>然后输入 docker start 容器ID，即可让odoo容器一直运行了。</p><p><a href="https://imgtu.com/i/RI9tiQ"><img src="https://z3.ax1x.com/2021/07/05/RI9tiQ.png" alt="RI9tiQ.png"></a></p><p><a href="https://imgtu.com/i/RICBpd"><img src="https://z3.ax1x.com/2021/07/05/RICBpd.png" alt="RICBpd.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> DOCKER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DOCKER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进制转换：二进制、八进制、十进制、十六进制相互转换</title>
      <link href="/2021/06/21/jin-zhi-zhuan-huan-er-jin-zhi-ba-jin-zhi-shi-jin-zhi-shi-liu-jin-zhi-xiang-hu-zhuan-huan/"/>
      <url>/2021/06/21/jin-zhi-zhuan-huan-er-jin-zhi-ba-jin-zhi-shi-jin-zhi-shi-liu-jin-zhi-xiang-hu-zhuan-huan/</url>
      
        <content type="html"><![CDATA[<h2 id="1-整数部分"><a href="#1-整数部分" class="headerlink" title="1) 整数部分"></a>1) 整数部分</h2><p>例如，将八进制数字 53627 转换成十进制：</p><p>53627 = 5×84 + 3×83 + 6×82 + 2×81 + 7×80 = 22423（十进制）</p><p>从右往左看，第1位的位权为 80=1，第2位的位权为 81=8，第3位的位权为 82=64，第4位的位权为 83=512，第5位的位权为 84=4096 …… 第n位的位权就为 8n-1。将各个位的数字乘以位权，然后再相加，就得到了十进制形式。</p><p><strong>注意，这里我们需要以十进制形式来表示位权。</strong></p><p>再如，将十六进制数字 9FA8C 转换成十进制：</p><p>9FA8C = 9×164 + 15×163 + 10×162 + 8×161 + 12×160 = 653964（十进制）</p><p>从右往左看，第1位的位权为 160=1，第2位的位权为 161=16，第3位的位权为 162=256，第4位的位权为 163=4096，第5位的位权为 164=65536 …… 第n位的位权就为 16n-1。将各个位的数字乘以位权，然后再相加，就得到了十进制形式。</p><p>将二进制数字转换成十进制也是类似的道理</p><p>11010 = 1×24 + 1×23 + 0×22 + 1×21 + 0×20 = 26（十进制）</p><p>从右往左看，第1位的位权为 20=1，第2位的位权为 21=2，第3位的位权为 22=4，第4位的位权为 23=8，第5位的位权为 24=16 …… 第n位的位权就为 2n-1。将各个位的数字乘以位权，然后再相加，就得到了十进制形式。</p><h2 id="2-小数部分"><a href="#2-小数部分" class="headerlink" title="2) 小数部分"></a>2) 小数部分</h2><p>例如，将八进制数字 423.5176 转换成十进制：</p><p>423.5176 = 4×82 + 2×81 + 3×80 + 5×8-1 + 1×8-2 + 7×8-3 + 6×8-4 = 275.65576171875（十进制）</p><p>小数部分和整数部分相反，要从左往右看，第1位的位权为 8-1=1/8，第2位的位权为 8-2=1/64，第3位的位权为 8-3=1/512，第4位的位权为 8-4=1/4096 …… 第m位的位权就为 8-m。</p><p>再如，将二进制数字 1010.1101 转换成十进制：</p><p>1010.1101 = 1×23 + 0×22 + 1×21 + 0×20 + 1×2-1 + 1×2-2 + 0×2-3 + 1×2-4 = 10.8125（十进制）</p><p>小数部分和整数部分相反，要从左往右看，第1位的位权为 2-1=1/2，第2位的位权为 2-2=1/4，第3位的位权为 2-3=1/8，第4位的位权为 2-4=1/16 …… 第m位的位权就为 2-m。</p><p>更多转换成十进制的例子：</p><ul><li>二进制：1001 = 1×23 + 0×22 + 0×21 + 1×20 = 8 + 0 + 0 + 1 = 9（十进制）</li><li>二进制：101.1001 = 1×22 + 0×21 + 1×20 + 1×2-1 + 0×2-2 + 0×2-3 + 1×2-4 = 4 + 0 + 1 + 0.5 + 0 + 0 + 0.0625 = 5.5625（十进制）</li><li>八进制：302 = 3×82 + 0×81 + 2×80 = 192 + 0 + 2 = 194（十进制）</li><li>八进制：302.46 = 3×82 + 0×81 + 2×80 + 4×8-1 + 6×8-2 = 192 + 0 + 2 + 0.5 + 0.09375= 194.59375（十进制）</li><li>十六进制：EA7 = 14×162 + 10×161 + 7×160 = 3751（十进制）</li></ul><h2 id="将十进制转换为二进制、八进制、十六进制"><a href="#将十进制转换为二进制、八进制、十六进制" class="headerlink" title="将十进制转换为二进制、八进制、十六进制"></a>将十进制转换为二进制、八进制、十六进制</h2><p>将十进制转换为其它进制时比较复杂，整数部分和小数部分的算法不一样，下面我们分别讲解。</p><p><strong>1) 整数部分</strong></p><p>十进制整数转换为 N 进制整数采用“除 N 取余，逆序排列”法。具体做法是：</p><ul><li>将 N 作为除数，用十进制整数除以 N，可以得到一个商和余数；</li><li>保留余数，用商继续除以 N，又得到一个新的商和余数；</li><li>仍然保留余数，用商继续除以 N，还会得到一个新的商和余数；</li><li>……</li><li>如此反复进行，每次都保留余数，用商接着除以 N，直到商为 0 时为止。</li></ul><p>把先得到的余数作为 N 进制数的低位数字，后得到的余数作为 N 进制数的高位数字，依次排列起来，就得到了 N 进制数字。</p><p>下图演示了将十进制数字 36926 转换成八进制的过程：</p><p><img src="https://pic3.zhimg.com/80/v2-907a70dfb1b306c215bc3b09d7662812_720w.jpg" alt="img"></p><p>从图中得知，<strong>十进制数字 36926 转换成八进制的结果为 110076。</strong></p><p>下图演示了将十进制数字 42 转换成二进制的过程：</p><p><img src="https://pic2.zhimg.com/80/v2-6187939e9895a38c877ee391ebcb50b9_720w.jpg" alt="img"></p><p>从图中得知，<strong>十进制数字 42 转换成二进制的结果为 101010。</strong></p><p><strong>2) 小数部分</strong></p><p>十进制小数转换成 N 进制小数采用“乘 N 取整，顺序排列”法。具体做法是：</p><ul><li>用 N 乘以十进制小数，可以得到一个积，这个积包含了整数部分和小数部分；</li><li>将积的整数部分取出，再用 N 乘以余下的小数部分，又得到一个新的积；</li><li>再将积的整数部分取出，继续用 N 乘以余下的小数部分；</li><li>……</li><li>如此反复进行，每次都取出整数部分，用 N 接着乘以小数部分，直到积中的小数部分为 0，或者达到所要求的精度为止。</li></ul><p>把取出的整数部分按顺序排列起来，先取出的整数作为 N 进制小数的高位数字，后取出的整数作为低位数字，这样就得到了 N 进制小数。</p><p>下图演示了将十进制小数 0.930908203125 转换成八进制小数的过程：</p><p><img src="https://pic2.zhimg.com/80/v2-710733bee428b466c95eca0e49ae4765_720w.jpg" alt="img"></p><p>从图中得知，<strong>十进制小数 0.930908203125 转换成八进制小数的结果为 0.7345。</strong></p><p>下图演示了将十进制小数 0.6875 转换成二进制小数的过程：</p><p><img src="https://pic4.zhimg.com/80/v2-5bf99b1c6076ee881f063d0ebbf3d657_720w.jpg" alt="img"></p><p>从图中得知，<strong>十进制小数 0.6875 转换成二进制小数的结果为 0.1011。</strong></p><p>如果一个数字既包含了整数部分又包含了小数部分，那么将整数部分和小数部分开，分别按照上面的方法完成转换，然后再合并在一起即可。例如：</p><ul><li>十进制数字 36926.930908203125 转换成八进制的结果为 110076.7345；</li><li>十进制数字 42.6875 转换成二进制的结果为 101010.1011。</li></ul><p><img src="https://pic4.zhimg.com/80/v2-0b01c83ed9540de9e1d3ea66a2eb0007_720w.jpg" alt="img"></p><p>注意，<strong>十进制小数转换成其他进制小数时，结果有可能是一个无限位的小数。请看下面的例子：</strong></p><ul><li>十进制 0.51 对应的二进制为 0.100000101000111101011100001010001111010111…，是一个循环小数；</li><li>十进制 0.72 对应的二进制为 0.1011100001010001111010111000010100011110…，是一个循环小数；</li><li>十进制 0.625 对应的二进制为 0.101，是一个有限小数。</li></ul><h2 id="二进制和八进制、十六进制的转换"><a href="#二进制和八进制、十六进制的转换" class="headerlink" title="二进制和八进制、十六进制的转换"></a>二进制和八进制、十六进制的转换</h2><p>其实，任何进制之间的转换都可以使用上面讲到的方法，只不过有时比较麻烦，所以一般针对不同的进制采取不同的方法。将二进制转换为八进制和十六进制时就有非常简洁的方法，反之亦然。</p><p><strong>1) 二进制整数和八进制整数之间的转换</strong></p><p>二进制整数转换为八进制整数时，每三位二进制数字转换为一位八进制数字，运算的顺序是从低位向高位依次进行，高位不足三位用零补齐。下图演示了如何将二进制整数 1110111100 转换为八进制：</p><p><img src="https://pic3.zhimg.com/80/v2-55c3e11cfd953edb60fb7046cec75f1e_720w.jpg" alt="img"></p><p>从图中可以看出，<strong>二进制整数 1110111100 转换为八进制的结果为 1674。</strong></p><p>八进制整数转换为二进制整数时，思路是相反的，每一位八进制数字转换为三位二进制数字，运算的顺序也是从低位向高位依次进行。下图演示了如何将八进制整数 2743 转换为二进制：</p><p><img src="https://pic2.zhimg.com/80/v2-6f8ede92ab007e68a13601514c6d1f55_720w.jpg" alt="img"></p><p>从图中可以看出，<strong>八进制整数 2743 转换为二进制的结果为 10111100011。</strong></p><p><strong>2) 二进制整数和十六进制整数之间的转换</strong></p><p>二进制整数转换为十六进制整数时，每四位二进制数字转换为一位十六进制数字，运算的顺序是从低位向高位依次进行，高位不足四位用零补齐。下图演示了如何将二进制整数 10 1101 0101 1100 转换为十六进制：</p><p><img src="https://pic1.zhimg.com/80/v2-5e6b5193db9bf4954bac2a5baddeeb3c_720w.jpg" alt="img"></p><p>从图中可以看出，<strong>二进制整数 10 1101 0101 1100 转换为十六进制的结果为 2D5C。</strong></p><p>十六进制整数转换为二进制整数时，思路是相反的，每一位十六进制数字转换为四位二进制数字，运算的顺序也是从低位向高位依次进行。下图演示了如何将十六进制整数 A5D6 转换为二进制：</p><p><img src="https://pic2.zhimg.com/80/v2-45fcf1d55962114c21e22ce2a2a4f29d_720w.jpg" alt="img"></p><p>从图中可以看出，<strong>十六进制整数 A5D6 转换为二进制的结果为 1010 0101 1101 0110。</strong></p><p>由于在C语言编程中，二进制、八进制、十六进制之间几乎不会涉及小数的转换，所以这里我们只讲整数的转换，大家学以致用足以。另外，八进制和十六进制之间也极少直接转换，这里我们也不再讲解了。</p><p><strong>总结</strong></p><p>本节前面两部分讲到的转换方法是通用的，任何进制之间的转换都可以采用，只是有时比较麻烦而已。二进制和八进制、十六进制之间的转换有非常简洁的方法，所以没有采用前面的方法。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机组成原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker装SQL sever</title>
      <link href="/2021/06/14/docker-zhuang-sql-sever/"/>
      <url>/2021/06/14/docker-zhuang-sql-sever/</url>
      
        <content type="html"><![CDATA[<h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><blockquote><p>centos7，docker</p></blockquote><h3 id="安装指令"><a href="#安装指令" class="headerlink" title="安装指令"></a>安装指令</h3><pre class="line-numbers language-shell"><code class="language-shell">docker run -itd --name sql1 \    -e 'ACCEPT_EULA=Y' -e 'MSSQL_SA_PASSWORD=msserver@123456' \   -p 1433:1433 -m 2000M --memory 2000M \   -d microsoft/mssql-server-linux:latest# 登录名 sa  密码 msserver@123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注：多次尝试容器并不能跑起来，查明原因才知道是虚拟机内存开小了。</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash">$ docker logs sql1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://imgtu.com/i/2715OH"><img src="https://z3.ax1x.com/2021/06/14/2715OH.png" alt="2715OH.png"></a></p><p>查看发现log，才发现内存开小了，开4g就好了。</p><img src="https://sugon666.oss-cn-hangzhou.aliyuncs.com/typora-user-images/image-20210613145508763.png" alt="image-20210613145508763" style="zoom:33%;" /><blockquote><p>在这里不建议用navicat连接，因为运行SQL sever的sql文件无法显示表格。</p></blockquote><h3 id="用ssms连接"><a href="#用ssms连接" class="headerlink" title="用ssms连接"></a>用ssms连接</h3><p><a href="https://imgtu.com/i/273GcD"><img src="https://z3.ax1x.com/2021/06/14/273GcD.png" alt="273GcD.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> DOCKER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DOCKER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>容器数据卷（含dockerfile的使用）</title>
      <link href="/2021/05/18/rong-qi-shu-ju-juan/"/>
      <url>/2021/05/18/rong-qi-shu-ju-juan/</url>
      
        <content type="html"><![CDATA[<h2 id="容器数据卷"><a href="#容器数据卷" class="headerlink" title="容器数据卷"></a>容器数据卷</h2><h3 id="是什么？"><a href="#是什么？" class="headerlink" title="是什么？"></a>是什么？</h3><p>先来看docker概念</p><blockquote><ol><li>将运用与运行的环境打包成形成容器运行，运行可以伴随着容器，但是我们对数据的要求希望是持久化的。</li><li>容器之间希望有可能共享数据</li></ol></blockquote><p>Docker容器产生的数据，如果不能通过docker commit生成新的镜像，使得我们的数据作为镜像的一部分保存下拉，那么当容器删除后，数据自然也就没有了。</p><p>为了能保存数据在docker中我们使用<strong>数据卷</strong>。</p><h3 id="能干嘛？"><a href="#能干嘛？" class="headerlink" title="能干嘛？"></a>能干嘛？</h3><ul><li>容器持久化</li><li>容器间继承+共享数据</li></ul><h3 id="数据卷"><a href="#数据卷" class="headerlink" title="数据卷"></a>数据卷</h3><p>容器内添加</p><ul><li><p>直接命令添加</p><blockquote><p>容器和宿主机之间数据共享</p><p>容器停止退出后，主机修改数据是否同步 [同步]</p><p>命令（带权限）</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash">$ docker run -it -v /宿主机绝对路径目录:/容器内目录   镜像名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>示例：</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker run -it -v /myDataVolume:/dataVolumeContainer centos<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://imgtu.com/i/gWzDEV"><img src="https://z3.ax1x.com/2021/05/18/gWzDEV.png" alt="gWzDEV.png"></a></p><p><a href="https://imgtu.com/i/gWzt3Q"><img src="https://z3.ax1x.com/2021/05/18/gWzt3Q.png" alt="gWzt3Q.png"></a></p><p>检查：</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker inspect dc353678f9b6<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://imgtu.com/i/gf9ujJ"><img src="https://z3.ax1x.com/2021/05/18/gf9ujJ.png" alt="gf9ujJ.png"></a></p><blockquote><p>说明主机和容器机数据绑定。</p></blockquote><p>在主机建立host.txt文件</p><p><a href="https://imgtu.com/i/gfCdRU"><img src="https://z3.ax1x.com/2021/05/18/gfCdRU.png" alt="gfCdRU.png"></a><br>容器机器查看是否同步</p><p><a href="https://imgtu.com/i/gfiYCV"><img src="https://z3.ax1x.com/2021/05/18/gfiYCV.png" alt="gfiYCV.png"></a></p><p>容器机修改文件和添加文件</p><p><a href="https://imgtu.com/i/gfiPnH"><img src="https://z3.ax1x.com/2021/05/18/gfiPnH.png" alt="gfiPnH.png"></a></p><p>在主机查看是否同步</p><p><a href="https://imgtu.com/i/gfPo1U"><img src="https://z3.ax1x.com/2021/05/18/gfPo1U.png" alt="gfPo1U.png"></a></p><p>容器机关闭后,在主机操作，容器机是否同步</p><p><a href="https://imgtu.com/i/gfmCTg"><img src="https://z3.ax1x.com/2021/05/18/gfmCTg.png" alt="gfmCTg.png"></a></p><p>带权限指令:只读readonly</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker run -it -v /宿主机绝对路径目录:/容器内目录:ro   镜像名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash">$ docker run -it -v /myDataVolume:/dataVolumeContainer:ro centos<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>主机单方面的添加修改数据，传给容器机，容器机不能增删改。</p></blockquote></li><li><p>DockerFile添加</p><ol><li><p>是什么</p><p>镜像的描述文件。</p></li><li><p>dockerfile添加步骤：</p><blockquote><p>1.根目录下新建mydocker文件夹并进入</p><pre class="line-numbers language-bash"><code class="language-bash">$  <span class="token function">mkdir</span> /mydocker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">vi</span> Dockerfile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.可在Dockerfile中使用VOLUME指令来给镜像添加一个或多个卷。</p><p>编写内容如下，旨在为centos镜像添加两个卷</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># volume test</span>FROM centosVOLUME <span class="token punctuation">[</span><span class="token string">"/dataVolumeContainer1"</span>,<span class="token string">"/dataVolumeContainer2"</span><span class="token punctuation">]</span>CMD <span class="token keyword">echo</span> <span class="token string">"finished,---------success1"</span>CMD /bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3.file构建</p><p>4.build后生成镜像</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker build -f /mydocker/Dockerfile -t ptc/centos <span class="token keyword">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>相当于生成了一个默认有两个数据卷的centos容器</p><p>5.run容器</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker run -it ptc/centos /bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>6.通过上述步骤，容器内的卷目录地址已经指定对于的主机目录在哪？ 通过docker inspect查看</p><pre class="line-numbers language-bash"><code class="language-bash">docker inspect 57833a5cad79<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://imgtu.com/i/gfMpgs"><img src="https://z3.ax1x.com/2021/05/18/gfMpgs.png" alt="gfMpgs.png"></a></p></blockquote></li><li><p>怎么做,完整步骤</p><pre class="line-numbers language-bash"><code class="language-bash">连接成功Last login: Tue May 18 23:46:50 2021 from 192.168.171.1<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>anaconda-ks.cfg  etc<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># pwd</span>/root<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd 、</span>-bash: cd: 、: 没有那个文件或目录<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd /</span><span class="token punctuation">[</span>root@localhost /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>bin  boot  dev  etc  home  lib  lib64  media  mnt  myDataVolume  opt  proc  root  run  sbin  srv  sys  tmp  usr  var<span class="token punctuation">[</span>root@localhost /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mkdir /mydocker</span><span class="token punctuation">[</span>root@localhost /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd mydocker</span><span class="token punctuation">[</span>root@localhost mydocker<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span><span class="token punctuation">[</span>root@localhost mydocker<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># pwd</span>/mydocker<span class="token punctuation">[</span>root@localhost mydocker<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim Dockerfile</span>-bash: vim: 未找到命令<span class="token punctuation">[</span>root@localhost mydocker<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vi Dockerfile</span><span class="token punctuation">[</span>root@localhost mydocker<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker build -f /mydocker/Dockerfile -t ptc/centos .</span>Sending build context to Docker daemon  2.048kBStep 1/4 <span class="token keyword">:</span> FROM centos ---<span class="token operator">></span> 300e315adb2fStep 2/4 <span class="token keyword">:</span> VOLUME <span class="token punctuation">[</span><span class="token string">"/dataVolumeContainer1"</span>,<span class="token string">"/dataVolumeContainer2"</span><span class="token punctuation">]</span> ---<span class="token operator">></span> Running <span class="token keyword">in</span> b828e50a66feRemoving intermediate container b828e50a66fe ---<span class="token operator">></span> c469d28ce9a8Step 3/4 <span class="token keyword">:</span> CMD <span class="token keyword">echo</span> <span class="token string">"finished,---------success1"</span> ---<span class="token operator">></span> Running <span class="token keyword">in</span> f51200cac016Removing intermediate container f51200cac016 ---<span class="token operator">></span> ffd6db88bb11Step 4/4 <span class="token keyword">:</span> CMD /bin/bash ---<span class="token operator">></span> Running <span class="token keyword">in</span> f89db8787ae4Removing intermediate container f89db8787ae4 ---<span class="token operator">></span> 68a71b2bd62fSuccessfully built 68a71b2bd62fSuccessfully tagged ptc/centos:latest<span class="token punctuation">[</span>root@localhost mydocker<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker images</span>REPOSITORY        TAG       IMAGE ID       CREATED          SIZEptc/centos        latest    68a71b2bd62f   25 seconds ago   209MBguigu/newtomcat   1.1       b701773a0ef9   3 hours ago      669MBtomcat            8         3f740be6b2ec   4 days ago       533MBtomcat            latest    c43a65faae57   4 days ago       667MBnginx             latest    f0b8a9a54136   6 days ago       133MBhello-world       latest    d1165f221234   2 months ago     13.3kBcentos            latest    300e315adb2f   5 months ago     209MB<span class="token punctuation">[</span>root@localhost mydocker<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker run -it ptc/centos /bin/bash</span><span class="token punctuation">[</span>root@57833a5cad79 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># pwd</span>/<span class="token punctuation">[</span>root@57833a5cad79 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls -l</span>total 0lrwxrwxrwx.   1 root root   7 Nov  3  2020 bin -<span class="token operator">></span> usr/bindrwxr-xr-x.   2 root root   6 May 18 16:21 dataVolumeContainer1drwxr-xr-x.   2 root root   6 May 18 16:21 dataVolumeContainer2drwxr-xr-x.   5 root root 360 May 18 16:21 devdrwxr-xr-x.   1 root root  66 May 18 16:21 etcdrwxr-xr-x.   2 root root   6 Nov  3  2020 homelrwxrwxrwx.   1 root root   7 Nov  3  2020 lib -<span class="token operator">></span> usr/liblrwxrwxrwx.   1 root root   9 Nov  3  2020 lib64 -<span class="token operator">></span> usr/lib64drwx------.   2 root root   6 Dec  4 17:37 lost+founddrwxr-xr-x.   2 root root   6 Nov  3  2020 mediadrwxr-xr-x.   2 root root   6 Nov  3  2020 mntdrwxr-xr-x.   2 root root   6 Nov  3  2020 optdr-xr-xr-x. 132 root root   0 May 18 16:21 procdr-xr-x---.   2 root root 162 Dec  4 17:37 rootdrwxr-xr-x.  11 root root 163 Dec  4 17:37 runlrwxrwxrwx.   1 root root   8 Nov  3  2020 sbin -<span class="token operator">></span> usr/sbindrwxr-xr-x.   2 root root   6 Nov  3  2020 srvdr-xr-xr-x.  13 root root   0 May 18 12:51 sysdrwxrwxrwt.   7 root root 145 Dec  4 17:37 tmpdrwxr-xr-x.  12 root root 144 Dec  4 17:37 usrdrwxr-xr-x.  20 root root 262 Dec  4 17:37 var<span class="token punctuation">[</span>root@57833a5cad79 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd dataVolumeContainer1</span><span class="token punctuation">[</span>root@57833a5cad79 dataVolumeContainer1<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># pwd</span>/dataVolumeContainer1<span class="token punctuation">[</span>root@57833a5cad79 dataVolumeContainer1<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># touch contain01.txt</span><span class="token punctuation">[</span>root@57833a5cad79 dataVolumeContainer1<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>contain01.txt<span class="token punctuation">[</span>root@57833a5cad79 dataVolumeContainer1<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># [root@localhost mydocker]# docker inspect 57833a5cad79 </span><span class="token punctuation">[</span>    <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>        <span class="token string">"Id"</span><span class="token keyword">:</span> <span class="token string">"57833a5cad797db956276cb26d133e7123ee4564fdfdfa88774e776bacd64792"</span>,        <span class="token string">"Created"</span><span class="token keyword">:</span> <span class="token string">"2021-05-18T16:21:18.781824914Z"</span>,        <span class="token string">"Path"</span><span class="token keyword">:</span> <span class="token string">"/bin/bash"</span>,        <span class="token string">"Args"</span><span class="token keyword">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,        <span class="token string">"State"</span><span class="token keyword">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>            <span class="token string">"Status"</span><span class="token keyword">:</span> <span class="token string">"running"</span>,            <span class="token string">"Running"</span><span class="token keyword">:</span> true,            <span class="token string">"Paused"</span><span class="token keyword">:</span> false,            <span class="token string">"Restarting"</span><span class="token keyword">:</span> false,            <span class="token string">"OOMKilled"</span><span class="token keyword">:</span> false,            <span class="token string">"Dead"</span><span class="token keyword">:</span> false,            <span class="token string">"Pid"</span><span class="token keyword">:</span> 66413,            <span class="token string">"ExitCode"</span><span class="token keyword">:</span> 0,            <span class="token string">"Error"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"StartedAt"</span><span class="token keyword">:</span> <span class="token string">"2021-05-18T16:21:19.26185547Z"</span>,            <span class="token string">"FinishedAt"</span><span class="token keyword">:</span> <span class="token string">"0001-01-01T00:00:00Z"</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;,</span>        <span class="token string">"Image"</span><span class="token keyword">:</span> <span class="token string">"sha256:68a71b2bd62fbe93e7645c7c1d7d888630b5716b755c9189a38de45b25f5bf81"</span>,        <span class="token string">"ResolvConfPath"</span><span class="token keyword">:</span> <span class="token string">"/var/lib/docker/containers/57833a5cad797db956276cb26d133e7123ee4564fdfdfa88774e776bacd64792/resolv.conf"</span>,        <span class="token string">"HostnamePath"</span><span class="token keyword">:</span> <span class="token string">"/var/lib/docker/containers/57833a5cad797db956276cb26d133e7123ee4564fdfdfa88774e776bacd64792/hostname"</span>,        <span class="token string">"HostsPath"</span><span class="token keyword">:</span> <span class="token string">"/var/lib/docker/containers/57833a5cad797db956276cb26d133e7123ee4564fdfdfa88774e776bacd64792/hosts"</span>,        <span class="token string">"LogPath"</span><span class="token keyword">:</span> <span class="token string">"/var/lib/docker/containers/57833a5cad797db956276cb26d133e7123ee4564fdfdfa88774e776bacd64792/57833a5cad797db956276cb26d133e7123ee4564fdfdfa88774e776bacd64792-json.log"</span>,        <span class="token string">"Name"</span><span class="token keyword">:</span> <span class="token string">"/dazzling_euclid"</span>,        <span class="token string">"RestartCount"</span><span class="token keyword">:</span> 0,        <span class="token string">"Driver"</span><span class="token keyword">:</span> <span class="token string">"overlay2"</span>,        <span class="token string">"Platform"</span><span class="token keyword">:</span> <span class="token string">"linux"</span>,        <span class="token string">"MountLabel"</span><span class="token keyword">:</span> <span class="token string">""</span>,        <span class="token string">"ProcessLabel"</span><span class="token keyword">:</span> <span class="token string">""</span>,        <span class="token string">"AppArmorProfile"</span><span class="token keyword">:</span> <span class="token string">""</span>,        <span class="token string">"ExecIDs"</span><span class="token keyword">:</span> null,        <span class="token string">"HostConfig"</span><span class="token keyword">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>            <span class="token string">"Binds"</span><span class="token keyword">:</span> null,            <span class="token string">"ContainerIDFile"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"LogConfig"</span><span class="token keyword">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                <span class="token string">"Type"</span><span class="token keyword">:</span> <span class="token string">"json-file"</span>,                <span class="token string">"Config"</span><span class="token keyword">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;&amp;#125;</span>            <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;,</span>            <span class="token string">"NetworkMode"</span><span class="token keyword">:</span> <span class="token string">"default"</span>,            <span class="token string">"PortBindings"</span><span class="token keyword">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;&amp;#125;,</span>            <span class="token string">"RestartPolicy"</span><span class="token keyword">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                <span class="token string">"Name"</span><span class="token keyword">:</span> <span class="token string">"no"</span>,                <span class="token string">"MaximumRetryCount"</span><span class="token keyword">:</span> 0            <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;,</span>            <span class="token string">"AutoRemove"</span><span class="token keyword">:</span> false,            <span class="token string">"VolumeDriver"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"VolumesFrom"</span><span class="token keyword">:</span> null,            <span class="token string">"CapAdd"</span><span class="token keyword">:</span> null,            <span class="token string">"CapDrop"</span><span class="token keyword">:</span> null,            <span class="token string">"CgroupnsMode"</span><span class="token keyword">:</span> <span class="token string">"host"</span>,            <span class="token string">"Dns"</span><span class="token keyword">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,            <span class="token string">"DnsOptions"</span><span class="token keyword">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,            <span class="token string">"DnsSearch"</span><span class="token keyword">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,            <span class="token string">"ExtraHosts"</span><span class="token keyword">:</span> null,            <span class="token string">"GroupAdd"</span><span class="token keyword">:</span> null,            <span class="token string">"IpcMode"</span><span class="token keyword">:</span> <span class="token string">"private"</span>,            <span class="token string">"Cgroup"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"Links"</span><span class="token keyword">:</span> null,            <span class="token string">"OomScoreAdj"</span><span class="token keyword">:</span> 0,            <span class="token string">"PidMode"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"Privileged"</span><span class="token keyword">:</span> false,            <span class="token string">"PublishAllPorts"</span><span class="token keyword">:</span> false,            <span class="token string">"ReadonlyRootfs"</span><span class="token keyword">:</span> false,            <span class="token string">"SecurityOpt"</span><span class="token keyword">:</span> null,            <span class="token string">"UTSMode"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"UsernsMode"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"ShmSize"</span><span class="token keyword">:</span> 67108864,            <span class="token string">"Runtime"</span><span class="token keyword">:</span> <span class="token string">"runc"</span>,            <span class="token string">"ConsoleSize"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>                0,                0            <span class="token punctuation">]</span>,            <span class="token string">"Isolation"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"CpuShares"</span><span class="token keyword">:</span> 0,            <span class="token string">"Memory"</span><span class="token keyword">:</span> 0,            <span class="token string">"NanoCpus"</span><span class="token keyword">:</span> 0,            <span class="token string">"CgroupParent"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"BlkioWeight"</span><span class="token keyword">:</span> 0,            <span class="token string">"BlkioWeightDevice"</span><span class="token keyword">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,            <span class="token string">"BlkioDeviceReadBps"</span><span class="token keyword">:</span> null,            <span class="token string">"BlkioDeviceWriteBps"</span><span class="token keyword">:</span> null,            <span class="token string">"BlkioDeviceReadIOps"</span><span class="token keyword">:</span> null,            <span class="token string">"BlkioDeviceWriteIOps"</span><span class="token keyword">:</span> null,            <span class="token string">"CpuPeriod"</span><span class="token keyword">:</span> 0,            <span class="token string">"CpuQuota"</span><span class="token keyword">:</span> 0,            <span class="token string">"CpuRealtimePeriod"</span><span class="token keyword">:</span> 0,            <span class="token string">"CpuRealtimeRuntime"</span><span class="token keyword">:</span> 0,            <span class="token string">"CpusetCpus"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"CpusetMems"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"Devices"</span><span class="token keyword">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,            <span class="token string">"DeviceCgroupRules"</span><span class="token keyword">:</span> null,            <span class="token string">"DeviceRequests"</span><span class="token keyword">:</span> null,            <span class="token string">"KernelMemory"</span><span class="token keyword">:</span> 0,            <span class="token string">"KernelMemoryTCP"</span><span class="token keyword">:</span> 0,            <span class="token string">"MemoryReservation"</span><span class="token keyword">:</span> 0,            <span class="token string">"MemorySwap"</span><span class="token keyword">:</span> 0,            <span class="token string">"MemorySwappiness"</span><span class="token keyword">:</span> null,            <span class="token string">"OomKillDisable"</span><span class="token keyword">:</span> false,            <span class="token string">"PidsLimit"</span><span class="token keyword">:</span> null,            <span class="token string">"Ulimits"</span><span class="token keyword">:</span> null,            <span class="token string">"CpuCount"</span><span class="token keyword">:</span> 0,            <span class="token string">"CpuPercent"</span><span class="token keyword">:</span> 0,            <span class="token string">"IOMaximumIOps"</span><span class="token keyword">:</span> 0,            <span class="token string">"IOMaximumBandwidth"</span><span class="token keyword">:</span> 0,            <span class="token string">"MaskedPaths"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>                <span class="token string">"/proc/asound"</span>,                <span class="token string">"/proc/acpi"</span>,                <span class="token string">"/proc/kcore"</span>,                <span class="token string">"/proc/keys"</span>,                <span class="token string">"/proc/latency_stats"</span>,                <span class="token string">"/proc/timer_list"</span>,                <span class="token string">"/proc/timer_stats"</span>,                <span class="token string">"/proc/sched_debug"</span>,                <span class="token string">"/proc/scsi"</span>,                <span class="token string">"/sys/firmware"</span>            <span class="token punctuation">]</span>,            <span class="token string">"ReadonlyPaths"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>                <span class="token string">"/proc/bus"</span>,                <span class="token string">"/proc/fs"</span>,                <span class="token string">"/proc/irq"</span>,                <span class="token string">"/proc/sys"</span>,                <span class="token string">"/proc/sysrq-trigger"</span>            <span class="token punctuation">]</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;,</span>        <span class="token string">"GraphDriver"</span><span class="token keyword">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>            <span class="token string">"Data"</span><span class="token keyword">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                <span class="token string">"LowerDir"</span><span class="token keyword">:</span> <span class="token string">"/var/lib/docker/overlay2/5a4e017c606b4d45985341df76d82759f1822c0ac369340c7b6b3aff2a3bbdd9-init/diff:/var/lib/docker/overlay2/106070e7351e9967c5fe6edcb2cf13e4196c30beed19bc28ea6726cfd776700e/diff"</span>,                <span class="token string">"MergedDir"</span><span class="token keyword">:</span> <span class="token string">"/var/lib/docker/overlay2/5a4e017c606b4d45985341df76d82759f1822c0ac369340c7b6b3aff2a3bbdd9/merged"</span>,                <span class="token string">"UpperDir"</span><span class="token keyword">:</span> <span class="token string">"/var/lib/docker/overlay2/5a4e017c606b4d45985341df76d82759f1822c0ac369340c7b6b3aff2a3bbdd9/diff"</span>,                <span class="token string">"WorkDir"</span><span class="token keyword">:</span> <span class="token string">"/var/lib/docker/overlay2/5a4e017c606b4d45985341df76d82759f1822c0ac369340c7b6b3aff2a3bbdd9/work"</span>            <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;,</span>            <span class="token string">"Name"</span><span class="token keyword">:</span> <span class="token string">"overlay2"</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;,</span>        <span class="token string">"Mounts"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>            <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                <span class="token string">"Type"</span><span class="token keyword">:</span> <span class="token string">"volume"</span>,                <span class="token string">"Name"</span><span class="token keyword">:</span> <span class="token string">"58470b8ecc4485d7003b124cd8402e6c74b9498863efaac98b76683c08db06dc"</span>,                <span class="token string">"Source"</span><span class="token keyword">:</span> <span class="token string">"/var/lib/docker/volumes/58470b8ecc4485d7003b124cd8402e6c74b9498863efaac98b76683c08db06dc/_data"</span>,                <span class="token string">"Destination"</span><span class="token keyword">:</span> <span class="token string">"/dataVolumeContainer1"</span>,                <span class="token string">"Driver"</span><span class="token keyword">:</span> <span class="token string">"local"</span>,                <span class="token string">"Mode"</span><span class="token keyword">:</span> <span class="token string">""</span>,                <span class="token string">"RW"</span><span class="token keyword">:</span> true,                <span class="token string">"Propagation"</span><span class="token keyword">:</span> <span class="token string">""</span>            <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;,</span>            <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                <span class="token string">"Type"</span><span class="token keyword">:</span> <span class="token string">"volume"</span>,                <span class="token string">"Name"</span><span class="token keyword">:</span> <span class="token string">"48df4d7d5beb5badd98fd305195c9505963c195a7849fe1dc2f73f02b10b1ea1"</span>,                <span class="token string">"Source"</span><span class="token keyword">:</span> <span class="token string">"/var/lib/docker/volumes/48df4d7d5beb5badd98fd305195c9505963c195a7849fe1dc2f73f02b10b1ea1/_data"</span>,                <span class="token string">"Destination"</span><span class="token keyword">:</span> <span class="token string">"/dataVolumeContainer2"</span>,                <span class="token string">"Driver"</span><span class="token keyword">:</span> <span class="token string">"local"</span>,                <span class="token string">"Mode"</span><span class="token keyword">:</span> <span class="token string">""</span>,                <span class="token string">"RW"</span><span class="token keyword">:</span> true,                <span class="token string">"Propagation"</span><span class="token keyword">:</span> <span class="token string">""</span>            <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>        <span class="token punctuation">]</span>,        <span class="token string">"Config"</span><span class="token keyword">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>            <span class="token string">"Hostname"</span><span class="token keyword">:</span> <span class="token string">"57833a5cad79"</span>,            <span class="token string">"Domainname"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"User"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"AttachStdin"</span><span class="token keyword">:</span> true,            <span class="token string">"AttachStdout"</span><span class="token keyword">:</span> true,            <span class="token string">"AttachStderr"</span><span class="token keyword">:</span> true,            <span class="token string">"Tty"</span><span class="token keyword">:</span> true,            <span class="token string">"OpenStdin"</span><span class="token keyword">:</span> true,            <span class="token string">"StdinOnce"</span><span class="token keyword">:</span> true,            <span class="token string">"Env"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>                <span class="token string">"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"</span>            <span class="token punctuation">]</span>,            <span class="token string">"Cmd"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>                <span class="token string">"/bin/bash"</span>            <span class="token punctuation">]</span>,            <span class="token string">"Image"</span><span class="token keyword">:</span> <span class="token string">"ptc/centos"</span>,            <span class="token string">"Volumes"</span><span class="token keyword">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                <span class="token string">"/dataVolumeContainer1"</span><span class="token keyword">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;&amp;#125;,</span>                <span class="token string">"/dataVolumeContainer2"</span><span class="token keyword">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;&amp;#125;</span>            <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;,</span>            <span class="token string">"WorkingDir"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"Entrypoint"</span><span class="token keyword">:</span> null,            <span class="token string">"OnBuild"</span><span class="token keyword">:</span> null,            <span class="token string">"Labels"</span><span class="token keyword">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                <span class="token string">"org.label-schema.build-date"</span><span class="token keyword">:</span> <span class="token string">"20201204"</span>,                <span class="token string">"org.label-schema.license"</span><span class="token keyword">:</span> <span class="token string">"GPLv2"</span>,                <span class="token string">"org.label-schema.name"</span><span class="token keyword">:</span> <span class="token string">"CentOS Base Image"</span>,                <span class="token string">"org.label-schema.schema-version"</span><span class="token keyword">:</span> <span class="token string">"1.0"</span>,                <span class="token string">"org.label-schema.vendor"</span><span class="token keyword">:</span> <span class="token string">"CentOS"</span>            <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;,</span>        <span class="token string">"NetworkSettings"</span><span class="token keyword">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>            <span class="token string">"Bridge"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"SandboxID"</span><span class="token keyword">:</span> <span class="token string">"14b285417019d1f11d8d85c4d135e2ed7e10f763dfc4e7eaa19d62268b98ae6c"</span>,            <span class="token string">"HairpinMode"</span><span class="token keyword">:</span> false,            <span class="token string">"LinkLocalIPv6Address"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"LinkLocalIPv6PrefixLen"</span><span class="token keyword">:</span> 0,            <span class="token string">"Ports"</span><span class="token keyword">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;&amp;#125;,</span>            <span class="token string">"SandboxKey"</span><span class="token keyword">:</span> <span class="token string">"/var/run/docker/netns/14b285417019"</span>,            <span class="token string">"SecondaryIPAddresses"</span><span class="token keyword">:</span> null,            <span class="token string">"SecondaryIPv6Addresses"</span><span class="token keyword">:</span> null,            <span class="token string">"EndpointID"</span><span class="token keyword">:</span> <span class="token string">"fc2d0587bd312285c53f1dcb094ad8c09e80b3c027a59f848ab4b77944359e2c"</span>,            <span class="token string">"Gateway"</span><span class="token keyword">:</span> <span class="token string">"172.17.0.1"</span>,            <span class="token string">"GlobalIPv6Address"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"GlobalIPv6PrefixLen"</span><span class="token keyword">:</span> 0,            <span class="token string">"IPAddress"</span><span class="token keyword">:</span> <span class="token string">"172.17.0.4"</span>,            <span class="token string">"IPPrefixLen"</span><span class="token keyword">:</span> 16,            <span class="token string">"IPv6Gateway"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"MacAddress"</span><span class="token keyword">:</span> <span class="token string">"02:42:ac:11:00:04"</span>,            <span class="token string">"Networks"</span><span class="token keyword">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                <span class="token string">"bridge"</span><span class="token keyword">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>                    <span class="token string">"IPAMConfig"</span><span class="token keyword">:</span> null,                    <span class="token string">"Links"</span><span class="token keyword">:</span> null,                    <span class="token string">"Aliases"</span><span class="token keyword">:</span> null,                    <span class="token string">"NetworkID"</span><span class="token keyword">:</span> <span class="token string">"9f298dcf2ae46cf1772c14ef27f433badd3db69e57004142a379d6731e0d5d2a"</span>,                    <span class="token string">"EndpointID"</span><span class="token keyword">:</span> <span class="token string">"fc2d0587bd312285c53f1dcb094ad8c09e80b3c027a59f848ab4b77944359e2c"</span>,                    <span class="token string">"Gateway"</span><span class="token keyword">:</span> <span class="token string">"172.17.0.1"</span>,                    <span class="token string">"IPAddress"</span><span class="token keyword">:</span> <span class="token string">"172.17.0.4"</span>,                    <span class="token string">"IPPrefixLen"</span><span class="token keyword">:</span> 16,                    <span class="token string">"IPv6Gateway"</span><span class="token keyword">:</span> <span class="token string">""</span>,                    <span class="token string">"GlobalIPv6Address"</span><span class="token keyword">:</span> <span class="token string">""</span>,                    <span class="token string">"GlobalIPv6PrefixLen"</span><span class="token keyword">:</span> 0,                    <span class="token string">"MacAddress"</span><span class="token keyword">:</span> <span class="token string">"02:42:ac:11:00:04"</span>,                    <span class="token string">"DriverOpts"</span><span class="token keyword">:</span> null                <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>            <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>    <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>root@localhost mydocker<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd /var/lib/docker/volumes/58470b8ecc4485d7003b124cd8402e6c74b9498863efaac98b76683c08db06dc/_data</span><span class="token punctuation">[</span>root@localhost _data<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ll</span>总用量 0-rw-r--r--. 1 root root 0 5月  19 00:22 contain01.txt<span class="token punctuation">[</span>root@localhost _data<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># touch host.txt</span><span class="token punctuation">[</span>root@localhost _data<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>contain01.txt  host.txt<span class="token punctuation">[</span>root@localhost _data<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd /</span><span class="token punctuation">[</span>root@localhost /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>bin  boot  dev  etc  home  lib  lib64  media  mnt  myDataVolume  mydocker  opt  proc  root  run  sbin  srv  sys  tmp  usr  var<span class="token punctuation">[</span>root@localhost /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd mydocker</span><span class="token punctuation">[</span>root@localhost mydocker<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>Dockerfile<span class="token punctuation">[</span>root@localhost mydocker<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span><span class="token punctuation">[</span>root@localhost mydocker<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat Dockerfile</span><span class="token comment" spellcheck="true"># volume test</span>FROM centosVOLUME <span class="token punctuation">[</span><span class="token string">"/dataVolumeContainer1"</span>,<span class="token string">"/dataVolumeContainer2"</span><span class="token punctuation">]</span>CMD <span class="token keyword">echo</span> <span class="token string">"finished,---------success1"</span>CMD /bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol></li><li><p>备注</p></li></ul><h3 id="数据卷容器"><a href="#数据卷容器" class="headerlink" title="数据卷容器"></a>数据卷容器</h3><p>是什么</p><blockquote><p>命名的容器挂载数据卷，其他容器通过这个(父容器)实现数据共享，挂载数据卷容器，称之为数据卷容器。</p></blockquote><p>总体介绍</p><blockquote><p>以上一步新建镜像ptc/centos为模板并运行容器dc01/dc02/dc03</p><p>他们已经具有容器卷/dataVolumeContain1和/dataVolumeContainer2</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost mydocker<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker ps</span>CONTAINER ID   IMAGE                 COMMAND             CREATED          STATUS          PORTS                                       NAMES57833a5cad79   ptc/centos            <span class="token string">"/bin/bash"</span>         30 minutes ago   Up 30 minutes                                               dazzling_euclid443a50b5913c   centos                <span class="token string">"/bin/bash"</span>         3 hours ago      Up 3 hours                                                  strange_maxwell42cb5686bcbe   guigu/newtomcat:1.1   <span class="token string">"catalina.sh run"</span>   3 hours ago      Up 3 hours      0.0.0.0:6666-<span class="token operator">></span>8080/tcp, :::6666-<span class="token operator">></span>8080/tcp   youthful_yalow<span class="token punctuation">[</span>root@localhost mydocker<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker run -it --name dc01 ptc/centos</span><span class="token punctuation">[</span>root@c88eb6c18890 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ll</span>bash: ll: <span class="token function">command</span> not found<span class="token punctuation">[</span>root@c88eb6c18890 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls-l</span>bash: ls-l: <span class="token function">command</span> not found<span class="token punctuation">[</span>root@c88eb6c18890 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls -l</span>total 0lrwxrwxrwx.   1 root root   7 Nov  3  2020 bin -<span class="token operator">></span> usr/bindrwxr-xr-x.   2 root root   6 May 18 16:52 dataVolumeContainer1drwxr-xr-x.   2 root root   6 May 18 16:52 dataVolumeContainer2drwxr-xr-x.   5 root root 360 May 18 16:52 devdrwxr-xr-x.   1 root root  66 May 18 16:52 etcdrwxr-xr-x.   2 root root   6 Nov  3  2020 homelrwxrwxrwx.   1 root root   7 Nov  3  2020 lib -<span class="token operator">></span> usr/liblrwxrwxrwx.   1 root root   9 Nov  3  2020 lib64 -<span class="token operator">></span> usr/lib64drwx------.   2 root root   6 Dec  4 17:37 lost+founddrwxr-xr-x.   2 root root   6 Nov  3  2020 mediadrwxr-xr-x.   2 root root   6 Nov  3  2020 mntdrwxr-xr-x.   2 root root   6 Nov  3  2020 optdr-xr-xr-x. 134 root root   0 May 18 16:52 procdr-xr-x---.   2 root root 162 Dec  4 17:37 rootdrwxr-xr-x.  11 root root 163 Dec  4 17:37 runlrwxrwxrwx.   1 root root   8 Nov  3  2020 sbin -<span class="token operator">></span> usr/sbindrwxr-xr-x.   2 root root   6 Nov  3  2020 srvdr-xr-xr-x.  13 root root   0 May 18 12:51 sysdrwxrwxrwt.   7 root root 145 Dec  4 17:37 tmpdrwxr-xr-x.  12 root root 144 Dec  4 17:37 usrdrwxr-xr-x.  20 root root 262 Dec  4 17:37 var<span class="token punctuation">[</span>root@c88eb6c18890 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd dataVolumeContainer1</span><span class="token punctuation">[</span>root@c88eb6c18890 dataVolumeContainer1<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span><span class="token punctuation">[</span>root@c88eb6c18890 dataVolumeContainer1<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># touch dc01_add.txt</span><span class="token punctuation">[</span>root@c88eb6c18890 dataVolumeContainer1<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># [root@localhost mydocker]# docker ps</span>CONTAINER ID   IMAGE                 COMMAND                  CREATED              STATUS              PORTS                                       NAMESc88eb6c18890   ptc/centos            <span class="token string">"/bin/sh -c /bin/bash"</span>   About a minute ago   Up About a minute                                               dc0157833a5cad79   ptc/centos            <span class="token string">"/bin/bash"</span>              32 minutes ago       Up 32 minutes                                                   dazzling_euclid443a50b5913c   centos                <span class="token string">"/bin/bash"</span>              3 hours ago          Up 3 hours                                                      strange_maxwell42cb5686bcbe   guigu/newtomcat:1.1   <span class="token string">"catalina.sh run"</span>        3 hours ago          Up 3 hours          0.0.0.0:6666-<span class="token operator">></span>8080/tcp, :::6666-<span class="token operator">></span>8080/tcp   youthful_yalow<span class="token punctuation">[</span>root@localhost mydocker<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker run -it --name dc02 --volumes-from dc01 ptc/centos</span><span class="token punctuation">[</span>root@1713bd9ee1cc /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd /</span><span class="token punctuation">[</span>root@1713bd9ee1cc /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls -l</span>total 0lrwxrwxrwx.   1 root root   7 Nov  3  2020 bin -<span class="token operator">></span> usr/bindrwxr-xr-x.   2 root root  26 May 18 16:53 dataVolumeContainer1drwxr-xr-x.   2 root root   6 May 18 16:52 dataVolumeContainer2drwxr-xr-x.   5 root root 360 May 18 16:55 devdrwxr-xr-x.   1 root root  66 May 18 16:55 etcdrwxr-xr-x.   2 root root   6 Nov  3  2020 homelrwxrwxrwx.   1 root root   7 Nov  3  2020 lib -<span class="token operator">></span> usr/liblrwxrwxrwx.   1 root root   9 Nov  3  2020 lib64 -<span class="token operator">></span> usr/lib64drwx------.   2 root root   6 Dec  4 17:37 lost+founddrwxr-xr-x.   2 root root   6 Nov  3  2020 mediadrwxr-xr-x.   2 root root   6 Nov  3  2020 mntdrwxr-xr-x.   2 root root   6 Nov  3  2020 optdr-xr-xr-x. 135 root root   0 May 18 16:55 procdr-xr-x---.   2 root root 162 Dec  4 17:37 rootdrwxr-xr-x.  11 root root 163 Dec  4 17:37 runlrwxrwxrwx.   1 root root   8 Nov  3  2020 sbin -<span class="token operator">></span> usr/sbindrwxr-xr-x.   2 root root   6 Nov  3  2020 srvdr-xr-xr-x.  13 root root   0 May 18 12:51 sysdrwxrwxrwt.   7 root root 145 Dec  4 17:37 tmpdrwxr-xr-x.  12 root root 144 Dec  4 17:37 usrdrwxr-xr-x.  20 root root 262 Dec  4 17:37 var<span class="token punctuation">[</span>root@1713bd9ee1cc /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd dataVolumeContainer1</span><span class="token punctuation">[</span>root@1713bd9ee1cc dataVolumeContainer1<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls</span>dc01_add.txt<span class="token punctuation">[</span>root@1713bd9ee1cc dataVolumeContainer1<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># touch doc2_add.txt</span><span class="token punctuation">[</span>root@1713bd9ee1cc dataVolumeContainer1<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ^P[root@localhost mydocker]# docker ps</span>CONTAINER ID   IMAGE                 COMMAND                  CREATED              STATUS              PORTS                                       NAMES1713bd9ee1cc   ptc/centos            <span class="token string">"/bin/sh -c /bin/bash"</span>   About a minute ago   Up About a minute                                               dc02c88eb6c18890   ptc/centos            <span class="token string">"/bin/sh -c /bin/bash"</span>   4 minutes ago        Up 4 minutes                                                    dc0157833a5cad79   ptc/centos            <span class="token string">"/bin/bash"</span>              35 minutes ago       Up 35 minutes                                                   dazzling_euclid443a50b5913c   centos                <span class="token string">"/bin/bash"</span>              3 hours ago          Up 3 hours                                                      strange_maxwell42cb5686bcbe   guigu/newtomcat:1.1   <span class="token string">"catalina.sh run"</span>        3 hours ago          Up 3 hours          0.0.0.0:6666-<span class="token operator">></span>8080/tcp, :::6666-<span class="token operator">></span>8080/tcp   youthful_yalow<span class="token punctuation">[</span>root@localhost mydocker<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># docker run -it --name dc03 --volumes-from dc01 ptc/centos</span><span class="token punctuation">[</span>root@a2afac12ee70 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls -l</span>total 0lrwxrwxrwx.   1 root root   7 Nov  3  2020 bin -<span class="token operator">></span> usr/bindrwxr-xr-x.   2 root root  46 May 18 16:56 dataVolumeContainer1drwxr-xr-x.   2 root root   6 May 18 16:52 dataVolumeContainer2drwxr-xr-x.   5 root root 360 May 18 16:57 devdrwxr-xr-x.   1 root root  66 May 18 16:57 etcdrwxr-xr-x.   2 root root   6 Nov  3  2020 homelrwxrwxrwx.   1 root root   7 Nov  3  2020 lib -<span class="token operator">></span> usr/liblrwxrwxrwx.   1 root root   9 Nov  3  2020 lib64 -<span class="token operator">></span> usr/lib64drwx------.   2 root root   6 Dec  4 17:37 lost+founddrwxr-xr-x.   2 root root   6 Nov  3  2020 mediadrwxr-xr-x.   2 root root   6 Nov  3  2020 mntdrwxr-xr-x.   2 root root   6 Nov  3  2020 optdr-xr-xr-x. 137 root root   0 May 18 16:57 procdr-xr-x---.   2 root root 162 Dec  4 17:37 rootdrwxr-xr-x.  11 root root 163 Dec  4 17:37 runlrwxrwxrwx.   1 root root   8 Nov  3  2020 sbin -<span class="token operator">></span> usr/sbindrwxr-xr-x.   2 root root   6 Nov  3  2020 srvdr-xr-xr-x.  13 root root   0 May 18 12:51 sysdrwxrwxrwt.   7 root root 145 Dec  4 17:37 tmpdrwxr-xr-x.  12 root root 144 Dec  4 17:37 usrdrwxr-xr-x.  20 root root 262 Dec  4 17:37 var<span class="token punctuation">[</span>root@a2afac12ee70 /<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cd dataVolumeContainer1</span><span class="token punctuation">[</span>root@a2afac12ee70 dataVolumeContainer1<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls -l</span>total 0-rw-r--r--. 1 root root 0 May 18 16:53 dc01_add.txt-rw-r--r--. 1 root root 0 May 18 16:56 doc2_add.txt<span class="token punctuation">[</span>root@a2afac12ee70 dataVolumeContainer1<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>dc02和dc03都继承到dc01,父传子，子再传父，父与子数据互相共享，把dc01删除，dc02和dc03也不受影响。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> DOCKER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DOCKER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker镜像原理和镜像commit</title>
      <link href="/2021/05/17/jing-xiang-yuan-li-he-jing-xiang-commit/"/>
      <url>/2021/05/17/jing-xiang-yuan-li-he-jing-xiang-commit/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker镜像"><a href="#Docker镜像" class="headerlink" title="Docker镜像"></a>Docker镜像</h1><h2 id="镜像原理"><a href="#镜像原理" class="headerlink" title="镜像原理"></a>镜像原理</h2><h3 id="什么是镜像？"><a href="#什么是镜像？" class="headerlink" title="什么是镜像？"></a>什么是镜像？</h3><blockquote><p>镜像是一种轻量级的，可执行的独立软件包，用来打包软件运行环境和基于运行环境开发的软件，它包含运行某个软件所需要的所有内容，包括代码、运行时、库、环境变量和配置文件。</p><p>docker镜像实质是UnionFS(联合文件系统)。</p></blockquote><h3 id="Docker镜像加载原理"><a href="#Docker镜像加载原理" class="headerlink" title="Docker镜像加载原理"></a>Docker镜像加载原理</h3><blockquote><p>Docker的镜像实际上由一层一层的文件系统，这种层级的文件系统UnionFS</p><p>bootfs(boot file system)主要包含bootloader和kernel,bootloader主要是引导加载kernel,Linux刚启动时回加载bootf文件系统，在Docker镜像的最底层是bootfs，这一层与我们典型的Linux/Unix系统是一样的，包含boot加载器和内核。当boot加载完成之后整个内核就都在内存中，此时内存的使用权已由bootfs转交给内核，此时系统也会卸载bootfs。</p><p>rootfs(root file system),在bootfs之上，包含的就是典型的Linux系统中的/dev,/proc,/bin,/etc等标准目录和文件。rootfs就是各种不同的操作系统发行版，比如Ubuntu，Centos等等。</p></blockquote><p>平时我们安装的虚拟机的Centos都是好几g，为什么docker这里才200m</p><p>对于应该精简的OS，rootfs可以很小，只需要包括最基本的命令、工具和程序库就可以了，以为底层直接用Host的kernel，自己只需要提供rootfs就行了。因此可见对于不同 的linux发行版，bootf基本是一致的，rootfs会有差别，因此不同的发行版可以公用bootfs。</p><blockquote><p>Docker镜像都是只读的，当容器启动时，应该新的可写层被加载到镜像的顶部。这一层通常被称作“容器层”，“容器层”之下的都叫“镜像层”。</p></blockquote><h3 id="镜像分层"><a href="#镜像分层" class="headerlink" title="镜像分层"></a>镜像分层</h3><p>以tomcat为例：</p><p><a href="https://imgtu.com/i/gRTafP"><img src="https://z3.ax1x.com/2021/05/17/gRTafP.png" alt="gRTafP.png"></a></p><h2 id="Docker镜像commit操作补充"><a href="#Docker镜像commit操作补充" class="headerlink" title="Docker镜像commit操作补充"></a>Docker镜像commit操作补充</h2><p><strong>Docker commit</strong></p><p>docker commit 提交容器副本是之成为一个新的镜像。</p><p><strong>指令</strong></p><pre class="line-numbers language-bash"><code class="language-bash">$ docker commit -m<span class="token operator">=</span><span class="token string">"提交的描述信息"</span> -a<span class="token operator">=</span><span class="token string">"作者"</span> 容器ID要创建的目标镜像名：<span class="token punctuation">[</span>标签名<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>示例演示</strong></p><ul><li><p>docker hub上下载tomcat镜像到本地并成功运行</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker run -it -p 8889:8080 tomcat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>只查看容器id</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker run -itd -p 8889:8080 tomcat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://imgtu.com/i/gW9eJS"><img src="https://z3.ax1x.com/2021/05/17/gW9eJS.png" alt="gW9eJS.png"></a><br><a href="https://blog.csdn.net/qq_40891009/article/details/103898876">参考博客解决</a></p><p><a href="https://imgtu.com/i/gWFGnJ"><img src="https://z3.ax1x.com/2021/05/17/gWFGnJ.png" alt="gWFGnJ.png"></a></p><blockquote><p>ls -l，详细该目录下的目录</p></blockquote><blockquote><p>-p 主机端口：docker容器端口 第一个8080是docker对外暴露的端口，第二个8080是tomcat的默认端口</p><p>-P 随机分配端口</p><p>i 交互</p><p>t 终端</p></blockquote></li><li><p>故意删除上一步镜像生产的tomcat容器文档</p><p>操作步骤：</p><p><a href="https://imgtu.com/i/gWkWZ9"><img src="https://z3.ax1x.com/2021/05/17/gWkWZ9.png" alt="gWkWZ9.png"></a></p><p>点击导航的document：</p><p><a href="https://imgtu.com/i/gWkcMF"><img src="https://z3.ax1x.com/2021/05/17/gWkcMF.png" alt="gWkcMF.png"></a></p></li><li><p>也即当前的tomcat运行实例是一个没有文档内容的容器，以它为模板commit一个没有doc的tomcat新镜像atguigu/tomcat02</p><p>提交</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker commit -a<span class="token operator">=</span><span class="token string">"ptc"</span> -m<span class="token operator">=</span><span class="token string">"tomcat without docs"</span> 1102bbfc7dea guigu/newtomcat:1.1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://imgtu.com/i/gWEe7d"><img src="https://z3.ax1x.com/2021/05/17/gWEe7d.png" alt="gWEe7d.png"></a></p><p>run</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker run -it -p 7777:8080 guigu/newtomcat:1.1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="C:\Users\29833\AppData\Roaming\Typora\typora-user-images\image-20210517213720445.png" alt="image-20210517213720445"></p></li><li><p>启动我们的新镜像并和原来的对比。</p></li></ul><blockquote><p>1.启动guigu/newtomcat，它没有docs。</p><p>2.新启动原来的tomcat，它有docs。</p></blockquote><p>run-d:后台式启动，没加-d是前台式启动。</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker run -d -p 6666:8080 guigu/newtomcat:1.1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://imgtu.com/i/gWZO6f"><img src="https://z3.ax1x.com/2021/05/17/gWZO6f.png" alt="gWZO6f.png"></a></p><blockquote><p>服务器输入地址启动效果是一样的。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> DOCKER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DOCKER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker容器指令(下)</title>
      <link href="/2021/05/17/docker-rong-qi-zhi-ling-xia/"/>
      <url>/2021/05/17/docker-rong-qi-zhi-ling-xia/</url>
      
        <content type="html"><![CDATA[<h2 id="常用容器指令下"><a href="#常用容器指令下" class="headerlink" title="常用容器指令下"></a>常用容器指令下</h2><h3 id="启动守护式容器"><a href="#启动守护式容器" class="headerlink" title="启动守护式容器"></a>启动守护式容器</h3><pre class="line-numbers language-bash"><code class="language-bash">$ docker run -d 容器名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>只启动不进入交互式终端</p></blockquote><p>每两秒打印一次</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker run -d centos /bin/sh -c <span class="token string">"while true;do echo hello zzyy;sleep 2;done"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="查看容器日志"><a href="#查看容器日志" class="headerlink" title="查看容器日志"></a>查看容器日志</h3><pre class="line-numbers language-bash"><code class="language-bash">docker logs -f -t --tail 容器ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>-t 是加入时间戳</p><p>-f 跟随最新的日志打印</p><p>—tail 数字显示最后多少条</p></blockquote><p>每两秒打印一次</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker run -d centos /bin/sh -c <span class="token string">"while true;do echo hello zzyy;sleep 2;done"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看日志</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker logs -t  容器ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>持续查看日志</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker docker logs -t -f 容器ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看最后三条</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker docker logs -t -f -tail 3 容器ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="查看容器内运行的进程"><a href="#查看容器内运行的进程" class="headerlink" title="查看容器内运行的进程"></a>查看容器内运行的进程</h3><pre class="line-numbers language-bash"><code class="language-bash">$ docker <span class="token function">top</span> 容器ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="查看容器内部的细节"><a href="#查看容器内部的细节" class="headerlink" title="查看容器内部的细节"></a>查看容器内部的细节</h3><pre class="line-numbers language-bash"><code class="language-bash">$ docker inspect 容器ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="进入正在运行的容器并以命令行交互"><a href="#进入正在运行的容器并以命令行交互" class="headerlink" title="进入正在运行的容器并以命令行交互"></a>进入正在运行的容器并以命令行交互</h3><pre class="line-numbers language-bash"><code class="language-bash">$ docker <span class="token function">exec</span> -it 容器ID bashShell<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>示例：</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker <span class="token function">exec</span> -t 0e76db4c4106 <span class="token function">ls</span>  -l /tmp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>进入容器执行了ls -ls -l  /tmp命令，直接把结果返回到宿主机，相当于没有进入容器，远程操作。</p></blockquote><p>重新进入</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker attach 容器ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>重新进入容器，可以执行命令</p></blockquote><p>等价于</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker <span class="token function">exec</span> -it 0e76db4c4106 /bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>两者区别</p><blockquote><p>attach </p><p>直接进入容器启动命令的终端，不会启动新的进程</p><p>exec</p><p>是在容器内打开新的终端，并且苦于启动新的进程</p></blockquote><h3 id="从容器内拷贝文件到主机上"><a href="#从容器内拷贝文件到主机上" class="headerlink" title="从容器内拷贝文件到主机上"></a>从容器内拷贝文件到主机上</h3><p>示例：</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker <span class="token function">cp</span> 容器ID: /tmp/yum.log /root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>把容器里面的yum.log文件拷贝到宿主机的/root目录</p>]]></content>
      
      
      <categories>
          
          <category> DOCKER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DOCKER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker容器指令（上）</title>
      <link href="/2021/05/17/docker-rong-qi-zhi-ling/"/>
      <url>/2021/05/17/docker-rong-qi-zhi-ling/</url>
      
        <content type="html"><![CDATA[<h2 id="docker镜像相关指令"><a href="#docker镜像相关指令" class="headerlink" title="docker镜像相关指令"></a>docker镜像相关指令</h2><blockquote><p>有镜像才能创建容器，这是根本前提(下载一个centos镜像演示)</p><p>docker 里面的容器其实是一个简化版的linux环境，减去了如打印机等许多不需要的设备。</p><p>docker里面跑centos</p></blockquote><h3 id="新建并启动容器"><a href="#新建并启动容器" class="headerlink" title="新建并启动容器"></a>新建并启动容器</h3><pre class="line-numbers language-bash"><code class="language-bash">$ docker run <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">]</span> IMAGE<span class="token punctuation">[</span>CAMMAND<span class="token punctuation">]</span><span class="token punctuation">[</span>ARG<span class="token punctuation">..</span>.<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>options说明(常用)：有些事一个减号，有些是两个减号。</p><ul><li><p>–name=”容器新名字”:为容器指定一个新名字</p></li><li><p>-d：后台运行容器，并返回容器ID，也即启动守护式容器</p></li><li><p>-i：以交互模式运行容器，通常与-t同时使用</p></li><li><p>-t: 为容器重新分配一个伪输入终端，通常与-i同时使用</p></li><li><p>-P:随机端口映射</p></li><li><p>-p：指定端口映射，为以下四种格式</p><blockquote><p>ip：hostPort：containerPort</p><p>ip： containerPort</p><p>hostPost:containerPort</p><p>containerPort</p></blockquote></li></ul></blockquote><p>示例：</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker run -it 300e315adb2f^C<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash">$ docker run -it --name mycentos01 300e315adb2f^C<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="列出当前所有在运行的容器"><a href="#列出当前所有在运行的容器" class="headerlink" title="列出当前所有在运行的容器"></a>列出当前所有在运行的容器</h3><pre class="line-numbers language-bash"><code class="language-bash">$ docker <span class="token function">ps</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>OPTIONS说明(常用)：</p><ul><li>-a：列出当前所有正在运行的容器+历史上运行过的</li><li>-l：显示最近创建的容器</li><li>-n：显示最近n个创建的容器</li><li>-q：静默模式，只显示容器编号</li><li>–no-trunc：不截断输出。</li></ul></blockquote><p>查看linux的所有进程</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">ps</span> -ef<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="退出容器"><a href="#退出容器" class="headerlink" title="退出容器"></a>退出容器</h3><blockquote><p>两种方式：</p><ul><li>exit 容器停止，退出</li><li>ctrl+P+Q  容器不停止退出</li></ul></blockquote><h3 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h3><pre class="line-numbers language-bash"><code class="language-bash">$ docker start 容器ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="重启容器"><a href="#重启容器" class="headerlink" title="重启容器"></a>重启容器</h3><pre class="line-numbers language-bash"><code class="language-bash">$ docker restart 容器ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="停止容器"><a href="#停止容器" class="headerlink" title="停止容器"></a>停止容器</h3><pre class="line-numbers language-bash"><code class="language-bash">$ docker stop 容器ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="强制停止容器"><a href="#强制停止容器" class="headerlink" title="强制停止容器"></a>强制停止容器</h3><pre class="line-numbers language-bash"><code class="language-bash">$ docker <span class="token function">kill</span> 容器ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="删除已经停止的容器"><a href="#删除已经停止的容器" class="headerlink" title="删除已经停止的容器"></a>删除已经停止的容器</h3><pre class="line-numbers language-bash"><code class="language-bash">$ docker <span class="token function">rm</span> 容器ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="强制删除容器"><a href="#强制删除容器" class="headerlink" title="强制删除容器"></a>强制删除容器</h3><pre class="line-numbers language-bash"><code class="language-bash">$ docker <span class="token function">rm</span> -f 容器ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> DOCKER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DOCKER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker镜像的相关指令</title>
      <link href="/2021/05/16/docker-jing-xiang-de-xiang-guan-zhi-ling/"/>
      <url>/2021/05/16/docker-jing-xiang-de-xiang-guan-zhi-ling/</url>
      
        <content type="html"><![CDATA[<h2 id="Docker镜像相关指令"><a href="#Docker镜像相关指令" class="headerlink" title="Docker镜像相关指令"></a>Docker镜像相关指令</h2><h3 id="帮助命令"><a href="#帮助命令" class="headerlink" title="帮助命令"></a>帮助命令</h3><p>1.查看版本</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.查看相关信息</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker info<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3.帮助命令</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker --help<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>可以查看相关指令，提代盲目查询</p></blockquote><h3 id="镜像命令"><a href="#镜像命令" class="headerlink" title="镜像命令"></a>镜像命令</h3><p>关系理解</p><blockquote><p>鲸鱼背上有集装箱</p><p>蓝色的大海里面——宿主机系统window10</p><p>鲸鱼 —–docker</p><p>集装箱—–容器实例——from—–来自我们的镜像模板</p></blockquote><p><strong>1.docker images</strong></p><ul><li><p>列出本地主机上的镜像</p></li><li><p>options说明：</p><blockquote><p>-a：列出本地所有的镜像（含中间映像层）</p><p>-q：只显示镜像ID</p><p>–digests：显示镜像的摘要信息</p><p>–no-trunc：显示完整的镜像信息</p></blockquote></li></ul><pre class="line-numbers language-bash"><code class="language-bash">$ docker images 【+ options】<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>2.docker search</strong> 某个镜像的名字</p><ul><li><p>到dockerhub查询镜像</p></li><li><p>options说明：</p><blockquote><p>–no-trunc：显示完整的镜像描述；</p><p>-s：列出收藏数不小于指定值的镜像；</p><p>–automated：只列出auto_mate build类型的镜像；</p></blockquote></li></ul><p>示例：</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker search tomcat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>筛选条件：点赞数超过30</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker search -s 30 tomcat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>不省略</p><pre class="line-numbers language-bash"><code class="language-bash">x $ docker search -s 30 --no-trunc  tomcat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>3.docker pull 某个镜像的名字</strong></p><ul><li>下载镜像</li><li>docker pull 镜像名字[:TAG]</li></ul><pre class="line-numbers language-bash"><code class="language-bash">$ docker pull tomcat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>等价于</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker pull tomcat:latest<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以添加参数：示例如下，为3.2的版本</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker pull tomcat:3.2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4.docker rmi 某个镜像的名字ID,加-f是强制删除。</p><ul><li><p>删除镜像</p></li><li><p>删除单个</p></li><li><blockquote><pre class="line-numbers language-bash"><code class="language-bash">$ docker rmi -f 镜像ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote></li><li><p>删除多个</p></li></ul><blockquote><pre class="line-numbers language-bash"><code class="language-bash">$ docker rmi -f 镜像名1：TAG 镜像名2：TAG<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><ul><li>删除全部:q查询，a全部id</li></ul><blockquote><pre class="line-numbers language-bash"><code class="language-bash">$ docker rmi -f <span class="token variable"><span class="token variable">$(</span>docker images -qa<span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><p>示例：</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker rmi -f hello-world nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> DOCKER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DOCKER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker的hello-world</title>
      <link href="/2021/05/04/docker-de-hello-world/"/>
      <url>/2021/05/04/docker-de-hello-world/</url>
      
        <content type="html"><![CDATA[<h3 id="安装docker引擎"><a href="#安装docker引擎" class="headerlink" title="安装docker引擎"></a>安装docker引擎</h3><p>列出并排序您存储库中可用的版本</p><pre class="line-numbers language-bash"><code class="language-bash">$ yum list docker-ce --showduplicates <span class="token operator">|</span> <span class="token function">sort</span> -r<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后安装指定的版本的docker-ce,写法如下</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">sudo</span> yum <span class="token function">install</span> docker-ce-<span class="token operator">&lt;</span>VERSION_STRING<span class="token operator">></span> docker-ce-cli-<span class="token operator">&lt;</span>VERSION_STRING<span class="token operator">></span> containerd.io<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以上肯定存在报错，原因是没有没有docker的epel源</p><blockquote><p>root用户可以不加sudo，sudu的用处是获取最高权限。</p></blockquote><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>设置存储库</p><p>安装<code>yum-utils</code>软件包（提供<code>yum-config-manager</code> 实用程序）并设置<strong>稳定的</strong>存储库。</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">sudo</span> yum <span class="token function">install</span> -y yum-utils$ <span class="token function">sudo</span> yum-config-manager \    --add-repo \    https://download.docker.com/linux/centos/docker-ce.repo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以不指定版本直接安<em>最新版本</em>的Docker Engine和容器</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">sudo</span> yum <span class="token function">install</span> docker-ce docker-ce-cli containerd.io<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启动Docker。</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">sudo</span> systemctl start docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="一个指令安装docker"><a href="#一个指令安装docker" class="headerlink" title="一个指令安装docker"></a>一个指令安装docker</h3><blockquote><p>以上安装方法来源于官网，中规中矩。</p></blockquote><p>一键安装docker的指令如下：</p><pre class="line-numbers language-bash"><code class="language-bash">$ curl -fsSL https://get.docker.com <span class="token operator">|</span> <span class="token function">bash</span> -s docker --mirror Aliyun<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Docker的helloworld"><a href="#Docker的helloworld" class="headerlink" title="Docker的helloworld"></a>Docker的helloworld</h3><blockquote><p>实现过程：我们需要从仓库（docker hub）上抓一个helloworld镜像到，然后以这个helloworld镜像为模板，运行一个helloworld的容器实例。</p><p>1.拉镜像到本地</p><p>2.运行</p><p>3.看效果</p></blockquote><p>阿里云镜像加速配置</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">mkdir</span> -p /etc/docker<span class="token function">sudo</span> <span class="token function">tee</span> /etc/docker/daemon.json <span class="token operator">&lt;&lt;</span>-<span class="token string">'EOF'</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>  <span class="token string">"registry-mirrors"</span><span class="token keyword">:</span> <span class="token punctuation">[</span><span class="token string">"https://ruf8jhn0.mirror.aliyuncs.com"</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>EOF<span class="token function">sudo</span> systemctl daemon-reload<span class="token function">sudo</span> systemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行helloworld生成helloworld容器</p><pre class="line-numbers language-bash"><code class="language-bash">docker run hello-world<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>由于本地没有hello-world这个镜像，所以会下载一个hello-world的镜像，并在内运行。</p></blockquote><p>查看容器：</p><pre class="line-numbers language-bash"><code class="language-bash">$ docker images<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://imgtu.com/i/guNai6"><img src="https://z3.ax1x.com/2021/05/04/guNai6.png" alt="guNai6.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> DOCKER </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DOCKER </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos配网络</title>
      <link href="/2021/05/03/centos-pei-wang-luo/"/>
      <url>/2021/05/03/centos-pei-wang-luo/</url>
      
        <content type="html"><![CDATA[<h2 id="配置静态ip"><a href="#配置静态ip" class="headerlink" title="配置静态ip"></a>配置静态ip</h2><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">vi</span> /etc/sysconfig/network-scripts/ifcfg-ens33<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改为</p><pre class="line-numbers language-bash"><code class="language-bash">BOOTPROTO<span class="token operator">=</span><span class="token string">"static"</span> <span class="token comment" spellcheck="true">#dhcp改为static </span>ONBOOT<span class="token operator">=</span><span class="token string">"yes"</span> <span class="token comment" spellcheck="true">#开机启用本配置 </span>IPADDR<span class="token operator">=</span>192.168.100.10 <span class="token comment" spellcheck="true">#静态IP（网段为：192.168.100.0） </span>GATEWAY<span class="token operator">=</span>192.168.100.2 <span class="token comment" spellcheck="true">#默认网关(虚拟机网关) </span>NETMASK<span class="token operator">=</span>255.255.255.0 <span class="token comment" spellcheck="true">#子网掩码 </span>DNS1<span class="token operator">=</span>114.114.114.114 <span class="token comment" spellcheck="true">#DNS 配置</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重启网卡</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">service</span> network restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>测试</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">ping</span> www.baidu.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>虚拟机的网关要和主机一致</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VS2019，visual studio installer下载进度始终为0</title>
      <link href="/2021/04/11/vs2019-visual-studio-installer-xia-zai-jin-du-shi-zhong-wei-0/"/>
      <url>/2021/04/11/vs2019-visual-studio-installer-xia-zai-jin-du-shi-zhong-wei-0/</url>
      
        <content type="html"><![CDATA[<h3 id="VS2019，visual-studio-installer下载进度始终为0"><a href="#VS2019，visual-studio-installer下载进度始终为0" class="headerlink" title="VS2019，visual studio installer下载进度始终为0"></a>VS2019，visual studio installer下载进度始终为0</h3><h2 id="4-解决"><a href="#4-解决" class="headerlink" title="4 解决"></a>4 解决</h2><h3 id="4-1-在本机对域名进行IP解析"><a href="#4-1-在本机对域名进行IP解析" class="headerlink" title="4.1 在本机对域名进行IP解析"></a>4.1 在本机对域名进行IP解析</h3><p>在如下路径：C:\Windows\System32\drivers\etc找到hosts文件</p><p>加入如下内容</p><pre><code>23.205.239.104 aka.ms</code></pre><p>注：</p><blockquote><p>网上许多教程是改了dns就可以了，我是改了也不行，如果你也是，可以试试这个。</p><p>改dns我也说一下，分别是两个</p><p>114.114.114.114</p><p>8.8.8.8</p><p>一个是国内的，一个是谷歌的</p><p>具体可以参照<a href="https://my.oschina.net/u/4302800/blog/4733832">https://my.oschina.net/u/4302800/blog/4733832</a></p></blockquote><p>还有我修改的dns是阿里的</p><p><a href="https://imgtu.com/i/c058mV"><img src="https://z3.ax1x.com/2021/04/12/c058mV.png" alt="c058mV.png"></a></p><h3 id="产品激活"><a href="#产品激活" class="headerlink" title="产品激活"></a>产品激活</h3><p>参考：<a href="https://blog.csdn.net/cai20142932/article/details/89010514">https://blog.csdn.net/cai20142932/article/details/89010514</a></p><p><a href="https://imgtu.com/i/c0o6RH"><img src="https://z3.ax1x.com/2021/04/12/c0o6RH.png" alt="c0o6RH.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> 软件安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运算符和运算符的优先级</title>
      <link href="/2021/04/11/yun-suan-fu-he-yun-suan-fu-de-you-xiu-ji/"/>
      <url>/2021/04/11/yun-suan-fu-he-yun-suan-fu-de-you-xiu-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="C-运算符的优先级和关联性"><a href="#C-运算符的优先级和关联性" class="headerlink" title="C 运算符的优先级和关联性"></a>C 运算符的优先级和关联性</h2><table><thead><tr><th align="left">符号 1</th><th align="left">操作类型</th><th align="left">结合性</th></tr></thead><tbody><tr><td align="left"><code>[</code> <code>]</code> <code>(</code> <code>)</code> <code>.</code> <code>-&gt;</code> <code>++</code> <code>--</code>（后缀）</td><td align="left">表达式</td><td align="left">从左到右</td></tr><tr><td align="left"><strong><code>sizeof</code></strong> <code>&amp;</code> <code>*</code> <code>+</code> <code>-</code> <code>~</code> <code>!</code> <code>++</code> <code>--</code>（前缀）</td><td align="left">一元</td><td align="left">从右到左</td></tr><tr><td align="left"><em>typecasts</em></td><td align="left">一元</td><td align="left">从右到左</td></tr><tr><td align="left"><code>*</code> <code>/</code> <code>%</code></td><td align="left">乘法</td><td align="left">从左到右</td></tr><tr><td align="left"><code>+</code> <code>-</code></td><td align="left">加法</td><td align="left">从左到右</td></tr><tr><td align="left"><code>&lt;&lt;</code> <code>&gt;&gt;</code></td><td align="left">按位移动</td><td align="left">从左到右</td></tr><tr><td align="left"><code>&lt;</code> <code>&gt;</code> <code>&lt;=</code> <code>&gt;=</code></td><td align="left">关系</td><td align="left">从左到右</td></tr><tr><td align="left"><code>==</code> <code>!=</code></td><td align="left">相等</td><td align="left">从左到右</td></tr><tr><td align="left"><code>&amp;</code></td><td align="left">按位“与”</td><td align="left">从左到右</td></tr><tr><td align="left"><code>^</code></td><td align="left">按位“异或”</td><td align="left">从左到右</td></tr><tr><td align="left">`</td><td align="left">`</td><td align="left">按位“与或”</td></tr><tr><td align="left"><code>&amp;&amp;</code></td><td align="left">逻辑“与”</td><td align="left">从左到右</td></tr><tr><td align="left">`</td><td align="left"></td><td align="left">`</td></tr><tr><td align="left"><code>? :</code></td><td align="left">条件表达式</td><td align="left">从右到左</td></tr><tr><td align="left"><code>=</code> <code>*=</code> <code>/=</code> <code>%=</code> <code>+=</code> <code>-=</code> <code>&lt;&lt;=</code> <code>&gt;&gt;=</code> <code>&amp;=</code> <code>^=</code> `</td><td align="left">=`</td><td align="left">简单和复合赋值 2</td></tr><tr><td align="left"><code>,</code></td><td align="left">顺序计算</td><td align="left">从左到右</td></tr></tbody></table><p>注：</p><blockquote><p>1 运算符按优先级的降序顺序列出。 如果多个运算符出现在同一行或一个组中，则它们具有相同的优先级。</p><p>2 所有简单的和复合的赋值运算符都有相同的优先级。</p></blockquote><h2 id="优先级比较："><a href="#优先级比较：" class="headerlink" title="优先级比较："></a>优先级比较：</h2><p><a href="https://imgtu.com/i/cwtE0U"><img src="https://z3.ax1x.com/2021/04/11/cwtE0U.png" alt="cwtE0U.png"></a></p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>以下列表显示编译器如何自动绑定多个示例表达式：</p><table><thead><tr><th align="left">表达式</th><th align="left">自动绑定</th></tr></thead><tbody><tr><td align="left">`a &amp; b</td><td align="left"></td></tr><tr><td align="left">`a = b</td><td align="left"></td></tr><tr><td align="left">`q &amp;&amp; r</td><td align="left"></td></tr></tbody></table><p>在第一个表达式中，按位“与”运算符 (<code>&amp;</code>) 的优先级高于逻辑“或”运算符 (<code>||</code>) 的优先级，因此，<code>a &amp; b</code> 构成了逻辑“或”运算的第一操作数。</p><p>在第二个表达式中，逻辑“或”运算符 (<code>||</code>) 的优先级高于简单赋值运算符 (<code>=</code>) 的优先级，因此，<code>b || c</code> 在赋值中分组为右操作数。 请注意，赋给 <code>a</code> 的值为 0 或 1。</p><p>第三个表达式显示可能会生成意外结果的格式正确的表达式。 逻辑“与”运算符 (<code>&amp;&amp;</code>) 的优先级高于逻辑“或”运算符 (<code>||</code>) 的优先级，因此，将 <code>q &amp;&amp; r</code> 分组为操作数。 由于逻辑运算符确保按从左到右的顺序计算操作数，因此 <code>q &amp;&amp; r</code> 先于 <code>s--</code> 被计算。 但是，如果 <code>q &amp;&amp; r</code> 计算的结果为非零值，则不计算 <code>s--</code>，并且 <code>s</code> 不会减少。 如果 <code>s</code> 未减少会导致程序出现问题，则 <code>s--</code> 应显示为表达式的第一操作数，或者在单独的运算中应减少 <code>s</code>。</p><p>以下表达式是非法的并会在编译时生成诊断消息：</p><table><thead><tr><th align="left">非法表达式</th><th align="left">默认分组</th></tr></thead><tbody><tr><td align="left"><code>p == 0 ? p += 1: p += 2</code></td><td align="left"><code>( p == 0 ? p += 1 : p ) += 2</code></td></tr></tbody></table><p>在此表达式中，相等运算符 (<code>==</code>) 的优先级最高，因此，将 <code>p == 0</code> 分组为操作数。 条件表达式运算符 (<code>? :</code>) 具有下一个最高级别的优先级。 其第一操作数是 <code>p == 0</code>，第二操作数是 <code>p += 1</code>。 但是，条件表达式运算符的最后一个操作数被视为 <code>p</code> 而不是 <code>p += 2</code>，因为与复合赋值运算符相比，<code>p</code> 的匹配项将更紧密地绑定到条件表达式运算符。 由于 <code>+= 2</code> 没有左操作数，因此发生语法错误。 您应使用括号以防止此类错误发生并生成可读性更高的代码。 例如，可以按如下所示使用括号来更正和阐明前面的示例：</p><pre><code>( p == 0 ) ? ( p += 1 ) : ( p += 2 )</code></pre>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>与或逻辑运算符的短路运算</title>
      <link href="/2021/04/11/luo-ji-yun-suan-fu-de-duan-lu-yun-suan/"/>
      <url>/2021/04/11/luo-ji-yun-suan-fu-de-duan-lu-yun-suan/</url>
      
        <content type="html"><![CDATA[<h3 id="什么是-amp-amp-和-的短路运算？"><a href="#什么是-amp-amp-和-的短路运算？" class="headerlink" title="什么是&amp;&amp;和||的短路运算？"></a>什么是&amp;&amp;和||的短路运算？</h3><p> 1、&amp;&amp;和||属于逻辑运算符。关于&amp;&amp;和||的表达式的运算规则是这样的：</p><blockquote><p> 表达式1 || 表达式2，只要任意表达式为true，则整个表达式的运算结果为true。</p><p> 表达式1 &amp;&amp; 表达式2，只有所有表达式都为true，则整个表达式的运算结果才为true。根据集合的补集的思想，只要任意表达式为false，则整个表达式的运算结果为false。</p></blockquote><p> 2、&amp;&amp;和||的短路运算，是指如果在进行前面的表达式的运算过程，通过判断已经明确的知道整个表达式的结果，那么就不会进行后面表达式的运算判断。例如：</p><blockquote><p> 表达式1 || 表达式2 || 表达式3…|| 表达式n，如果表达式1的运算结果为true，则整个表达式的结果为true，同时不会再对后面的表达式2、表达式3到表达式n进行运算判断。如果表达式1的运算结果为false，则根据表达式2的运算结果继续判断。</p><p> 表达式1 &amp;&amp; 表达式2 &amp;&amp; 表达式3…&amp;&amp; 表达式n，如果表达式1的运算结果为false，则整个表达式的结果为false，同时不会再对后面的表达式2、表达式3到表达式n进行运算判断。如果表达式1的运算结果为true，则根据表达式2的运算结果继续判断。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>x++和++x的区别是什么？</title>
      <link href="/2021/04/11/x-he-x-de-qu-bie-shi-shi-me/"/>
      <url>/2021/04/11/x-he-x-de-qu-bie-shi-shi-me/</url>
      
        <content type="html"><![CDATA[<p>x++和++x的区别：</p><p>++x是x的值先自增1，再计算x的值。</p><p>x++是先计算x的值，再将x的值自增1。</p><p>示例：</p><pre><code>int x=10; System.out.println(x++);   System.out.println(x);</code></pre><p>第一个输出10, x++先在当前表达式中使用x的值，然后再将x的值自增1，第二个输出11，因为经过上一条指令x自增了1。</p><pre><code>int x=10; System.out.println(++x); System.out.println(x);</code></pre><p>第一个输出11, ++x 先将x的值自增1，然后再在当前表达式中使用x的值，第二个也是输出11，经过上一条指令x自增了1。</p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#数据类型</title>
      <link href="/2021/04/11/shu-ju-lei-xing/"/>
      <url>/2021/04/11/shu-ju-lei-xing/</url>
      
        <content type="html"><![CDATA[<h3 id="64位"><a href="#64位" class="headerlink" title="64位"></a>64位</h3><p>win中64位：64位表示一种数据类型，即范围位64位的整数。</p><blockquote><p>64位整数（英语：64-bit integer）是计算机科学中的一种<a href="https://zh.wikipedia.org/wiki/%E6%95%B8%E6%93%9A%E9%A1%9E%E5%9E%8B">数据类型</a>，即是<a href="https://zh.wikipedia.org/wiki/Pascal_(%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80)">Pascal</a>的<code>int64</code>、<a href="https://zh.wikipedia.org/wiki/C%E8%AF%AD%E8%A8%80">C</a>的<code>long</code>、以及<a href="https://zh.wikipedia.org/wiki/C%2B%2B">C++</a>的<code>long long</code>类型，由64个<a href="https://zh.wikipedia.org/wiki/%E6%AF%94%E7%89%B9">比特</a>组成，能够表达-9223372036854775808到9223372036854775807之间（即<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/5701b4e21bb1db4b85ca81dccf5ab595ab53e7e1" alt="{\displaystyle -2^{63}}">到<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/aa62b8610964c71f742a81ea0cb1e4da5aba91bb" alt="{\displaystyle 2^{63}-1}">之间）的任意整数。和其他整数类型一样，最高位的比特表示正负，最高位为1时该数为负数，最高位为0时该数为正数（或0）。</p></blockquote><p>注：</p><blockquote><p>以上范围为我们熟知的十进制表示，而计算机只能识别二进制数。</p></blockquote><h3 id="计算机中的存储单位，为存数据和指令。"><a href="#计算机中的存储单位，为存数据和指令。" class="headerlink" title="计算机中的存储单位，为存数据和指令。"></a>计算机中的存储单位，为存数据和指令。</h3><p>bit(“比特”或“位)，word(字)，byte(“比特”或”字节“)，kb(千比特),mb(兆),gb(吉字节）</p><p>单位之间的相关性：</p><blockquote><p>1 Byte = 8 Bits</p><p>1 KB = 1024 Bytes</p><p>1 MB = 1024 KB</p><p>1 GB = 1024 MB</p></blockquote><p>注</p><blockquote><p>这要从bit和byte说起：bit和byte同译为”比特”，都是数据量度单位，bit=“比特”或“位”。<br>byte=字节即1byte=8bits,两者换算是1：8的关系。<br>mbps=mega bits per second(兆位/秒)是速率单位，所以正确的说法应该是说usb2.0的传输速度是480兆位/秒,即480mbps。<br>mb=mega bytes(兆比、兆字节)是量单位，1mb/s（兆字节/秒）=8mbps（兆位/秒）。</p><p>我们所说的硬盘容量是40gb、80gb、100gb，这里的b指是的byte也就是“字节”。<br>1 kb = 1024 bytes =2^10 bytes<br>1 mb = 1024 kb = 2^20 bytes<br>1 gb = 1024 mb = 2^30 bytes</p><p>比如以前所谓的56kb的modem换算过来56kbps除以8也就是7kbyte，所以真正从网上下载文件存在硬盘上的速度也就是每秒7kbyte。<br>也就是说与传输速度有关的b一般指的是bit。<br>与容量有关的b一般指的是byte。</p></blockquote><p><a href="https://imgtu.com/i/cwpJ2V"><img src="https://z3.ax1x.com/2021/04/11/cwpJ2V.png" alt="cwpJ2V.png"></a></p><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><h4 id="整型数值类型"><a href="#整型数值类型" class="headerlink" title="整型数值类型"></a>整型数值类型</h4><p>C# 支持以下预定义整型类型：</p><table><thead><tr><th align="left">C# 类型/关键字</th><th align="left">范围</th><th align="left">大小</th><th align="left">.NET 类型</th></tr></thead><tbody><tr><td align="left"><code>sbyte</code></td><td align="left">-128 到 127</td><td align="left">8 位带符号整数</td><td align="left"><a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.sbyte">System.SByte</a></td></tr><tr><td align="left"><code>byte</code></td><td align="left">0 到 255</td><td align="left">无符号的 8 位整数</td><td align="left"><a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.byte">System.Byte</a></td></tr><tr><td align="left"><code>short</code></td><td align="left">-32,768 到 32,767</td><td align="left">有符号 16 位整数</td><td align="left"><a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.int16">System.Int16</a></td></tr><tr><td align="left"><code>ushort</code></td><td align="left">0 到 65,535</td><td align="left">无符号 16 位整数</td><td align="left"><a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.uint16">System.UInt16</a></td></tr><tr><td align="left"><code>int</code></td><td align="left">-2,147,483,648 到 2,147,483,647</td><td align="left">带符号的 32 位整数</td><td align="left"><a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.int32">System.Int32</a></td></tr><tr><td align="left"><code>uint</code></td><td align="left">0 到 4,294,967,295</td><td align="left">无符号的 32 位整数</td><td align="left"><a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.uint32">System.UInt32</a></td></tr><tr><td align="left"><code>long</code></td><td align="left">-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807</td><td align="left">64 位带符号整数</td><td align="left"><a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.int64">System.Int64</a></td></tr><tr><td align="left"><code>ulong</code></td><td align="left">0 到 18,446,744,073,709,551,615</td><td align="left">无符号 64 位整数</td><td align="left"><a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.uint64">System.UInt64</a></td></tr><tr><td align="left"><code>nint</code></td><td align="left">取决于平台</td><td align="left">带符号的 32 位或 64 位整数</td><td align="left"><a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.intptr">System.IntPtr</a></td></tr><tr><td align="left"><code>nuint</code></td><td align="left">取决于平台</td><td align="left">无符号的 32 位或 64 位整数</td><td align="left"><a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.uintptr">System.UIntPtr</a></td></tr></tbody></table><p>在除最后两行之外的所有表行中，最左侧列中的每个 C# 类型关键字都是相应 .NET 类型的别名。 关键字和 .NET 类型名称是可互换的。 例如，以下声明声明了相同类型的变量：</p><p>C#复制</p><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>Int32 b <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>表的最后两行中的 <code>nint</code> 和 <code>nuint</code> 类型是本机大小的整数。 在内部它们由所指示的 .NET 类型表示，但在任意情况下关键字和 .NET 类型都是不可互换的。 编译器为 <code>nint</code> 和 <code>nuint</code> 的整数类型提供操作和转换，而不为指针类型 <code>System.IntPtr</code> 和 <code>System.UIntPtr</code> 提供。 有关详细信息，请参阅 <a href="https://docs.microsoft.com/zh-cn/dotnet/csharp/language-reference/builtin-types/nint-nuint"><code>nint</code> 和 <code>nuint</code> 类型</a>。</p><h4 id="浮点数值类型（C-引用）"><a href="#浮点数值类型（C-引用）" class="headerlink" title="浮点数值类型（C# 引用）"></a>浮点数值类型（C# 引用）</h4><p>C# 支持以下预定义浮点类型：</p><table><thead><tr><th align="left">C# 类型/关键字</th><th align="left">大致范围</th><th align="left">精度</th><th align="left">大小</th><th align="left">.NET 类型</th></tr></thead><tbody><tr><td align="left"><code>float</code></td><td align="left">±1.5 x 10−45 至 ±3.4 x 1038</td><td align="left">大约 6-9 位数字</td><td align="left">4 个字节</td><td align="left"><a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.single">System.Single</a></td></tr><tr><td align="left"><code>double</code></td><td align="left">±5.0 × 10−324 到 ±1.7 × 10308</td><td align="left">大约 15-17 位数字</td><td align="left">8 个字节</td><td align="left"><a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.double">System.Double</a></td></tr><tr><td align="left"><code>decimal</code></td><td align="left">±1.0 x 10-28 至 ±7.9228 x 1028</td><td align="left">28-29 位</td><td align="left">16 个字节</td><td align="left"><a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.decimal">System.Decimal</a></td></tr></tbody></table><p>在上表中，最左侧列中的每个 C# 类型关键字都是相应 .NET 类型的别名。 它们是可互换的。 例如，以下声明声明了相同类型的变量：</p><p>C#复制</p><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token keyword">double</span> a <span class="token operator">=</span> <span class="token number">12.3</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>Double b <span class="token operator">=</span> <span class="token number">12.3</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>每个浮点类型的默认值都为零，<code>0</code>。 每个浮点类型都有 <code>MinValue</code> 和 <code>MaxValue</code> 常量，提供该类型的最小值和最大有限值。 <code>float</code> and <code>double</code> 类型还提供可表示非数字和无穷大值的常量。 例如，<code>double</code> 类型提供以下常量：<a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.double.nan">Double.NaN</a>、<a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.double.negativeinfinity">Double.NegativeInfinity</a> 和 <a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.double.positiveinfinity">Double.PositiveInfinity</a>。</p><p>注意：</p><blockquote><p>String不是基本的数据类型,只是引用类型。</p></blockquote><h1 id="枚举类型（C-参考）"><a href="#枚举类型（C-参考）" class="headerlink" title="枚举类型（C# 参考）"></a>枚举类型（C# 参考）</h1><ul><li>2019/12/13</li><li><ul><li><a href="https://github.com/BillWagner"><img src="https://github.com/BillWagner.png?size=32" alt="img"></a></li><li><a href="https://github.com/olprod"><img src="https://github.com/olprod.png?size=32" alt="img"></a></li></ul></li></ul><p>枚举类型 是由基础<a href="https://docs.microsoft.com/zh-cn/dotnet/csharp/language-reference/builtin-types/value-types">整型数值类型</a>的一组命名常量定义的<a href="https://docs.microsoft.com/zh-cn/dotnet/csharp/language-reference/builtin-types/integral-numeric-types">值类型</a>。 若要定义枚举类型，请使用 <code>enum</code> 关键字并指定枚举成员 的名称：</p><p>C#复制</p><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token keyword">enum</span> Season<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    Spring<span class="token punctuation">,</span>    Summer<span class="token punctuation">,</span>    Autumn<span class="token punctuation">,</span>    Winter<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>默认情况下，枚举成员的关联常数值为类型 <code>int</code>；它们从零开始，并按定义文本顺序递增 1。 可以显式指定任何其他<a href="https://docs.microsoft.com/zh-cn/dotnet/csharp/language-reference/builtin-types/integral-numeric-types">整数数值</a>类型作为枚举类型的基础类型。 还可以显式指定关联的常数值，如下面的示例所示：</p><p>C#复制</p><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token keyword">enum</span> ErrorCode <span class="token punctuation">:</span> <span class="token keyword">ushort</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    None <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>    Unknown <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>    ConnectionLost <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">,</span>    OutlierReading <span class="token operator">=</span> <span class="token number">200</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>不能在枚举类型的定义内定义方法。 若要向枚举类型添加功能，请创建<a href="https://docs.microsoft.com/zh-cn/dotnet/csharp/programming-guide/classes-and-structs/extension-methods">扩展方法</a>。</p><p>枚举类型 <code>E</code> 的默认值是由表达式 <code>(E)0</code> 生成的值，即使零没有相应的枚举成员也是如此。</p><p>可以使用枚举类型，通过一组互斥值或选项组合来表示选项。 若要表示选项组合，请将枚举类型定义为位标志。</p><h2 id="作为位标志的枚举类型"><a href="#作为位标志的枚举类型" class="headerlink" title="作为位标志的枚举类型"></a>作为位标志的枚举类型</h2><p>如果希望枚举类型表示选项组合，请为这些选项定义枚举成员，以便单个选项成为位字段。 也就是说，这些枚举成员的关联值应该是 2 的幂。 然后，可以使用<a href="https://docs.microsoft.com/zh-cn/dotnet/csharp/language-reference/operators/bitwise-and-shift-operators#enumeration-logical-operators">按位逻辑运算符<code>|</code>或 <code>&amp;</code></a> 分别合并选项或交叉组合选项。 若要指示枚举类型声明位字段，请对其应用 <a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.flagsattribute">Flags</a> 属性。 如下面的示例所示，还可以在枚举类型的定义中包含一些典型组合。</p><p>C#复制</p><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token punctuation">[</span>Flags<span class="token punctuation">]</span><span class="token keyword">public</span> <span class="token keyword">enum</span> Days<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    None      <span class="token operator">=</span> 0b_0000_0000<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 0</span>    Monday    <span class="token operator">=</span> 0b_0000_0001<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 1</span>    Tuesday   <span class="token operator">=</span> 0b_0000_0010<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 2</span>    Wednesday <span class="token operator">=</span> 0b_0000_0100<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 4</span>    Thursday  <span class="token operator">=</span> 0b_0000_1000<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 8</span>    Friday    <span class="token operator">=</span> 0b_0001_0000<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 16</span>    Saturday  <span class="token operator">=</span> 0b_0010_0000<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 32</span>    Sunday    <span class="token operator">=</span> 0b_0100_0000<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 64</span>    Weekend   <span class="token operator">=</span> Saturday <span class="token operator">|</span> Sunday<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FlagsEnumExample</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        Days meetingDays <span class="token operator">=</span> Days<span class="token punctuation">.</span>Monday <span class="token operator">|</span> Days<span class="token punctuation">.</span>Wednesday <span class="token operator">|</span> Days<span class="token punctuation">.</span>Friday<span class="token punctuation">;</span>        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>meetingDays<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// Output:</span>        <span class="token comment" spellcheck="true">// Monday, Wednesday, Friday</span>        Days workingFromHomeDays <span class="token operator">=</span> Days<span class="token punctuation">.</span>Thursday <span class="token operator">|</span> Days<span class="token punctuation">.</span>Friday<span class="token punctuation">;</span>        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>$<span class="token string">"Join a meeting by phone on &amp;#123;meetingDays &amp; workingFromHomeDays&amp;#125;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// Output:</span>        <span class="token comment" spellcheck="true">// Join a meeting by phone on Friday</span>        <span class="token keyword">bool</span> isMeetingOnTuesday <span class="token operator">=</span> <span class="token punctuation">(</span>meetingDays <span class="token operator">&amp;</span> Days<span class="token punctuation">.</span>Tuesday<span class="token punctuation">)</span> <span class="token operator">==</span> Days<span class="token punctuation">.</span>Tuesday<span class="token punctuation">;</span>        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>$<span class="token string">"Is there a meeting on Tuesday: &amp;#123;isMeetingOnTuesday&amp;#125;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// Output:</span>        <span class="token comment" spellcheck="true">// Is there a meeting on Tuesday: False</span>        <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">(</span>Days<span class="token punctuation">)</span><span class="token number">37</span><span class="token punctuation">;</span>        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// Output:</span>        <span class="token comment" spellcheck="true">// Monday, Wednesday, Saturday</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>有关详细信息和示例，请参阅 <a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.flagsattribute">System.FlagsAttribute</a> API 参考页和 <a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.enum">System.Enum</a> API 参考页的<a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.enum#non-exclusive-members-and-the-flags-attribute">非独占成员和 Flags 属性</a>部分。</p><h2 id="System-Enum-类型和枚举约束"><a href="#System-Enum-类型和枚举约束" class="headerlink" title="System.Enum 类型和枚举约束"></a>System.Enum 类型和枚举约束</h2><p><a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.enum">System.Enum</a> 类型是所有枚举类型的抽象基类。 它提供多种方法来获取有关枚举类型及其值的信息。 有关更多信息和示例，请参阅 <a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.enum">System.Enum</a> API 参考页。</p><p>从 C# 7.3 开始，你可以在基类约束中使用 <code>System.Enum</code>（称为<a href="https://docs.microsoft.com/zh-cn/dotnet/csharp/programming-guide/generics/constraints-on-type-parameters#enum-constraints">枚举约束</a>），以指定类型参数为枚举类型。 所有枚举类型也都满足 <code>struct</code> 约束，此约束用于指定类型参数为不可为 null 的值类型。</p><h2 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h2><p>对于任何枚举类型，枚举类型与其基础整型类型之间存在显式转换。 如果将枚举值<a href="https://docs.microsoft.com/zh-cn/dotnet/csharp/language-reference/operators/type-testing-and-cast#cast-expression">转换</a>为其基础类型，则结果为枚举成员的关联整数值。</p><p>C#复制</p><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token keyword">public</span> <span class="token keyword">enum</span> Season<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    Spring<span class="token punctuation">,</span>    Summer<span class="token punctuation">,</span>    Autumn<span class="token punctuation">,</span>    Winter<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EnumConversionExample</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        Season a <span class="token operator">=</span> Season<span class="token punctuation">.</span>Autumn<span class="token punctuation">;</span>        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>$<span class="token string">"Integral value of &amp;#123;a&amp;#125; is &amp;#123;(int)a&amp;#125;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// output: Integral value of Autumn is 2</span>        <span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token punctuation">(</span>Season<span class="token punctuation">)</span><span class="token number">1</span><span class="token punctuation">;</span>        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// output: Summer</span>        <span class="token keyword">var</span> c <span class="token operator">=</span> <span class="token punctuation">(</span>Season<span class="token punctuation">)</span><span class="token number">4</span><span class="token punctuation">;</span>        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// output: 4</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用 <a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.enum.isdefined">Enum.IsDefined</a> 方法来确定枚举类型是否包含具有特定关联值的枚举成员。</p><p>对于任何枚举类型，都存在分别与 <a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.enum">System.Enum</a> 类型的<a href="https://docs.microsoft.com/zh-cn/dotnet/csharp/programming-guide/types/boxing-and-unboxing">装箱和取消装箱</a>相互转换。</p><h3 id="变量的声明和初始化"><a href="#变量的声明和初始化" class="headerlink" title="变量的声明和初始化"></a>变量的声明和初始化</h3>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>注册表</title>
      <link href="/2021/04/10/zhu-ce-biao/"/>
      <url>/2021/04/10/zhu-ce-biao/</url>
      
        <content type="html"><![CDATA[<h3 id="删除注册表"><a href="#删除注册表" class="headerlink" title="删除注册表"></a>删除注册表</h3><ol><li><p>ｗｉｎ＋ｒ输入regedit，ｅｎｔｅｒ进入。</p></li><li><p>找到如下目录：</p><p><a href="https://imgtu.com/i/ca0nAS"><img src="https://z3.ax1x.com/2021/04/10/ca0nAS.png" alt="ca0nAS.png"></a></p></li><li><p>找对对应的软件的注册表，删除</p></li></ol><h3 id="为鼠标右键添加快捷键"><a href="#为鼠标右键添加快捷键" class="headerlink" title="为鼠标右键添加快捷键"></a>为鼠标右键添加快捷键</h3><ol><li>百度搜索“为xx添加都右键快捷键”。</li><li>建立对应的reg文件，据查询代码输入，并修改对应的路径。</li><li>运行查看即可。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 计算机基础操作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机基础操作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#标识符的命名规则</title>
      <link href="/2021/04/08/c-biao-shi-fu-de-ming-ming-gui-ze/"/>
      <url>/2021/04/08/c-biao-shi-fu-de-ming-ming-gui-ze/</url>
      
        <content type="html"><![CDATA[<h3 id="程序中的变量名、常量名、类名、方法名，都叫做标识符。"><a href="#程序中的变量名、常量名、类名、方法名，都叫做标识符。" class="headerlink" title="程序中的变量名、常量名、类名、方法名，都叫做标识符。"></a>程序中的变量名、常量名、类名、方法名，都叫做标识符。</h3><blockquote><ol><li>标识符只能由英文字母、数字和下划线组成，不能包含空格和其他字符。</li><li>变量名不能用数字开头。</li><li>不能用关键字当变量名。</li></ol></blockquote><h3 id="此外"><a href="#此外" class="headerlink" title="此外"></a>此外</h3><ol><li><p><strong>标识符首字母可由 （a-z,A-Z, _ ,@），后续字符可由（a-z,A-Z, _ , 0-9）组成</strong></p><ul><li>数字不能放在首位</li><li>字母 下划线 可以用在任何位置</li><li>@字符只能存在标识符首位</li></ul></li><li><p><strong>标识符首字母可由 （a-z,A-Z, _ ,@），后续字符可由（a-z,A-Z, _ , 0-9）组成</strong></p><blockquote><pre class="line-numbers language-c#"><code class="language-c#"> //正确命名 _age @name demo_01 //错误命名 demo_@01          //后续字符可由（a-z,A-Z, _ , 0-9），@字符只能存在标识符首位 012test_name      //数字放在首位 abc.com        //  后续字符可由（a-z,A-Z, _ , 0-9）组成<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote></li><li><p> <strong>不能使用关键字命名，关键字是对编译器具有特殊意义的预定义保留标识符。它们不能在程序中用作标识符，除非它们有一个 @ 前缀。例如，@while 是一个合法的标识符，而 while 不是合法的标识符，因为它是关键字，关键字还有很多，但是不用死记硬背。</strong></p></li></ol><p><a href="https://imgtu.com/i/cJ9p0P"><img src="https://z3.ax1x.com/2021/04/08/cJ9p0P.png" alt="cJ9p0P.png"></a></p><h3 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h3><p><a href="https://imgtu.com/i/cYN8Nq"><img src="https://z3.ax1x.com/2021/04/08/cYN8Nq.png" alt="cYN8Nq.png"></a></p><p>标识符是不允许-中划线的，英文不能判别是表达式还是标识符。</p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#的helloworld</title>
      <link href="/2021/04/06/c-de-helloworld/"/>
      <url>/2021/04/06/c-de-helloworld/</url>
      
        <content type="html"><![CDATA[<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><blockquote><p>VS studio 2019</p></blockquote><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><blockquote><pre class="line-numbers language-c#"><code class="language-c#">using System;using System.Collections.Generic;using System.Linq;using System.Text;using System.Threading.Tasks;namespace helloworld&#123;    class Program    &#123;        static void Main(string[] args)        &#123;            Console.WriteLine("hello world");            Console.ReadKey();        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><blockquote><p><a href="https://imgtu.com/i/c3KmHH"><img src="https://z3.ax1x.com/2021/04/06/c3KmHH.png" alt="c3KmHH.png"></a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐电影</title>
      <link href="/2021/04/06/tui-jian-dian-ying/"/>
      <url>/2021/04/06/tui-jian-dian-ying/</url>
      
        <content type="html"><![CDATA[<h2 id="调音师"><a href="#调音师" class="headerlink" title="调音师"></a>调音师</h2><p><a href="https://imgtu.com/i/hrszJ1"><img src="https://z3.ax1x.com/2021/09/02/hrszJ1.png" alt="hrszJ1.png"></a></p><p>双目失明的钢琴家阿卡什（阿尤斯曼·库拉纳 Ayushmann Khurrana 饰）为了参加国际大赛，平日里通过私人授课赚取经费。事实上他的眼睛完全正常，只不过希望通过这种方式感受不同的生活。因为一场意外，阿卡什结识了美丽的姑娘苏菲（拉迪卡·艾普特 Radhika Apte 饰）。凭借出色的演奏技巧，阿卡什在苏菲父亲经营的西餐馆谋得兼职。他的演奏不仅令食客们倾倒，更虏获了苏菲的心。某天，阿卡什接受过气的影星普拉默（安尔·德霍万 Anil Dhawan 饰）的邀请，登门为对方的妻子西米（塔布 Tabu 饰）演奏庆生，谁知却亲眼目睹了倒在血泊中的普拉默的尸体。惊慌失措的阿卡什假装镇定，虽然暂时骗过了西米及其情夫，但是他的秘密还是慢慢被人戳穿……</p><h2 id="港囧"><a href="#港囧" class="headerlink" title="港囧"></a>港囧</h2><p><a href="https://imgtu.com/i/hpineJ"><img src="https://z3.ax1x.com/2021/08/22/hpineJ.jpg" alt="hpineJ.jpg"></a></p><p>众人来到蔡菠被绑架地点后发现蔡菠被带到一块吊着的强化玻璃上，凶手表示他们所擒的另一个警察根本不是同伙，并且趁机好好羞辱一顿，结果新警察挣脱拉拉的束缚并拿拉拉手上的枪准备攻击老警察时反遭老警察打中倒地，甚至开枪打断其中1条吊着强化玻璃的铁链，蔡菠因此失平衡并快要掉下之际徐来跟杨伊一同跑到玻璃上让玻璃回复平衡。拉拉亦迫于无奈就把摄录机交给老警察，但反被老警察要求一同跑到玻璃上，就在老警察准备将徐来他们杀死时新警察突然起来反抗，两人纠缠期间更意外打断另一条铁链，最后新警察成功拘捕老警察（因为他将计就计穿了避弹衣逃过一死）。而徐来在玻璃上再次向蔡菠表示心迹以及这一整天下来得到的领悟，并让拉拉及杨伊返回安全地方后表示如果蔡菠会掉下去的话他亦会与她同死，徐来两人趁玻璃爆裂之际抓住拉拉的摄录机绳带并悬吊着，但结果两人还是掉了下去，庆幸的是这时警察的增援已经赶到并已经打开了救生气垫接住他们而获救。</p><p>终于，拉拉的处女作纪录片终于完成了，并在结尾表示蔡菠在这次行程期间终于成功怀上徐来的孩子，拉拉凭借这纪录片而获得<a href="https://zh.wikipedia.org/wiki/%E9%A6%99%E6%B8%AF%E9%9B%BB%E5%BD%B1%E9%87%91%E5%83%8F%E7%8D%8E">香港电影金像奖</a>的<a href="https://zh.wikipedia.org/w/index.php?title=%E6%96%B0%E6%99%89%E5%B0%8E%E6%BC%94&action=edit&redlink=1">新晋导演</a>奖，最后拉拉遭徐来戴上当时的铁头人头盔并爆破作结。</p><blockquote><p>为结尾的《情人》点赞</p></blockquote><h1 id="古惑仔系列"><a href="#古惑仔系列" class="headerlink" title="古惑仔系列"></a>古惑仔系列</h1><p><a href="https://imgtu.com/i/f6bD29"><img src="https://z3.ax1x.com/2021/08/14/f6bD29.jpg" alt="f6bD29.jpg"></a></p><p><strong>古惑仔电影系列</strong>（英语：Young and Dangerous Film Series），又称为<strong>古惑仔电影宇宙</strong>（英语：Young and Dangerous Cinematic Universe），是改编自<a href="https://zh.wikipedia.org/wiki/%E9%A6%99%E6%B8%AF%E6%BC%AB%E7%95%AB">香港漫画家</a><a href="https://zh.wikipedia.org/wiki/%E7%89%9B%E4%BD%AC">牛佬</a>同名作品《<a href="https://zh.wikipedia.org/wiki/%E5%8F%A4%E6%83%91%E4%BB%94">古惑仔</a>》、其下江湖漫画作品，以及由部分角色人物外传共用设定的<a href="https://zh.wikipedia.org/wiki/%E9%BB%91%E5%B9%AB%E9%9B%BB%E5%BD%B1">黑帮电影</a>系列。</p><h1 id="浴血黑帮"><a href="#浴血黑帮" class="headerlink" title="浴血黑帮"></a>浴血黑帮</h1><p><a href="https://imgtu.com/i/f6beDP"><img src="https://z3.ax1x.com/2021/08/14/f6beDP.jpg" alt="f6beDP.jpg"></a></p><p>《浴血黑帮》讲述了战后伯明翰地区传奇黑帮家族Peaky Blinders的故事。时间要追溯到1919年，家族成员有一大嗜好，就是将剃刀刀片缝进他们帽子的帽檐之间，这也是“剃刀党”的名称由来。斯里安·墨菲将饰演一名残酷的黑帮份子Tommy Shelby ，是家族兄弟的领袖，嗜血无情。在那个时代，退伍军人、革命者和罪犯，都在社会底层挣扎生存。而当贝尔法斯特的警方负责人开始介入时，Tommy和他的黑帮势力制造出的恐怖统治开始了倾斜。</p><h1 id="我的姐姐"><a href="#我的姐姐" class="headerlink" title="我的姐姐"></a>我的姐姐</h1><p><a href="https://imgtu.com/i/c1mXkt"><img src="https://z3.ax1x.com/2021/04/06/c1mXkt.png" alt="c1mXkt.png"></a></p><p>影片围绕失去父母的姐姐在面对追求个人独立生活还是抚养弟弟的问题上展开了一段细腻感人的亲情故事。</p><blockquote><p>个人观影体验：看完电影，感触很深，因为我也有个姐姐，姐姐往往充当着第二个“妈妈”的角色。</p></blockquote><h1 id="哥斯拉大战金刚"><a href="#哥斯拉大战金刚" class="headerlink" title="哥斯拉大战金刚:"></a>哥斯拉大战金刚:</h1><p><a href="https://imgtu.com/i/ct1FCF"><img src="https://z3.ax1x.com/2021/04/09/ct1FCF.png" alt="ct1FCF.png"></a></p><p>这两位宛如神衹一般强大的对手于一场壮观的战争中相遇，彼时世界命运正悬于一线。为了找到真正的家园，金刚与他的保护者们踏上了一次艰难的旅程。与他们一道前行的还有一个年轻的孤儿女孩——吉雅，这个女孩与金刚之间存在着一种独特而强大的紧密联系。但意想不到的是，他们在前行的航道上与愤怒的哥斯拉狭路相逢，也由此在全球引起了一系列破坏。一股无形的力量造成了这两只巨兽之间的巨大冲突，深藏在地心深处的奥秘也由此揭开。</p><blockquote><p>个人观影体验：特效不错，看完，感觉很震撼。华纳耗巨资打造，可谓良心之作。几乎没有剧情，怪兽打斗场面居多。华纳怪兽宇宙终结篇，且看且珍惜。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推荐# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐图书</title>
      <link href="/2021/04/06/tui-jian-tu-shu/"/>
      <url>/2021/04/06/tui-jian-tu-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="史蒂夫·乔布斯传"><a href="#史蒂夫·乔布斯传" class="headerlink" title="史蒂夫·乔布斯传"></a>史蒂夫·乔布斯传</h1><p><a href="https://imgtu.com/i/c1Vbmn"><img src="https://z3.ax1x.com/2021/04/06/c1Vbmn.jpg" alt="c1Vbmn.jpg"></a></p><blockquote><p>这本乔布斯唯一授权的官方传记，在2011年上半年由美国出版商西蒙舒斯特对外发布出版消息以来，备受全球媒体和业界瞩目，这本书的全球出版日期最终确定为2011年11月21日，简体中文版也将同步上市。</p><p>两年多的时间，与乔布斯40多次的面对面倾谈，以及与乔布斯一百多个家庭成员、 朋友、竞争对手、同事的不受限的采访，造就了这本独家传记。</p><p>尽管乔布斯给予本书的采访和创作全面的配合，但他对内容从不干涉，也不要求出版前阅读全文的权利。对于任何资源和关联的人，他都不设限，甚至鼓励他所熟知的人袒露出自己的心声。</p><p>“我已经做了很多并不值得自豪的事情，比如23岁时就让我的女友怀了孕，以及我对这件事的处理方式”，他说， “对我而言，没有什么不可以对外袒露的。”</p><p>谈及和他共过事的人以及竞争对手，他直言不讳，甚至尖酸刻薄。他的激情、精力、欲望、完美主义、艺术修养、残暴还有对掌控权…</p></blockquote><h2 id="沉默的病人"><a href="#沉默的病人" class="headerlink" title="沉默的病人"></a>沉默的病人</h2><p><a href="https://imgtu.com/i/frfERS"><img src="https://z3.ax1x.com/2021/08/13/frfERS.jpg" alt="frfERS.jpg"></a></p><blockquote><p>多少看似完美的夫妻，都在等待杀死对方的契机。</p><p>——————</p><p>杀死丈夫时，艾丽西亚33岁。</p><p>她往丈夫脸上连开五枪，从此不再说一个字。她被精神诊所收容，成为臭名昭著的“沉默的病人”，唯一留给外界的，只有一副诡异的自画像。</p><p>我，心理治疗师西 奥，被她的故事所吸引，希望能通过心理 治疗，帮助她走出沉默的死局。我确信，只有她能述说真相，只有我能使她开口。</p><p>哪怕艾丽西亚的沉默背后，是远超我想象的黑暗深渊，正引诱我步步深入，直到万劫不复……</p><p>当她真的开始述说真相，我又真的有胆量倾听吗？</p><p>——————</p><p>多少看似完美的夫妻，都在等待杀死对方的契机。</p><p>一起残酷的谋杀，一则诡异的希腊神话；一段漫长的沉默，一场致命的心理治疗！</p></blockquote><h2 id="解忧杂货店"><a href="#解忧杂货店" class="headerlink" title="解忧杂货店"></a>解忧杂货店</h2><p><a href="https://imgtu.com/i/frhdXQ"><img src="https://z3.ax1x.com/2021/08/13/frhdXQ.jpg" alt="frhdXQ.jpg"></a></p><blockquote><ul><li>如果有一个地方，可以解决我们所有的烦恼……</li></ul><p>这里不只卖日常生活用品，还提供消烦解忧的咨询。困惑不安的你，纠结不已的你，欢迎来信讨论心中的问题 。</p><p>静僻的街道旁，伫立着一家解忧杂货店。只要在晚上把写了烦恼的信丢进铁卷门上的投递口，隔天就可以在店后面的牛奶箱里拿到回信解答。 当他们纷纷写信到杂货店，不可思议的事也接二连三发生，而那些一瞬间的交会，又将如何演变成一生一世的救赎？</p><ul><li>跨越三十年时空，杂货店恒常散放着温暖奇异的光芒…</li></ul></blockquote><h2 id="白夜行"><a href="#白夜行" class="headerlink" title="白夜行"></a>白夜行</h2><p><a href="https://imgtu.com/i/4aMjGd"><img src="https://z3.ax1x.com/2021/09/22/4aMjGd.jpg" alt="4aMjGd.jpg"></a></p><p>​    1973年10月，大阪一栋荒废大楼发生命案，52岁的当铺老板桐原洋介被人以利器杀死。一个月后，两位主要嫌疑人寺崎忠夫因车祸丧生，西本文代因煤气中毒意外死亡，案件不了了之。桐原洋介之子桐原亮司和西本文代之女西本雪穗渐渐长大，然而他们身边的人却接连直接间接地遭遇不幸。当时负责此案的警官笹垣润三追查他心目中的嫌疑人十九年之久，因见证诸般不幸而愈加执著，最终揭开了命案下面掩盖的罪恶——“生活犹如行走在白夜中”，以及“凭借著这份光把黑夜当白天”的两人，彼此互利共生的关系。</p><p>原著中未曾描述男女主角间的任何互动。读者仅能以局外人的身份在不同故事中交叉比对以得知两人可能的连结与真实作为。</p>]]></content>
      
      
      <categories>
          
          <category> 推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>原码、反码、补码与溢出</title>
      <link href="/2021/03/22/yuan-ma-fan-ma-bu-ma-yu-yi-chu/"/>
      <url>/2021/03/22/yuan-ma-fan-ma-bu-ma-yu-yi-chu/</url>
      
        <content type="html"><![CDATA[<h3 id="原码"><a href="#原码" class="headerlink" title="原码"></a>原码</h3><blockquote><p><strong><em>原码：\</em></strong>是最简单的机器数表示法。用最高位表示符号位，‘1’表示负号，‘0’表示正号。其他位存放该数的二进制的绝对值</p></blockquote><h3 id="反码"><a href="#反码" class="headerlink" title="反码"></a>反码</h3><blockquote><p><strong>反码：</strong>正数的反码还是等于原码。负数的反码就是他的原码除符号位外，按位取反。</p></blockquote><h3 id="溢出"><a href="#溢出" class="headerlink" title="溢出"></a>溢出</h3><blockquote><p>分为正溢出和负溢出。</p><ol><li>两个整数相加，结果大于机器字长所能表示的最大整数，称为正溢。</li><li>两个负数相加，结果小于机器所能表示的最小负数，称为负溢。</li></ol></blockquote><h3 id="判断是否溢出"><a href="#判断是否溢出" class="headerlink" title="判断是否溢出"></a>判断是否溢出</h3><ul><li><p>转换</p><blockquote><p>1.不管是两个数相加还是相减，都转换为两个数相加形式，如</p><p>x-y(y为正，或者负)=》x+[-y]</p><p>2.</p><p>变量x，y值为正，如11011，前面默认有个正号(即+11011)，故转换为原码为0011011，前加<strong>两个0</strong>，一个是为了变成正数，一个是符号。</p><p>变量x,y值为负，如-11011，故转换为原码为1011011，前加10，一个是为了变成正数，一个是符号。</p></blockquote></li><li><p>判断</p><blockquote><p>x,y或[-y]变换为对应的补码，相加。</p><p>若相加后前两位为01则为正溢出，为10则为负溢出，其他情况不溢出。</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机组成原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不规则表单的遍历</title>
      <link href="/2021/03/14/bu-gui-ze-biao-dan-de-bian-li/"/>
      <url>/2021/03/14/bu-gui-ze-biao-dan-de-bian-li/</url>
      
        <content type="html"><![CDATA[<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-row</span>        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex<span class="token punctuation">"</span></span>        <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[i<span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span>0 ?<span class="token punctuation">'</span>bdtop<span class="token punctuation">'</span>:<span class="token punctuation">'</span><span class="token punctuation">'</span>,<span class="token punctuation">'</span>bdbottom<span class="token punctuation">'</span>, <span class="token punctuation">'</span>vcenter<span class="token punctuation">'</span>, <span class="token punctuation">'</span>btLeftRight<span class="token punctuation">'</span>]<span class="token punctuation">"</span></span>        <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(item, i) in form.default<span class="token punctuation">"</span></span>        <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>i<span class="token punctuation">"</span></span>      <span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form</span>              <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span>                <span class="token attr-name">:label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.label<span class="token punctuation">"</span></span>                <span class="token attr-name">:required</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.required<span class="token punctuation">"</span></span>              <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span>            <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>16<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colBorder<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">:required</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.required<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span>                  <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.type <span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token punctuation">'</span>text<span class="token punctuation">'</span><span class="token punctuation">"</span></span>                  <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span>                  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>inputSize<span class="token punctuation">"</span></span>                  <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>formData.default[item.name]<span class="token punctuation">"</span></span>                <span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-select</span>                  <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.type <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token punctuation">'</span>select<span class="token punctuation">'</span><span class="token punctuation">"</span></span>                  <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>formData.default[item.name]<span class="token punctuation">"</span></span>                  <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>请选择<span class="token punctuation">"</span></span>                <span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-option</span>                    <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(option, i) in item.options<span class="token punctuation">"</span></span>                    <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>i<span class="token punctuation">"</span></span>                    <span class="token attr-name">:label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>option.label<span class="token punctuation">"</span></span>                    <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>option.value || option.label<span class="token punctuation">"</span></span>                  <span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-option</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-select</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-checkbox-group</span>                  <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>formData.default[item.name]<span class="token punctuation">"</span></span>                  <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.type <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token punctuation">'</span>checkbox<span class="token punctuation">'</span><span class="token punctuation">"</span></span>                <span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-checkbox</span>                    <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>option in item.options<span class="token punctuation">"</span></span>                    <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>option.label<span class="token punctuation">"</span></span>                    <span class="token attr-name">:label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>option.label<span class="token punctuation">"</span></span>                    <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>option.value || option.label<span class="token punctuation">"</span></span>                  <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-checkbox</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-checkbox-group</span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!-- &lt;template v-else>123456&lt;/template> --></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-row</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  data <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      form<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 第一栏数据</span>        <span class="token keyword">default</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span> <span class="token string">'公司名称（全称）'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span> <span class="token string">'text'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'company'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span> <span class="token boolean">true</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span> <span class="token string">'申请（供应商）类型'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span> <span class="token string">'select'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'provider'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            options<span class="token punctuation">:</span> <span class="token punctuation">[</span>              <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                label<span class="token punctuation">:</span> <span class="token string">'合格'</span>              <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>              <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                label<span class="token punctuation">:</span> <span class="token string">'被选'</span>              <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token punctuation">]</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span> <span class="token string">'申请人邮箱账号'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span> <span class="token string">'text'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'email'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span> <span class="token boolean">true</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span> <span class="token string">'供货产品'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span> <span class="token string">'text'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'provide'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span> <span class="token boolean">true</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span> <span class="token string">'使用简述'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span> <span class="token string">'checkbox'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'usage'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            options<span class="token punctuation">:</span> <span class="token punctuation">[</span>              <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                label<span class="token punctuation">:</span> <span class="token string">'生产主材'</span>              <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>              <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                label<span class="token punctuation">:</span> <span class="token string">'生产辅/耗材'</span>              <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>              <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                label<span class="token punctuation">:</span> <span class="token string">'劳保'</span>              <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>              <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                label<span class="token punctuation">:</span> <span class="token string">'生产条保'</span>              <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>              <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                label<span class="token punctuation">:</span> <span class="token string">'办公条包'</span>              <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>              <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                label<span class="token punctuation">:</span> <span class="token string">'生产设备'</span>              <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token punctuation">]</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span><span class="token string">'品牌'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span> <span class="token string">'text'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span> <span class="token boolean">true</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span><span class="token string">'规格型号'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span> <span class="token string">'text'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span> <span class="token boolean">true</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        default2<span class="token punctuation">:</span><span class="token punctuation">[</span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span><span class="token string">'公司地址'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span><span class="token string">'text'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'address1'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span> <span class="token boolean">true</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span><span class="token string">'公司性质'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span> <span class="token string">'select'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'companpyNature'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            options<span class="token punctuation">:</span> <span class="token punctuation">[</span>              <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                label<span class="token punctuation">:</span> <span class="token string">'国有'</span>              <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>              <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                label<span class="token punctuation">:</span> <span class="token string">'民营'</span>              <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>              <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                label<span class="token punctuation">:</span> <span class="token string">'劳保'</span>              <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>              <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                label<span class="token punctuation">:</span> <span class="token string">'中外合资'</span>              <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>              <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                label<span class="token punctuation">:</span> <span class="token string">'外商合资'</span>              <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>              <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                label<span class="token punctuation">:</span> <span class="token string">'其他'</span>              <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token punctuation">]</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>           <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span><span class="token string">'成立日期'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span><span class="token string">'text'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'date'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span> <span class="token boolean">true</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>           <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span><span class="token string">'供应商性质'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span><span class="token string">'select'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'nature'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            options<span class="token punctuation">:</span><span class="token punctuation">[</span>              <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                label<span class="token punctuation">:</span><span class="token string">'生产商'</span>              <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>               <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                label<span class="token punctuation">:</span><span class="token string">'代理商'</span>              <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>               <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                label<span class="token punctuation">:</span><span class="token string">'其他'</span>              <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token punctuation">]</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>           <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span><span class="token string">'公司地址'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span><span class="token string">'text'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span> <span class="token boolean">true</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>           <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span><span class="token string">'银行账号及开户行'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span><span class="token string">'text'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span> <span class="token boolean">true</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>           <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span><span class="token string">'增值税登记号'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span><span class="token string">'text'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'date'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span> <span class="token boolean">true</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>           <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span><span class="token string">'能否开具13%增值税专票'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span><span class="token string">'text'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'judgment'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span> <span class="token boolean">true</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>           <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span><span class="token string">'去年营业额'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span><span class="token string">'text'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'turnover'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span> <span class="token boolean">true</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>           <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span><span class="token string">'预估今年年度营业额'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span><span class="token string">'text'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'turnover2'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span> <span class="token boolean">true</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span><span class="token string">'产品内销与外销比例'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span><span class="token string">'text'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'proportion'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span><span class="token boolean">false</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span><span class="token string">'最近三年的平均营业额增长率%'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span><span class="token string">'text'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'growthRate'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span><span class="token boolean">false</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>           <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span><span class="token string">'付款条件'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span><span class="token string">'text'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'condition'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span><span class="token boolean">true</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>                  <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span><span class="token string">'质保期'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span><span class="token string">'text'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'ShelfLife'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span><span class="token boolean">true</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>                  <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span><span class="token string">'标准交期'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span><span class="token string">'text'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span><span class="token string">' date2'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span><span class="token boolean">true</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span><span class="token string">'公司优势和特点'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span><span class="token string">'text'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'features'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span><span class="token boolean">false</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>           <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span><span class="token string">'公司劣势'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span><span class="token string">'text'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'disadvantage'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span><span class="token boolean">false</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>             <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span><span class="token string">'所属行业主要竞争对手'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span><span class="token string">'text'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'opponent'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span><span class="token boolean">false</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>             <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span><span class="token string">'重点客户'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span><span class="token string">'text'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'client'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span><span class="token boolean">false</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>             <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            label<span class="token punctuation">:</span><span class="token string">'所属行业领导厂商'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span><span class="token string">'text'</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">'vendor'</span><span class="token punctuation">,</span>            required<span class="token punctuation">:</span><span class="token boolean">false</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>   formData<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//存数据</span>        <span class="token keyword">default</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          usage<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>      formList<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>联级选择器</title>
      <link href="/2021/03/08/lian-ji-xuan-ze-qi/"/>
      <url>/2021/03/08/lian-ji-xuan-ze-qi/</url>
      
        <content type="html"><![CDATA[<h2 id="联级选择器"><a href="#联级选择器" class="headerlink" title="联级选择器"></a>联级选择器</h2><p><a href="https://element.eleme.cn/#/zh-CN/component/cascader">官方链接</a></p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><ol><li><p>官方示例</p><blockquote><pre class="line-numbers language-html"><code class="language-html">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-cascader</span>    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>value<span class="token punctuation">"</span></span>    <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>options<span class="token punctuation">"</span></span>    <span class="token attr-name">:props</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>&amp;#123; expandTrigger: <span class="token punctuation">'</span>hover<span class="token punctuation">'</span> &amp;#125;<span class="token punctuation">"</span></span>    <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>handleChange<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-cascader</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote></li><li><p>稍加修饰</p><blockquote><pre class="line-numbers language-html"><code class="language-html">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-cascader</span>    <span class="token attr-name">expand-trigger</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hover<span class="token punctuation">"</span></span>    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selectedKeys<span class="token punctuation">"</span></span>    <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>parentCateList<span class="token punctuation">"</span></span>    <span class="token attr-name">:props</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cascaderProps<span class="token punctuation">"</span></span>    <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>parentCateChanged<span class="token punctuation">"</span></span>    <span class="token attr-name">clearable</span>    <span class="token attr-name">change-on-select</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-cascader</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>expand-trigger=”hover”是接触一级展开下一级</li><li>v-model双向绑定输入框</li><li> options用来指定数据源 </li><li> props用来指定配置对象 </li><li> @change=”parentCateChanged”绑定点击事件</li><li>clearable可清空</li><li>change-on-select可选任意一级选择器</li></ol></blockquote></li></ol><h3 id="定义data"><a href="#定义data" class="headerlink" title="定义data"></a>定义data</h3><p>获取到的数据即parentCateList：数组形式，第一个数据展开所有如下。</p><p><a href="https://imgtu.com/i/6lIXTI"><img src="https://s3.ax1x.com/2021/03/08/6lIXTI.png" alt="6lIXTI.png"></a></p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//父级分类的列表</span>      parentCateList<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">//指定来联级选择器的配置对象</span>      cascaderProps<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 你选中的那个值</span>        value<span class="token punctuation">:</span> <span class="token string">'cat_id'</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 你看到的那个值</span>        label<span class="token punctuation">:</span> <span class="token string">'cat_name'</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">//指定父子嵌套的属性</span>        children<span class="token punctuation">:</span><span class="token string">'children'</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">//选中的父级分类的数组</span>      selectedKeys<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="绑定方法"><a href="#绑定方法" class="headerlink" title="绑定方法"></a>绑定方法</h3><pre class="line-numbers language-js"><code class="language-js"><span class="token function">parentCateChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>selectedKeys<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>打印的是v-model绑定的值，如下，其实是选择的值的cat_id的值组成的数组。</p><p><a href="https://imgtu.com/i/6lT1xS"><img src="https://s3.ax1x.com/2021/03/08/6lT1xS.png" alt="6lT1xS.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> Element-Ui </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue电商 </tag>
            
            <tag> Element-Ui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实现分页功能</title>
      <link href="/2021/03/07/shi-xian-fen-ye-gong-neng/"/>
      <url>/2021/03/07/shi-xian-fen-ye-gong-neng/</url>
      
        <content type="html"><![CDATA[<h2 id="实现分页功能"><a href="#实现分页功能" class="headerlink" title="实现分页功能"></a>实现分页功能</h2><h3 id="Element-Ui"><a href="#Element-Ui" class="headerlink" title="Element-Ui"></a>Element-Ui</h3><p><a href="https://element.eleme.cn/#/zh-CN/component/pagination">官网</a></p><p>示例代码：</p><blockquote><pre class="line-numbers language-html"><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-pagination</span>      <span class="token attr-name">@size-change</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>handleSizeChange<span class="token punctuation">"</span></span>      <span class="token attr-name">@current-change</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>handleCurrentChange<span class="token punctuation">"</span></span>      <span class="token attr-name">:current-page</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>currentPage4<span class="token punctuation">"</span></span>      <span class="token attr-name">:page-sizes</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[100, 200, 300, 400]<span class="token punctuation">"</span></span>      <span class="token attr-name">:page-size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>      <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>total, sizes, prev, pager, next, jumper<span class="token punctuation">"</span></span>      <span class="token attr-name">:total</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>400<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-pagination</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><p>优化后：</p><blockquote><p><em>分页区域 ，page-sizes每页显示几条，page-size当前页显示几条，layout当前的分页区域可以由哪些部分组成，直接默认，total是总数据条数</em></p><pre class="line-numbers language-html"><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-pagination</span>      <span class="token attr-name">@size-change</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>handleSizeChange<span class="token punctuation">"</span></span>      <span class="token attr-name">@current-change</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>handleCurrentChange<span class="token punctuation">"</span></span>      <span class="token attr-name">:current-page</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>queryInfo.pagenum<span class="token punctuation">"</span></span>      <span class="token attr-name">:page-sizes</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[3, 5, 10, 15]<span class="token punctuation">"</span></span>      <span class="token attr-name">:page-size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>queryInfo.pagesize<span class="token punctuation">"</span></span>      <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>total, sizes, prev, pager, next, jumper<span class="token punctuation">"</span></span>      <span class="token attr-name">:total</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>total<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-pagination</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><p>定义data：</p><blockquote><pre class="line-numbers language-js"><code class="language-js">  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 参数,查询条件</span>      queryInfo<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        type<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 第一页</span>        pagenum<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 每页显示多少条</span>        pagesize<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><h3 id="携带方法"><a href="#携带方法" class="headerlink" title="携带方法"></a>携带方法</h3><blockquote><pre class="line-numbers language-js"><code class="language-js">   <span class="token function">handleSizeChange</span><span class="token punctuation">(</span>newSize<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>queryInfo<span class="token punctuation">.</span>pagesize <span class="token operator">=</span> newSize        <span class="token comment" spellcheck="true">//重新刷新数据</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getCateList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token function">handleCurrentChange</span><span class="token punctuation">(</span>newPage<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>queryInfo<span class="token punctuation">.</span>pagenum <span class="token operator">=</span> newPage        <span class="token comment" spellcheck="true">//重新刷新数据</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getCateList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注：<em>第一个函数：监听pagesize的改变,触发了这个函数即可以拿到最新的pagesize</em>，</p><p>​       <em>第二个函数：监听pagenum的改变,触发了这个函数即可以拿到最新的pagenum</em>，</p></blockquote><h3 id="完整代码："><a href="#完整代码：" class="headerlink" title="完整代码："></a>完整代码：</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-pagination</span>      <span class="token attr-name">@size-change</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>handleSizeChange<span class="token punctuation">"</span></span>      <span class="token attr-name">@current-change</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>handleCurrentChange<span class="token punctuation">"</span></span>      <span class="token attr-name">:current-page</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>queryInfo.pagenum<span class="token punctuation">"</span></span>      <span class="token attr-name">:page-sizes</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[3, 5, 10, 15]<span class="token punctuation">"</span></span>      <span class="token attr-name">:page-size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>queryInfo.pagesize<span class="token punctuation">"</span></span>      <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>total, sizes, prev, pager, next, jumper<span class="token punctuation">"</span></span>      <span class="token attr-name">:total</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>total<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-pagination</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 参数,查询条件</span>      queryInfo<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        type<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 第一页</span>        pagenum<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 每页显示多少条</span>        pagesize<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>         <span class="token function">handleSizeChange</span><span class="token punctuation">(</span>newSize<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>queryInfo<span class="token punctuation">.</span>pagesize <span class="token operator">=</span> newSize        <span class="token comment" spellcheck="true">//重新刷新数据</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getCateList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token function">handleCurrentChange</span><span class="token punctuation">(</span>newPage<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>queryInfo<span class="token punctuation">.</span>pagenum <span class="token operator">=</span> newPage        <span class="token comment" spellcheck="true">//重新刷新数据</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getCateList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue电商 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Element-Ui之i，el-tag，el-button的基本使用</title>
      <link href="/2021/03/07/element-ui-zhi-i-el-tag-el-button-de-ji-ben-shi-yong/"/>
      <url>/2021/03/07/element-ui-zhi-i-el-tag-el-button-de-ji-ben-shi-yong/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Element-Ui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树形控件的基本使用</title>
      <link href="/2021/03/07/shu-xing-kong-jian-de-ji-ben-shi-yong/"/>
      <url>/2021/03/07/shu-xing-kong-jian-de-ji-ben-shi-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="初步使用vue-table-with-tree-grid"><a href="#初步使用vue-table-with-tree-grid" class="headerlink" title="初步使用vue-table-with-tree-grid"></a>初步使用vue-table-with-tree-grid</h2><p><a href="https://github.com/MisterTaki/vue-table-with-tree-grid/blob/master/example/Example.vue">官方示例</a></p><h3 id="全局注册"><a href="#全局注册" class="headerlink" title="全局注册"></a>全局注册</h3><p>main.js文件当中：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">import</span> TreeTable <span class="token keyword">from</span> <span class="token string">'vue-table-with-tree-grid'</span>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'tree-table'</span><span class="token punctuation">,</span>TreeTable<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><pre class="line-numbers language-js"><code class="language-js"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue电商 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue电商 </tag>
            
            <tag> Vue其他组件的使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Select选择器</title>
      <link href="/2021/03/07/select-xuan-ze-qi/"/>
      <url>/2021/03/07/select-xuan-ze-qi/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue电商 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>权限管理分配角色的实现</title>
      <link href="/2021/03/07/quan-xian-guan-li-fen-pei-jiao-se-de-shi-xian/"/>
      <url>/2021/03/07/quan-xian-guan-li-fen-pei-jiao-se-de-shi-xian/</url>
      
        <content type="html"><![CDATA[<h3 id="分配角色的基本原理："><a href="#分配角色的基本原理：" class="headerlink" title="分配角色的基本原理："></a>分配角色的基本原理：</h3><p>权限 =》角色 =》用户</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 面包屑导航区域 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-breadcrumb</span> <span class="token attr-name">separator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-breadcrumb-item</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>&amp;#123; path: <span class="token punctuation">'</span>/home<span class="token punctuation">'</span> &amp;#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-breadcrumb-item</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-breadcrumb-item</span><span class="token punctuation">></span></span>权限管理<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-breadcrumb-item</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-breadcrumb-item</span><span class="token punctuation">></span></span>角色列表<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-breadcrumb-item</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-breadcrumb</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 卡片视图 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-card</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 添加角色按钮区域 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-row</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>添加角色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-row</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 角色列表区域 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table</span> <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rolelist<span class="token punctuation">"</span></span> <span class="token attr-name">border</span> <span class="token attr-name">stripe</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 展开列             --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>expand<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scope<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- pre是进行对应的美化，childern下的内容就是该 行角色的所有权限 --></span>            <span class="token comment" spellcheck="true">&lt;!-- 一行有二十四列 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-row</span>              <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[<span class="token punctuation">'</span>bdbottom<span class="token punctuation">'</span>, i1 <span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span> 0 ? <span class="token punctuation">'</span>bdtop<span class="token punctuation">'</span> : <span class="token punctuation">'</span><span class="token punctuation">'</span>, <span class="token punctuation">'</span>vcenter<span class="token punctuation">'</span>]<span class="token punctuation">"</span></span>              <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(item1, i1) in scope.row.children<span class="token punctuation">"</span></span>              <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item1.id<span class="token punctuation">"</span></span>            <span class="token punctuation">></span></span>              <span class="token comment" spellcheck="true">&lt;!-- 渲染一级权限 --></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tag</span> <span class="token attr-name">closable</span> <span class="token attr-name">@close</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>removeRightById(scope.row, item1.id)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span> item1.authName <span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tag</span>                <span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-caret-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">></span></span>              <span class="token comment" spellcheck="true">&lt;!-- 渲染二级和三级权限 --></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>19<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!-- 通过for循环，嵌套渲染二级权限 --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-row</span>                  <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[i2 <span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span> 0 ? <span class="token punctuation">'</span><span class="token punctuation">'</span> : <span class="token punctuation">'</span>bdtop<span class="token punctuation">'</span>, <span class="token punctuation">'</span>vcenter<span class="token punctuation">'</span>]<span class="token punctuation">"</span></span>                  <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(item2, i2) in item1.children<span class="token punctuation">"</span></span>                  <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item2.id<span class="token punctuation">"</span></span>                <span class="token punctuation">></span></span>                  <span class="token comment" spellcheck="true">&lt;!-- 二级权限 --></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tag</span>                      <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span>                      <span class="token attr-name">closable</span>                      <span class="token attr-name">@close</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>removeRightById(scope.row, item2.id)<span class="token punctuation">"</span></span>                      <span class="token punctuation">></span></span><span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span> item2.authName <span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tag</span>                    <span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-caret-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">></span></span>                  <span class="token comment" spellcheck="true">&lt;!-- 三级权限 --></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>18<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tag</span>                      <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>warning<span class="token punctuation">"</span></span>                      <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(item3, i3) in item2.children<span class="token punctuation">"</span></span>                      <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item3.id<span class="token punctuation">"</span></span>                      <span class="token attr-name">closable</span>                      <span class="token attr-name">@close</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>removeRightById(scope.row, item3.id)<span class="token punctuation">"</span></span>                      <span class="token punctuation">></span></span><span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span> item3.authName <span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tag</span>                    <span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-row</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-row</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- &lt;pre>                        &amp;#123;&amp;#123;scope.row&amp;#125;&amp;#125;                     &lt;/pre> --></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 索引列 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>序号<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>角色名称<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>roleName<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>角色描述<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>roleDesc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>操作<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>level<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scope<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-edit<span class="token punctuation">"</span></span>              <span class="token punctuation">></span></span>编辑<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span>            <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>danger<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-delete<span class="token punctuation">"</span></span>              <span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span>            <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span>              <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span>              <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>warning<span class="token punctuation">"</span></span>              <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-setting<span class="token punctuation">"</span></span>              <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showSetRightDialog(scope.row)<span class="token punctuation">"</span></span>              <span class="token punctuation">></span></span>分配权限<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span>            <span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-card</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 分配权限的对话框 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-dialog</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>分配权限<span class="token punctuation">"</span></span> <span class="token attr-name">:visible.sync</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>SetRightDialogVisible<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span> <span class="token attr-name">@close</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>setRightDialogClosed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 树形控件 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tree</span> <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rightslist<span class="token punctuation">"</span></span> <span class="token attr-name">:props</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>treeProps<span class="token punctuation">"</span></span> <span class="token attr-name">show-checkbox</span> <span class="token attr-name">node-key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">default-expand-all</span> <span class="token attr-name">:default-checked-keys</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>defKeys<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>treeRef<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tree</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dialog-footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>SetRightDialogVisible <span class="token punctuation">=</span> false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>取 消<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>         <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>allotRights<span class="token punctuation">"</span></span>          <span class="token punctuation">></span></span>确 定<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span>        <span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-dialog</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//所有角色列表数据</span>      rolelist<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      SetRightDialogVisible<span class="token punctuation">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">//所有权限的数据</span>      rightslist<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">//树型控件的绑定对象</span>      treeProps<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          label<span class="token punctuation">:</span><span class="token string">'authName'</span><span class="token punctuation">,</span>          children<span class="token punctuation">:</span><span class="token string">'children'</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">//默认选中节点的id值</span>      defKeys<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">//当前即将分配的id</span>      roleId<span class="token punctuation">:</span><span class="token string">''</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRolesList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>  methods<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//获取所有角色的列表</span>    <span class="token keyword">async</span> <span class="token function">getRolesList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> data<span class="token punctuation">:</span> res <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"roles"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"获取角色列表数据失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>rolelist <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>rolelist<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//根据id删除对应的权限</span>    <span class="token keyword">async</span> <span class="token function">removeRightById</span><span class="token punctuation">(</span>role<span class="token punctuation">,</span> rightId<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//弹框提示是否删除</span>      <span class="token comment" spellcheck="true">//弹框提示是否提示</span>      <span class="token keyword">const</span> confirmResult <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$confirm</span><span class="token punctuation">(</span>        <span class="token string">"此操作将永久删除该用户, 是否继续?"</span><span class="token punctuation">,</span>        <span class="token string">"提示"</span><span class="token punctuation">,</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          confirmButtonText<span class="token punctuation">:</span> <span class="token string">"确定"</span><span class="token punctuation">,</span>          cancelButtonText<span class="token punctuation">:</span> <span class="token string">"取消"</span><span class="token punctuation">,</span>          type<span class="token punctuation">:</span> <span class="token string">"warning"</span><span class="token punctuation">,</span>          <span class="token comment" spellcheck="true">// catch是捕获错误的</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 如果用户确定删除，则返回值为字符串confirm</span>      <span class="token comment" spellcheck="true">// 如果用户取消了删除，则返回值为字符串cancel</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>confirmResult<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>confirmResult <span class="token operator">!==</span> <span class="token string">"confirm"</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"已经取消删除"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// console.log(确定删除)</span>      <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> data<span class="token punctuation">:</span> res <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span>        <span class="token template-string"><span class="token string">`roles/$&amp;#123;role.id&amp;#125;/rights/$&amp;#123;rightId&amp;#125;`</span></span>      <span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"删除权限失败！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//    this.getRolesList()</span>      <span class="token comment" spellcheck="true">//    避免重新获取数据，关闭展开行</span>      role<span class="token punctuation">.</span>children <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token keyword">async</span> <span class="token function">showSetRightDialog</span><span class="token punctuation">(</span>role<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>roleId <span class="token operator">=</span> role<span class="token punctuation">.</span>id        <span class="token comment" spellcheck="true">//获取所有权限的数据</span>        <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>data<span class="token punctuation">:</span> res<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">await</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'rights/tree'</span><span class="token punctuation">)</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'获取权限数据失败'</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取到的权限数据保存到data中</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>rightslist<span class="token operator">=</span> res<span class="token punctuation">.</span>data        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>rightslist<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//递归获取三级节点的id</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getLeafKeys</span><span class="token punctuation">(</span>role<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>defKeys<span class="token punctuation">)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>SetRightDialogVisible<span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//通过递归的形式，获取角色下所有的三级权限的id，并保存到defKey数组中。</span>    <span class="token function">getLeafKeys</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span>arr<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//如果当前的node节点不包含children属性，则是三级节点</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>id<span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        node<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getLeafKeys</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span>arr<span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//监听分配权限对话框的关闭事件</span>    <span class="token function">setRightDialogClosed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>defKeys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//点击为角色分配权限</span>   <span class="token keyword">async</span> <span class="token function">allotRights</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> keys <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>treeRef<span class="token punctuation">.</span><span class="token function">getCheckedKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>treeRef<span class="token punctuation">.</span><span class="token function">getHalfCheckedKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">]</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//以英文逗号进行拼接</span>        <span class="token keyword">const</span> idStr <span class="token operator">=</span> keys<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span>      <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>data<span class="token punctuation">:</span>res<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`roles/$&amp;#123;this.roleId&amp;#125;/rights`</span></span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>rids<span class="token punctuation">:</span>idStr<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'分配权限失败！'</span><span class="token punctuation">)</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">'分配权限成功！'</span><span class="token punctuation">)</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRolesList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>SetRightDialogVisible <span class="token operator">=</span><span class="token boolean">false</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>less<span class="token punctuation">"</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css"><span class="token number">.</span>el-tag &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">7</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token number">.</span>bdtop &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#eee</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token number">.</span>bdbottom &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#eee</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token number">.</span>vcenter &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  // 纵向居中  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue电商 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue电商 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数递归的基本使用</title>
      <link href="/2021/03/07/han-shu-di-gui-de-ji-ben-shi-yong/"/>
      <url>/2021/03/07/han-shu-di-gui-de-ji-ben-shi-yong/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue电商 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树形结构的基本使用</title>
      <link href="/2021/03/07/shu-xing-jie-gou-de-ji-ben-shi-yong/"/>
      <url>/2021/03/07/shu-xing-jie-gou-de-ji-ben-shi-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="树形结构的基本使用"><a href="#树形结构的基本使用" class="headerlink" title="树形结构的基本使用"></a>树形结构的基本使用</h2><h3 id="官方示例"><a href="#官方示例" class="headerlink" title="官方示例"></a>官方示例</h3><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>el<span class="token operator">-</span>tree <span class="token punctuation">:</span>data<span class="token operator">=</span><span class="token string">"data"</span> <span class="token punctuation">:</span>props<span class="token operator">=</span><span class="token string">"defaultProps"</span> @node<span class="token operator">-</span>click<span class="token operator">=</span><span class="token string">"handleNodeClick"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>tree<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注：data是绑定数据，:props是绑定具体的字段，defaultProps是一个对象。</p></blockquote><h3 id="稍加修饰"><a href="#稍加修饰" class="headerlink" title="稍加修饰"></a>稍加修饰</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tree</span> <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rightslist<span class="token punctuation">"</span></span> <span class="token attr-name">:props</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>treeProps<span class="token punctuation">"</span></span> <span class="token attr-name">show-checkbox</span> <span class="token attr-name">node-key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">default-expand-all</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tree</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    data <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>             rolelist<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        treeProps<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          label<span class="token punctuation">:</span><span class="token string">'authName'</span><span class="token punctuation">,</span>          children<span class="token punctuation">:</span><span class="token string">'children'</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>     <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>   <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><ol><li>show-checkbox属性是添加勾选框。</li><li>node-key=”id”每次勾选绑定id。</li><li>default-expand-all默认展开树形结构。</li></ol></blockquote><h3 id="添加默认勾选的功能"><a href="#添加默认勾选的功能" class="headerlink" title="添加默认勾选的功能"></a>添加默认勾选的功能</h3><p>添加属性和对应data里面的属性。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tree</span> <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rightslist<span class="token punctuation">"</span></span> <span class="token attr-name">:props</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>treeProps<span class="token punctuation">"</span></span> <span class="token attr-name">show-checkbox</span> <span class="token attr-name">node-key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">default-expand-all</span> <span class="token attr-name">:default-checked-keys</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>defKeys<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tree</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    data <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>             rolelist<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        treeProps<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          label<span class="token punctuation">:</span><span class="token string">'authName'</span><span class="token punctuation">,</span>          children<span class="token punctuation">:</span><span class="token string">'children'</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>，     <span class="token comment" spellcheck="true">//默认选中节点的id值</span>      defKeys<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">,</span><span class="token number">116</span><span class="token punctuation">]</span>     <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>   <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>1.前提是添加node-key=”id”属性，勾选和id绑定</p><p>2.:default-checked-keys=”defKeys”，绑定defkeys想要默认勾选的id，defkeys是一个数组。</p></blockquote><h3 id="树形结构自带的方法的使用"><a href="#树形结构自带的方法的使用" class="headerlink" title="树形结构自带的方法的使用"></a>树形结构自带的方法的使用</h3><ol><li><p>为标签添加ref=”treeRef”属性和点击事件。</p><blockquote><pre class="line-numbers language-html"><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tree</span> <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rightslist<span class="token punctuation">"</span></span> <span class="token attr-name">:props</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>treeProps<span class="token punctuation">"</span></span> <span class="token attr-name">show-checkbox</span> <span class="token attr-name">node-key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">default-expand-all</span> <span class="token attr-name">:default-checked-keys</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>defKeys<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>treeRef<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tree</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-html"><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>         <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>allotRights<span class="token punctuation">"</span></span>          <span class="token punctuation">></span></span>确 定<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span>        <span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></blockquote></li><li><p>具体使用</p><blockquote><p>示例：</p><pre class="line-numbers language-js"><code class="language-js"> <span class="token keyword">async</span> <span class="token function">allotRights</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> keys <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>treeRef<span class="token punctuation">.</span><span class="token function">getCheckedKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>treeRef<span class="token punctuation">.</span><span class="token function">getHalfCheckedKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">]</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//以英文逗号进行拼接</span>        <span class="token keyword">const</span> idStr <span class="token operator">=</span> keys<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span>      <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>data<span class="token punctuation">:</span>res<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`roles/$&amp;#123;this.roleId&amp;#125;/rights`</span></span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>rids<span class="token punctuation">:</span>idStr<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'分配权限失败！'</span><span class="token punctuation">)</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">'分配权限成功！'</span><span class="token punctuation">)</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRolesList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>SetRightDialogVisible <span class="token operator">=</span><span class="token boolean">false</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>抽离部分：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token function">allotRights</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> keys <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>treeRef<span class="token punctuation">.</span><span class="token function">getCheckedKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>treeRef<span class="token punctuation">.</span><span class="token function">getHalfCheckedKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">]</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//以英文逗号进行拼接</span>        <span class="token keyword">const</span> idStr <span class="token operator">=</span> keys<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> Element-Ui </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue电商 </tag>
            
            <tag> Element-Ui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三级for循环</title>
      <link href="/2021/03/07/san-ji-for-xun-huan/"/>
      <url>/2021/03/07/san-ji-for-xun-huan/</url>
      
        <content type="html"><![CDATA[<h2 id="三级for循环"><a href="#三级for循环" class="headerlink" title="三级for循环"></a>三级for循环</h2><p>应用以下数据结构：children嵌套。</p><p><a href="https://imgtu.com/i/6KPxBV"><img src="https://s3.ax1x.com/2021/03/07/6KPxBV.png" alt="6KPxBV.png"></a></p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><pre class="line-numbers language-html"><code class="language-html">        <span class="token comment" spellcheck="true">&lt;!-- 角色列表区域 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table</span> <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rolelist<span class="token punctuation">"</span></span> <span class="token attr-name">border</span> <span class="token attr-name">stripe</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 展开列             --></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>expand<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scope<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                     <span class="token comment" spellcheck="true">&lt;!-- pre是进行对应的美化，childern下的内容就是该 行角色的所有权限 --></span>                     <span class="token comment" spellcheck="true">&lt;!-- 一行有二十四列 --></span>                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-row</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[<span class="token punctuation">'</span>bdbottom<span class="token punctuation">'</span>,i1 <span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span> 0 ? <span class="token punctuation">'</span>bdtop<span class="token punctuation">'</span>:<span class="token punctuation">'</span><span class="token punctuation">'</span>,<span class="token punctuation">'</span>vcenter<span class="token punctuation">'</span>]<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(item1,i1) in scope.row.children<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item1.id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                         <span class="token comment" spellcheck="true">&lt;!-- 渲染一级权限 --></span>                         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tag</span><span class="token punctuation">></span></span> <span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span>item1.authName<span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tag</span><span class="token punctuation">></span></span>                             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-caret-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">></span></span>                         <span class="token comment" spellcheck="true">&lt;!-- 渲染二级和三级权限 --></span>                         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>19<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                             <span class="token comment" spellcheck="true">&lt;!-- 通过for循环，嵌套渲染二级权限 --></span>                             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-row</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[i2 <span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span> 0 ? <span class="token punctuation">'</span><span class="token punctuation">'</span>:<span class="token punctuation">'</span>bdtop<span class="token punctuation">'</span>,<span class="token punctuation">'</span>vcenter<span class="token punctuation">'</span>]<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(item2,i2) in item1.children<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item2.id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                 <span class="token comment" spellcheck="true">&lt;!-- 二级权限 --></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tag</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span>item2.authName<span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tag</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-caret-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span> <span class="token punctuation">></span></span>                                <span class="token comment" spellcheck="true">&lt;!-- 三级权限 --></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>18<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tag</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>warning<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(item3,i3) in item2.children<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item3.id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span>item3.authName<span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tag</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">></span></span>                             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-row</span><span class="token punctuation">></span></span>                         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">></span></span>                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-row</span><span class="token punctuation">></span></span>                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span>                        <span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span>scope.row<span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span>                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 索引列 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>序号<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>角色名称<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>roleName<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>角色描述<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>roleDesc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>操作<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>level<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scope<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-edit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>编辑<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>danger<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-delete<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>warning<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-setting<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>分配权限<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：v-for作用是遍历，可以理解为标签赋值(个数由数据的个数而定)，注意遍历的对象。以上示例三次遍历的对象分别是两个row标签和一个tag标签，则复制了多个row标签，tag标签，对应请求来的的数据。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue电商 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>等号的含义</title>
      <link href="/2021/03/07/de-han-yi/"/>
      <url>/2021/03/07/de-han-yi/</url>
      
        <content type="html"><![CDATA[<h2 id="的含义"><a href="#的含义" class="headerlink" title="=的含义"></a>=的含义</h2><h3 id="“-”"><a href="#“-”" class="headerlink" title="“=”"></a>“=”</h3><p>赋值</p><h3 id="“-”-1"><a href="#“-”-1" class="headerlink" title="“==”"></a>“==”</h3><p>等于</p><h3 id="判断语句中：”-”-’’-’"><a href="#判断语句中：”-”-’’-’" class="headerlink" title="判断语句中：”===”,’’!==’"></a>判断语句中：”===”,’’!==’</h3><p>等于和不等于</p><h3 id="判断中的-和-，-和-的区别"><a href="#判断中的-和-，-和-的区别" class="headerlink" title="判断中的===和==，==和=的区别"></a>判断中的===和==，==和=的区别</h3><h4 id="判断中的等于"><a href="#判断中的等于" class="headerlink" title="判断中的等于"></a>判断中的等于</h4><ol><li>==表示判断数值，不判断类型，如1和“1”都会被选中，只要它的值为1</li><li>===表示判断数值和类型，“1”就是数值为1的字符串，1就不被选中</li></ol><h4 id="判断中的不等于"><a href="#判断中的不等于" class="headerlink" title="判断中的不等于"></a>判断中的不等于</h4><ol><li>!=表示判断数值，不判断类型，如1和“1”都会被选中，只要它的值为1</li><li>!==表示判断数值和类型，“1”就是数值为1的字符串，1就不被选中</li></ol>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Layout 布局</title>
      <link href="/2021/03/07/layout-bu-ju/"/>
      <url>/2021/03/07/layout-bu-ju/</url>
      
        <content type="html"><![CDATA[<h2 id="Layout-布局"><a href="#Layout-布局" class="headerlink" title="Layout 布局"></a>Layout 布局</h2><p>通过基础的 24 分栏，迅速简便地创建布局。<strong>即一行有二十四列</strong>。可以理解为一个el-row元素有24个el-col元素。</p><h3 id="基础使用的示例："><a href="#基础使用的示例：" class="headerlink" title="基础使用的示例："></a>基础使用的示例：</h3><pre class="line-numbers language-html"><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>expand<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scope<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                     <span class="token comment" spellcheck="true">&lt;!-- pre是进行对应的美化，childern下的内容就是该 行角色的所有权限 --></span>                     <span class="token comment" spellcheck="true">&lt;!-- 一行有二十四列 --></span>                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-row</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(item1) in scope.row.children<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item1.id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                         <span class="token comment" spellcheck="true">&lt;!-- 渲染一级权限 --></span>                         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tag</span><span class="token punctuation">></span></span>                             <span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span>item1.authName<span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tag</span><span class="token punctuation">></span></span>                         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">></span></span>                         <span class="token comment" spellcheck="true">&lt;!-- 渲染二级和三级权限 --></span>                         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>19<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">></span></span>                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-row</span><span class="token punctuation">></span></span>                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span>                        <span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span>scope.row<span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span>                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>抽离后：5+19 =24</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-row</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>19<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-row</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue电商 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue电商 </tag>
            
            <tag> Element-Ui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>return的实质</title>
      <link href="/2021/03/06/return-de-shi-zhi/"/>
      <url>/2021/03/06/return-de-shi-zhi/</url>
      
        <content type="html"><![CDATA[<h3 id="Retun的实质"><a href="#Retun的实质" class="headerlink" title="Retun的实质:"></a>Retun的实质:</h3><ol><li><p>返回给被赋值的对象的变量，用变量接收</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> a<span class="token operator">+</span>b<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">c</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>掉请求过程中</p><p>这个err，return给了confirmRestult变量，该变量接收了</p><pre class="line-numbers language-js"><code class="language-js"> <span class="token keyword">const</span> confirmResult <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$confirm</span><span class="token punctuation">(</span><span class="token string">'此操作将永久删除该用户, 是否继续?'</span><span class="token punctuation">,</span> <span class="token string">'提示'</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          confirmButtonText<span class="token punctuation">:</span> <span class="token string">'确定'</span><span class="token punctuation">,</span>          cancelButtonText<span class="token punctuation">:</span> <span class="token string">'取消'</span><span class="token punctuation">,</span>          type<span class="token punctuation">:</span> <span class="token string">'warning'</span>          <span class="token comment" spellcheck="true">// catch是捕获错误的</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=</span><span class="token operator">></span>        err<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>点击按钮的传参和Form表单的验证</title>
      <link href="/2021/03/06/dian-ji-an-niu-de-chuan-can-he-form-biao-dan-de-yan-zheng/"/>
      <url>/2021/03/06/dian-ji-an-niu-de-chuan-can-he-form-biao-dan-de-yan-zheng/</url>
      
        <content type="html"><![CDATA[<h2 id="点击按钮的传参，Form表单的验证，提交表单，删除表单"><a href="#点击按钮的传参，Form表单的验证，提交表单，删除表单" class="headerlink" title="点击按钮的传参，Form表单的验证，提交表单，删除表单"></a>点击按钮的传参，Form表单的验证，提交表单，删除表单</h2><h3 id="点击的按钮的传参：showEditDialog-scope-row-id-，加-拿到参数。"><a href="#点击的按钮的传参：showEditDialog-scope-row-id-，加-拿到参数。" class="headerlink" title="点击的按钮的传参：showEditDialog(scope.row.id)，加(),拿到参数。"></a>点击的按钮的传参：showEditDialog(scope.row.id)，加(),拿到参数。</h3><pre class="line-numbers language-html"><code class="language-html">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>操作<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scope<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 拿到这一行的数据 --></span>            <span class="token comment" spellcheck="true">&lt;!-- &amp;#123;&amp;#123;scope.row&amp;#125;&amp;#125; --></span>            <span class="token comment" spellcheck="true">&lt;!-- &amp;#123;&amp;#123; scope.row &amp;#125;&amp;#125; --></span>            <span class="token comment" spellcheck="true">&lt;!-- 修改按钮 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-edit<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showEditDialog(scope.row.id)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 删除按钮 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>danger<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-delete<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 分配角色按钮 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tooltip</span> <span class="token attr-name">effect</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dark<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>分配角色<span class="token punctuation">"</span></span> <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">:enterable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>false<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>warning<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-setting<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tooltip</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="在定义事件的位置接受参数-用id接收-在data里面定义editForm"><a href="#在定义事件的位置接受参数-用id接收-在data里面定义editForm" class="headerlink" title="在定义事件的位置接受参数:用id接收,在data里面定义editForm"></a>在定义事件的位置接受参数:用id接收,在data里面定义editForm</h3><pre class="line-numbers language-js"><code class="language-js">  <span class="token keyword">async</span> <span class="token function">showEditDialog</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'点击了编辑事件'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>editdialogVisible<span class="token punctuation">,</span>id<span class="token punctuation">)</span>      <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>data<span class="token punctuation">:</span> res<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'users/'</span><span class="token operator">+</span>id<span class="token punctuation">)</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'查询用户信息失败'</span><span class="token punctuation">)</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>editForm <span class="token operator">=</span>res<span class="token punctuation">.</span>data      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>editForm<span class="token punctuation">)</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>editdialogVisible <span class="token operator">=</span> <span class="token boolean">true</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//只是一个对象因为url后面接id了</span>            editForm<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>           <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Form表单的验证："><a href="#Form表单的验证：" class="headerlink" title="Form表单的验证："></a>Form表单的验证：</h3><p><a href="https://element.eleme.cn/#/zh-CN/component/form">参考Element-Ui的官方组件</a></p><ol><li><p>官方示例代码</p><blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form</span> <span class="token attr-name">:model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ruleForm<span class="token punctuation">"</span></span> <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rules<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ruleForm<span class="token punctuation">"</span></span> <span class="token attr-name">label-width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100px<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo-ruleForm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>活动名称<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ruleForm.name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote></li><li><p>稍加修饰</p><blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form</span> <span class="token attr-name">:model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editForm<span class="token punctuation">"</span></span> <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editFormRules<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ruleFormRef<span class="token punctuation">"</span></span> <span class="token attr-name">label-width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>70px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>用户名<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editForm.username<span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>邮箱<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editForm.email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>手机<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mobile<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editForm.mobile<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1.model绑定数据，v-model实现双向绑定，绑定对应的字段。</p><p>2.rules=”editFormRules”是绑定验证规则的名称</p><p>3.prop=”name”是绑定验证规则的，只有输入框有验证规则才能用到，对应的字段。</p><p>4.disabled是表示禁用状态，禁止输入。</p><p>5.label-width=”70px”文本最大宽度。</p><p>6.ref=”ruleFormRef是使用默认的方法。后面会用到为实现修改表单的重置操作,即验证重置。</p></blockquote></li><li><p>定义验证规则：</p><blockquote><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span> <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//只是一个对象因为url后面接id了</span>         <span class="token comment" spellcheck="true">//双向绑定的输入框的内容，editForm是名称，里面的属性是具体的字段</span>     editForm<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        username<span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">,</span>        password<span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">,</span>        email<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        mobile<span class="token punctuation">:</span> <span class="token string">''</span>     <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>     editFormRules<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>     email<span class="token punctuation">:</span><span class="token punctuation">[</span>       <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'请输入用户邮箱'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>       <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> validator<span class="token punctuation">:</span> checkEmail<span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token punctuation">]</span><span class="token punctuation">,</span>      mobile<span class="token punctuation">:</span><span class="token punctuation">[</span>       <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'请输入用户手机'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>       <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> validator<span class="token punctuation">:</span> checkMobile<span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>     <span class="token punctuation">]</span>   <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>     <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注：验证规则checkEmail，checkMobile，是需要定义的，完整的data如下</p><pre class="line-numbers language-js"><code class="language-js"><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//验证邮箱的规则</span> <span class="token keyword">var</span> checkEmail <span class="token operator">=</span> <span class="token punctuation">(</span>rule<span class="token punctuation">,</span> value<span class="token punctuation">,</span> cb<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> <span class="token keyword">const</span> regEmail <span class="token operator">=</span> <span class="token regex">/^\w+@\w+(\.\w+)+$/</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>regEmail<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>   <span class="token keyword">return</span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//返回一个错误提示</span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'请输入合法的邮箱'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//验证手机号码的规则</span><span class="token keyword">var</span> checkMobile <span class="token operator">=</span> <span class="token punctuation">(</span>rule<span class="token punctuation">,</span> value<span class="token punctuation">,</span> cb<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> <span class="token keyword">const</span> regMobile <span class="token operator">=</span> <span class="token regex">/^1[34578]\d&amp;#123;9&amp;#125;$/</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>regMobile<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>   <span class="token keyword">return</span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//返回一个错误提示</span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'请输入合法的手机号码'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//获取用户列表的参数对象</span>   queryInfo<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>     query<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">// 当前的页数</span>     pagenum<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//当前每页显示多少条数据</span>     pagesize<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>   <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>   userlist<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>   total<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>   <span class="token comment" spellcheck="true">// 控制添加用户对话框的添加与隐藏</span>   addDialogVisible<span class="token punctuation">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>   <span class="token comment" spellcheck="true">// 添加用户的表单数据</span>   addForm<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>       username<span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">,</span>       password<span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">,</span>       email<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>       mobile<span class="token punctuation">:</span> <span class="token string">''</span>   <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>   <span class="token comment" spellcheck="true">// 添加表单的验证规则的对象</span>   addFormRules<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>       username<span class="token punctuation">:</span> <span class="token punctuation">[</span>         <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'请输用户名名称'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>         <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> min<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> max<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'长度在 3 到 10 个字符'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>       <span class="token punctuation">]</span><span class="token punctuation">,</span>       password<span class="token punctuation">:</span> <span class="token punctuation">[</span>         <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'请输入密码'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>         <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> min<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span> max<span class="token punctuation">:</span> <span class="token number">15</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'长度在 6 到 15 个字符'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>       <span class="token punctuation">]</span><span class="token punctuation">,</span>       email<span class="token punctuation">:</span> <span class="token punctuation">[</span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'请输入邮箱'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> validator<span class="token punctuation">:</span>checkEmail<span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'邮箱格式不正确，请重新输入'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>       <span class="token punctuation">]</span><span class="token punctuation">,</span>       mobile<span class="token punctuation">:</span> <span class="token punctuation">[</span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'请输入电话'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> validator<span class="token punctuation">:</span>checkMobile<span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'手机号码不正确，请重新输入'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>       <span class="token punctuation">]</span>   <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>   <span class="token comment" spellcheck="true">//定义修改对话框的显示和隐藏</span>   editdialogVisible<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>   <span class="token comment" spellcheck="true">//查询到的用户信息的对象</span>   editForm<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>   <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>   <span class="token comment" spellcheck="true">// 修改表单的验证规则对象</span>   editFormRules<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>     email<span class="token punctuation">:</span><span class="token punctuation">[</span>       <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'请输入用户邮箱'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>       <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> validator<span class="token punctuation">:</span> checkEmail<span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>     <span class="token punctuation">]</span><span class="token punctuation">,</span>      mobile<span class="token punctuation">:</span><span class="token punctuation">[</span>       <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'请输入用户手机'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>       <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> validator<span class="token punctuation">:</span> checkMobile<span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>     <span class="token punctuation">]</span>   <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote></li><li><p>具体代码如下：Users.vue</p><blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- &lt;h3>面包屑导航区域&lt;/h3> --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-breadcrumb</span> <span class="token attr-name">separator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-breadcrumb-item</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>&amp;#123; path: <span class="token punctuation">'</span>/home<span class="token punctuation">'</span> &amp;#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-breadcrumb-item</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-breadcrumb-item</span><span class="token punctuation">></span></span>用户管理<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-breadcrumb-item</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-breadcrumb-item</span><span class="token punctuation">></span></span>用户列表<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-breadcrumb-item</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-breadcrumb</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 卡片视图区域 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-card</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box-card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 搜索与添加区域 --></span>      <span class="token comment" spellcheck="true">&lt;!-- 分栏间隔 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-row</span> <span class="token attr-name">:gutter</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>7<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>请输入内容<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>queryInfo.query<span class="token punctuation">"</span></span> <span class="token attr-name">clearable</span> <span class="token attr-name">@clear</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>getUserList<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>append<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-search<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>getUserList<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addDialogVisible<span class="token punctuation">=</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>添加用户<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-row</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 用户列表区域 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table</span> <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userlist<span class="token punctuation">"</span></span> <span class="token attr-name">border</span> <span class="token attr-name">stripe</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>姓名<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>邮箱<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>电话<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mobile<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>角色<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>role_name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>状态<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mg_state<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scope<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 拿到这一行的数据 --></span>            <span class="token comment" spellcheck="true">&lt;!-- &amp;#123;&amp;#123;scope.row&amp;#125;&amp;#125; --></span>            <span class="token comment" spellcheck="true">&lt;!-- &amp;#123;&amp;#123; scope.row &amp;#125;&amp;#125; --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-switch</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scope.row.mg_state<span class="token punctuation">"</span></span> <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>usesrStateChanged(scope.row)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-switch</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>操作<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scope<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 拿到这一行的数据 --></span>            <span class="token comment" spellcheck="true">&lt;!-- &amp;#123;&amp;#123;scope.row&amp;#125;&amp;#125; --></span>            <span class="token comment" spellcheck="true">&lt;!-- &amp;#123;&amp;#123; scope.row &amp;#125;&amp;#125; --></span>            <span class="token comment" spellcheck="true">&lt;!-- 修改按钮 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-edit<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showEditDialog(scope.row.id)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 删除按钮 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>danger<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-delete<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 分配角色按钮 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tooltip</span> <span class="token attr-name">effect</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dark<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>分配角色<span class="token punctuation">"</span></span> <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">:enterable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>false<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>warning<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-setting<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tooltip</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 分页区域 --></span>      <span class="token comment" spellcheck="true">&lt;!-- layout字符串，展示功能 --></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-pagination</span>      <span class="token attr-name">@size-change</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>handleSizeChange<span class="token punctuation">"</span></span>      <span class="token attr-name">@current-change</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>handleCurrentChange<span class="token punctuation">"</span></span>      <span class="token attr-name">:current-page</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>queryInfo.pagenum<span class="token punctuation">"</span></span>      <span class="token attr-name">:page-sizes</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[1, 2, 5, 10]<span class="token punctuation">"</span></span>      <span class="token attr-name">:page-size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>queryInfo.pagesize<span class="token punctuation">"</span></span>      <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>total, sizes, prev, pager, next, jumper<span class="token punctuation">"</span></span>      <span class="token attr-name">:total</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>400<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-pagination</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-card</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 添加用户的对话框 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-dialog</span>  <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>添加用户<span class="token punctuation">"</span></span>  <span class="token attr-name">:visible.sync</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addDialogVisible<span class="token punctuation">"</span></span>  <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span>  <span class="token attr-name">@close</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addDialogClosed<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 内容主体区域 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form</span> <span class="token attr-name">:model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addForm<span class="token punctuation">"</span></span> <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addFormRules<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addFormRef<span class="token punctuation">"</span></span> <span class="token attr-name">label-width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>70px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>用户名<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addForm.username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>密码<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addForm.password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>邮箱<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addForm.email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>电话<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mobile<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addForm.mobile<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 底部区域 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dialog-footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addDialogVisible <span class="token punctuation">=</span> false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>取 消<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addUser<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>确 定<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-dialog</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 修改用户对话框 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-dialog</span>  <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>修改用户<span class="token punctuation">"</span></span>  <span class="token attr-name">:visible.sync</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editdialogVisible<span class="token punctuation">"</span></span>  <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form</span> <span class="token attr-name">:model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editForm<span class="token punctuation">"</span></span> <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editFormRules<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ruleFormRef<span class="token punctuation">"</span></span> <span class="token attr-name">label-width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>70px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>用户名<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editForm.username<span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>邮箱<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editForm.email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>手机<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mobile<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editForm.mobile<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dialog-footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editdialogVisible <span class="token punctuation">=</span> false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>取 消<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editdialogVisible <span class="token punctuation">=</span> false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>确 定<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-dialog</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//验证邮箱的规则</span>    <span class="token keyword">var</span> checkEmail <span class="token operator">=</span> <span class="token punctuation">(</span>rule<span class="token punctuation">,</span> value<span class="token punctuation">,</span> cb<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> regEmail <span class="token operator">=</span> <span class="token regex">/^\w+@\w+(\.\w+)+$/</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>regEmail<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//返回一个错误提示</span>    <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'请输入合法的邮箱'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//验证手机号码的规则</span>  <span class="token keyword">var</span> checkMobile <span class="token operator">=</span> <span class="token punctuation">(</span>rule<span class="token punctuation">,</span> value<span class="token punctuation">,</span> cb<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> regMobile <span class="token operator">=</span> <span class="token regex">/^1[34578]\d&amp;#123;9&amp;#125;$/</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>regMobile<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//返回一个错误提示</span>    <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'请输入合法的手机号码'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//获取用户列表的参数对象</span>      queryInfo<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        query<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 当前的页数</span>        pagenum<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">//当前每页显示多少条数据</span>        pagesize<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>      userlist<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      total<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">// 控制添加用户对话框的添加与隐藏</span>      addDialogVisible<span class="token punctuation">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">// 添加用户的表单数据</span>      addForm<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          username<span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">,</span>          password<span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">,</span>          email<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>          mobile<span class="token punctuation">:</span> <span class="token string">''</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">// 添加表单的验证规则的对象</span>      addFormRules<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          username<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'请输用户名名称'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> min<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> max<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'长度在 3 到 10 个字符'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>          password<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'请输入密码'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> min<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span> max<span class="token punctuation">:</span> <span class="token number">15</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'长度在 6 到 15 个字符'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>          email<span class="token punctuation">:</span> <span class="token punctuation">[</span>             <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'请输入邮箱'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>             <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> validator<span class="token punctuation">:</span>checkEmail<span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'邮箱格式不正确，请重新输入'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>          mobile<span class="token punctuation">:</span> <span class="token punctuation">[</span>             <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'请输入电话'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>             <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> validator<span class="token punctuation">:</span>checkMobile<span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'手机号码不正确，请重新输入'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>          <span class="token punctuation">]</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">//定义修改对话框的显示和隐藏</span>      editdialogVisible<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">//查询到的用户信息的对象</span>      editForm<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">// 修改表单的验证规则对象</span>      editFormRules<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        email<span class="token punctuation">:</span><span class="token punctuation">[</span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'请输入用户邮箱'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> validator<span class="token punctuation">:</span> checkEmail<span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>         mobile<span class="token punctuation">:</span><span class="token punctuation">[</span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'请输入用户手机'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> validator<span class="token punctuation">:</span> checkMobile<span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token punctuation">]</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>  methods<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//get请求参数拼接用params</span>    <span class="token keyword">async</span> <span class="token function">getUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> data<span class="token punctuation">:</span> res <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"users"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        params<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>queryInfo<span class="token punctuation">,</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"获取用户列表失败！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>userlist <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>users<span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>total <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>total<span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//监听pagesize改变的事件</span>  <span class="token function">handleSizeChange</span><span class="token punctuation">(</span>newSize<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newSize<span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>queryInfo<span class="token punctuation">.</span>pagesize <span class="token operator">=</span> newSize    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//监听 页码值，改变的事件</span>  <span class="token function">handleCurrentChange</span><span class="token punctuation">(</span>newPage<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newPage<span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>queryInfo<span class="token punctuation">.</span>pagenum <span class="token operator">=</span> newPage    <span class="token comment" spellcheck="true">// 重新获取数据</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 监听switch开关状态的改变</span>  <span class="token keyword">async</span> <span class="token function">usesrStateChanged</span><span class="token punctuation">(</span>userinfo<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>userinfo<span class="token punctuation">)</span>        <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>data<span class="token punctuation">:</span>res<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`users/$&amp;#123;userinfo.id&amp;#125;/state/$&amp;#123;userinfo.mg_state&amp;#125;`</span></span><span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    userinfo<span class="token punctuation">.</span>mg_state <span class="token operator">=</span> <span class="token operator">!</span>userinfo<span class="token punctuation">.</span>mg_state    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'更新用户状态失败'</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">'更新用户状态成功'</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//监听用户对话框的关闭事件</span>  <span class="token function">addDialogClosed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//对话框关闭之后，重置表达</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>addFormRef<span class="token punctuation">.</span><span class="token function">resetFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 点击按钮，添加新用户</span>  <span class="token function">addUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//点击确定按钮，添加新用户</span>      <span class="token comment" spellcheck="true">//调用validate进行表单验证</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>addFormRef<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span> <span class="token keyword">async</span> valid <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>valid<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"请填写完整用户信息"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">//发送请求完成添加用户的操作</span>          <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>data<span class="token punctuation">:</span>res<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"users"</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>addForm<span class="token punctuation">)</span>          <span class="token comment" spellcheck="true">//判断如果添加失败，就做提示</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token number">201</span><span class="token punctuation">)</span>              <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'添加用户失败'</span><span class="token punctuation">)</span>          <span class="token comment" spellcheck="true">//添加成功的提示</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"添加用户成功"</span><span class="token punctuation">)</span>          <span class="token comment" spellcheck="true">//关闭对话框</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>addDialogVisible <span class="token operator">=</span> <span class="token boolean">false</span>          <span class="token comment" spellcheck="true">//重新请求最新的数据</span>          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//展示编辑用户的对话框</span>  <span class="token keyword">async</span> <span class="token function">showEditDialog</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'点击了编辑事件'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>editdialogVisible<span class="token punctuation">,</span>id<span class="token punctuation">)</span>      <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>data<span class="token punctuation">:</span> res<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'users/'</span><span class="token operator">+</span>id<span class="token punctuation">)</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'查询用户信息失败'</span><span class="token punctuation">)</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>editForm <span class="token operator">=</span>res<span class="token punctuation">.</span>data      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>editForm<span class="token punctuation">)</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>editdialogVisible <span class="token operator">=</span> <span class="token boolean">true</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>less<span class="token punctuation">"</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote></li></ol><h3 id="修改用户表单的重置操作"><a href="#修改用户表单的重置操作" class="headerlink" title="修改用户表单的重置操作"></a>修改用户表单的重置操作</h3><ul><li><p>绑定close点击事件: @close=’editDialogClosed’</p><blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 修改用户对话框 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-dialog</span>  <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>修改用户<span class="token punctuation">"</span></span>  <span class="token attr-name">:visible.sync</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editdialogVisible<span class="token punctuation">"</span></span>  <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span>  <span class="token attr-name">@close</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>editDialogClosed<span class="token punctuation">'</span></span>  <span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form</span> <span class="token attr-name">:model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editForm<span class="token punctuation">"</span></span> <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editFormRules<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editFormRef<span class="token punctuation">"</span></span> <span class="token attr-name">label-width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>70px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>用户名<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editForm.username<span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>邮箱<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editForm.email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>手机<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mobile<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editForm.mobile<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dialog-footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editdialogVisible <span class="token punctuation">=</span> false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>取 消<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editdialogVisible <span class="token punctuation">=</span> false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>确 定<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-dialog</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote></li><li><p>定义事件：</p><pre class="line-numbers language-js"><code class="language-js"> <span class="token comment" spellcheck="true">//监听修改用户对话框的关闭事件</span>  <span class="token function">editDialogClosed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>editFormRef<span class="token punctuation">.</span><span class="token function">resetFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="提交的表单的预验证：要应用ref-”ruleFormRef”"><a href="#提交的表单的预验证：要应用ref-”ruleFormRef”" class="headerlink" title="提交的表单的预验证：要应用ref=”ruleFormRef”"></a>提交的表单的预验证：要应用ref=”ruleFormRef”</h3><ol><li>为确定绑定点击事件：@click=”editUseInfo”</li></ol><pre class="line-numbers language-html"><code class="language-html">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-dialog</span>  <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>修改用户<span class="token punctuation">"</span></span>  <span class="token attr-name">:visible.sync</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editdialogVisible<span class="token punctuation">"</span></span>  <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span>  <span class="token attr-name">@close</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>editDialogClosed<span class="token punctuation">'</span></span>  <span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form</span> <span class="token attr-name">:model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editForm<span class="token punctuation">"</span></span> <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editFormRules<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editFormRef<span class="token punctuation">"</span></span> <span class="token attr-name">label-width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>70px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>用户名<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editForm.username<span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>邮箱<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editForm.email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>手机<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mobile<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editForm.mobile<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dialog-footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editdialogVisible <span class="token punctuation">=</span> false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>取 消<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editUseInfo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>确 定<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-dialog</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    2.定义事件</p><pre class="line-numbers language-js"><code class="language-js"> <span class="token comment" spellcheck="true">//修改用户并提交,打印结果为true则验证成功，否则则失败</span>  <span class="token function">editUseInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>editFormRef<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span>valid<span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>valid<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="提交表单完成用户信息的修改：发请求，要携带email和mobile，不拼接在url上"><a href="#提交表单完成用户信息的修改：发请求，要携带email和mobile，不拼接在url上" class="headerlink" title="提交表单完成用户信息的修改：发请求，要携带email和mobile，不拼接在url上"></a>提交表单完成用户信息的修改：发请求，要携带email和mobile，不拼接在url上</h3><pre class="line-numbers language-js"><code class="language-js">  <span class="token comment" spellcheck="true">//修改用户并提交</span> <span class="token function">editUseInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>editFormRef<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token keyword">async</span>  valid<span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// console.log(valid)</span>      <span class="token comment" spellcheck="true">// 如果为false,则直接return</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>valid<span class="token punctuation">)</span> <span class="token keyword">return</span>      <span class="token comment" spellcheck="true">//成功则发起修改用户信息的数据请求，提交数据</span>     <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>data<span class="token punctuation">:</span>res<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">'users/'</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>editForm<span class="token punctuation">.</span>id<span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>email<span class="token punctuation">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>editForm<span class="token punctuation">.</span>email<span class="token punctuation">,</span>mobile<span class="token punctuation">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>editForm<span class="token punctuation">.</span>mobile<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>     <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>       <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'更新用户信息失败！'</span><span class="token punctuation">)</span>     <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//关闭对话框</span>     <span class="token keyword">this</span><span class="token punctuation">.</span>editdialogVisible <span class="token operator">=</span> <span class="token boolean">false</span>     <span class="token comment" spellcheck="true">//刷新数据列表</span>     <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true">//提示修改成功</span>     <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">'更新用户信息成功'</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="删除表单操作"><a href="#删除表单操作" class="headerlink" title="删除表单操作"></a>删除表单操作</h3><ol><li><p>先提示是否要删除：<a href="https://element.eleme.cn/#/zh-CN/component/message-box">应用element-Ui的官方组件</a></p><blockquote><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$confirm</span><span class="token punctuation">(</span><span class="token string">'此操作将永久删除该文件, 是否继续?'</span><span class="token punctuation">,</span> <span class="token string">'提示'</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          confirmButtonText<span class="token punctuation">:</span> <span class="token string">'确定'</span><span class="token punctuation">,</span>          cancelButtonText<span class="token punctuation">:</span> <span class="token string">'取消'</span><span class="token punctuation">,</span>          type<span class="token punctuation">:</span> <span class="token string">'warning'</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改后：这个err，return给了confirmRestult变量，该变量接收了</p><pre class="line-numbers language-js"><code class="language-js">  <span class="token keyword">const</span> confirmResult <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$confirm</span><span class="token punctuation">(</span><span class="token string">'此操作将永久删除该用户, 是否继续?'</span><span class="token punctuation">,</span> <span class="token string">'提示'</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          confirmButtonText<span class="token punctuation">:</span> <span class="token string">'确定'</span><span class="token punctuation">,</span>          cancelButtonText<span class="token punctuation">:</span> <span class="token string">'取消'</span><span class="token punctuation">,</span>          type<span class="token punctuation">:</span> <span class="token string">'warning'</span>          <span class="token comment" spellcheck="true">// catch是捕获错误的</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=</span><span class="token operator">></span>        err<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>具体的事件</p><pre class="line-numbers language-js"><code class="language-js"> <span class="token keyword">async</span> <span class="token function">removeUserById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//弹框提示是否提示</span>     <span class="token keyword">const</span> confirmResult <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$confirm</span><span class="token punctuation">(</span><span class="token string">'此操作将永久删除该用户, 是否继续?'</span><span class="token punctuation">,</span> <span class="token string">'提示'</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          confirmButtonText<span class="token punctuation">:</span> <span class="token string">'确定'</span><span class="token punctuation">,</span>          cancelButtonText<span class="token punctuation">:</span> <span class="token string">'取消'</span><span class="token punctuation">,</span>          type<span class="token punctuation">:</span> <span class="token string">'warning'</span>          <span class="token comment" spellcheck="true">// catch是捕获错误的</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=</span><span class="token operator">></span>        err<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// 如果用户确定删除，则返回值为字符串confirm</span>        <span class="token comment" spellcheck="true">// 如果用户取消了删除，则返回值为字符串cancel</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>confirmResult <span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>confirmResult <span class="token operator">!==</span> <span class="token string">'confirm'</span> <span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">'已经取消删除'</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>确定删除<span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>前提是事件和按钮绑定</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>danger<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-delete<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span>  <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>removeUserById(scope.row.id)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote></li></ol><h3 id="发请求删除用户"><a href="#发请求删除用户" class="headerlink" title="发请求删除用户"></a>发请求删除用户</h3><pre class="line-numbers language-js"><code class="language-js"> <span class="token keyword">async</span> <span class="token function">removeUserById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//弹框提示是否提示</span>     <span class="token keyword">const</span> confirmResult <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$confirm</span><span class="token punctuation">(</span><span class="token string">'此操作将永久删除该用户, 是否继续?'</span><span class="token punctuation">,</span> <span class="token string">'提示'</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          confirmButtonText<span class="token punctuation">:</span> <span class="token string">'确定'</span><span class="token punctuation">,</span>          cancelButtonText<span class="token punctuation">:</span> <span class="token string">'取消'</span><span class="token punctuation">,</span>          type<span class="token punctuation">:</span> <span class="token string">'warning'</span>          <span class="token comment" spellcheck="true">// catch是捕获错误的</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=</span><span class="token operator">></span>        err<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// 如果用户确定删除，则返回值为字符串confirm</span>        <span class="token comment" spellcheck="true">// 如果用户取消了删除，则返回值为字符串cancel</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>confirmResult<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>confirmResult <span class="token operator">!==</span> <span class="token string">'confirm'</span> <span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">'已经取消删除'</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'确定了删除'</span><span class="token punctuation">)</span>          <span class="token comment" spellcheck="true">//删除用户的操作</span>       <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>data<span class="token punctuation">:</span>res<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token string">'users/'</span> <span class="token operator">+</span>id<span class="token punctuation">)</span>       <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'删除用户失败！'</span><span class="token punctuation">)</span>       <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>       <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">'删除用户成功'</span><span class="token punctuation">)</span>       <span class="token comment" spellcheck="true">//重新刷新列表</span>       <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue电商 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>el-dialog弹窗</title>
      <link href="/2021/03/06/el-dialog-dan-chuang/"/>
      <url>/2021/03/06/el-dialog-dan-chuang/</url>
      
        <content type="html"><![CDATA[<h2 id="el-dialog弹窗"><a href="#el-dialog弹窗" class="headerlink" title="el-dialog弹窗"></a>el-dialog弹窗</h2><h3 id="Element-Ui官方：Dialog-对话框"><a href="#Element-Ui官方：Dialog-对话框" class="headerlink" title="Element-Ui官方：Dialog 对话框"></a>Element-Ui官方：<a href="https://element.eleme.cn/#/zh-CN/component/dialog#dialog-dui-hua-kuang">Dialog 对话框</a></h3><p>官方示例：</p><blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-dialog</span>  <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>提示<span class="token punctuation">"</span></span>  <span class="token attr-name">:visible.sync</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dialogVisible<span class="token punctuation">"</span></span>  <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>30%<span class="token punctuation">"</span></span>  <span class="token attr-name">:before-close</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>handleClose<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>这是一段信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dialog-footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dialogVisible <span class="token punctuation">=</span> false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>取 消<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dialogVisible <span class="token punctuation">=</span> false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>确 定<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-dialog</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><h3 id="点击按钮-用-click绑定点击事件"><a href="#点击按钮-用-click绑定点击事件" class="headerlink" title="点击按钮:用@click绑定点击事件"></a>点击按钮:用@click绑定点击事件</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-edit<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showEditDialog()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="定义事件"><a href="#定义事件" class="headerlink" title="定义事件"></a>定义事件</h3><pre class="line-numbers language-js"><code class="language-js">  <span class="token function">showEditDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'点击了编辑事件'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>editdialogVisible<span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="修改弹窗-visible-sync-”editdialogVisible”是定义弹窗是否隐藏，确定和取消都会触发弹窗隐藏。"><a href="#修改弹窗-visible-sync-”editdialogVisible”是定义弹窗是否隐藏，确定和取消都会触发弹窗隐藏。" class="headerlink" title="修改弹窗: :visible.sync=”editdialogVisible”是定义弹窗是否隐藏，确定和取消都会触发弹窗隐藏。"></a>修改弹窗: :visible.sync=”editdialogVisible”是定义弹窗是否隐藏，确定和取消都会触发弹窗隐藏。</h3><pre class="line-numbers language-html"><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-dialog</span>  <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>修改用户<span class="token punctuation">"</span></span>  <span class="token attr-name">:visible.sync</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editdialogVisible<span class="token punctuation">"</span></span>  <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>这是一段信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dialog-footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editdialogVisible <span class="token punctuation">=</span> false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>取 消<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editdialogVisible <span class="token punctuation">=</span> false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>确 定<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-dialog</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="data里面定义editdialogVisible"><a href="#data里面定义editdialogVisible" class="headerlink" title="data里面定义editdialogVisible"></a>data里面定义editdialogVisible</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//默认是false,即隐藏，点击事件可以修改其值</span>            editdialogVisible<span class="token punctuation">:</span><span class="token boolean">false</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="完成点击事件-点击改变editdialogVisible-的布尔值，即可触发弹窗。"><a href="#完成点击事件-点击改变editdialogVisible-的布尔值，即可触发弹窗。" class="headerlink" title="完成点击事件:点击改变editdialogVisible 的布尔值，即可触发弹窗。"></a>完成点击事件:点击改变editdialogVisible 的布尔值，即可触发弹窗。</h3><pre class="line-numbers language-js"><code class="language-js">  <span class="token function">showEditDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>editdialogVisible <span class="token operator">=</span> <span class="token boolean">true</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'点击了编辑事件'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>editdialogVisible<span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="关闭对话框后清空数据"><a href="#关闭对话框后清空数据" class="headerlink" title="关闭对话框后清空数据"></a>关闭对话框后清空数据</h3><p>添加点击事件：@close=”addCateDialogClosed”</p><p>以下是关闭窗口，清空表单和联级选择器的数据的示例。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-dialog</span>      <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>添加分类<span class="token punctuation">"</span></span>      <span class="token attr-name">:visible.sync</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addCatedialogVisible<span class="token punctuation">"</span></span>      <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span>      <span class="token attr-name">@close</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addCateDialogClosed<span class="token punctuation">"</span></span>    <span class="token punctuation">></span></span>         <span class="token comment" spellcheck="true">&lt;!-- 添加分类表单 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form</span>      <span class="token attr-name">:model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addCateForm<span class="token punctuation">"</span></span>      <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addCateFormRules<span class="token punctuation">"</span></span>      <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addCateFormRef<span class="token punctuation">"</span></span>      <span class="token attr-name">label-width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100px<span class="token punctuation">"</span></span>    <span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>分类名称:<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cat_name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addCateForm.cat_name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>父级分类:<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- options用来指定数据源 --></span>        <span class="token comment" spellcheck="true">&lt;!-- props用来指定配置对象 --></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-cascader</span>    <span class="token attr-name">expand-trigger</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hover<span class="token punctuation">"</span></span>    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selectedKeys<span class="token punctuation">"</span></span>    <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>parentCateList<span class="token punctuation">"</span></span>    <span class="token attr-name">:props</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cascaderProps<span class="token punctuation">"</span></span>    <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>parentCateChanged<span class="token punctuation">"</span></span>    <span class="token attr-name">clearable</span>    <span class="token attr-name">change-on-select</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-cascader</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dialog-footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addCatedialogVisible <span class="token punctuation">=</span> false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>取 消<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>           <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addCate<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>确 定<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span>        <span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-dialog</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">      <span class="token comment" spellcheck="true">//监听对话框的关闭事件，重置表单数据</span>    <span class="token function">addCateDialogClosed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>addCateFormRef<span class="token punctuation">.</span><span class="token function">resetFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>selectedKeys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>addCateForm<span class="token punctuation">.</span>cat_level <span class="token operator">=</span><span class="token number">0</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>addCateForm<span class="token punctuation">.</span>cat_pid <span class="token operator">=</span><span class="token number">0</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue电商 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搜索框和Table表格的实现</title>
      <link href="/2021/03/06/sou-suo-kuang-he-table-biao-ge-de-shi-xian/"/>
      <url>/2021/03/06/sou-suo-kuang-he-table-biao-ge-de-shi-xian/</url>
      
        <content type="html"><![CDATA[<h3 id="添加搜索框，画Table表格"><a href="#添加搜索框，画Table表格" class="headerlink" title="添加搜索框，画Table表格"></a>添加搜索框，画Table表格</h3><ol><li><p>搜索框：<a href="https://element.eleme.cn/#/zh-CN/component/input">Element-Ui中的input搜索框中的复合搜索框</a></p><blockquote><pre class="line-numbers language-html"><code class="language-html">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>请输入内容<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input3<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-with-select<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-select</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>prepend<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>请选择<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-option</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>餐厅名<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-option</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-option</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>订单号<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-option</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-option</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>用户电话<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>append<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><p>删减后：并添加一个button按钮，实现搜索就是绑定一个获取数据的事件即可。</p><blockquote><pre class="line-numbers language-html"><code class="language-html">      <span class="token comment" spellcheck="true">&lt;!-- 搜索与添加区域 --></span>      <span class="token comment" spellcheck="true">&lt;!-- 分栏间隔 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-row</span> <span class="token attr-name">:gutter</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>7<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>请输入内容<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>queryInfo.query<span class="token punctuation">"</span></span> <span class="token attr-name">clearable</span> <span class="token attr-name">@clear</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>getUserList<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>append<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-search<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>getUserList<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addDialogVisible<span class="token punctuation">=</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>添加用户<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-row</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>属性：clearable              是否可清空                 boolean                                        —                                false        </p><p>​            clear                   在点击由 <code>clearable</code> 属性生成的清空按钮时触发          —                           然后重新渲染</p><p>Layout 布局:</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-row</span> <span class="token attr-name">:gutter</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>16<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>grid-content bg-purple<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>grid-content bg-purple<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-row</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>实现效果：</p><p><a href="https://imgtu.com/i/6nvKmQ"><img src="https://s3.ax1x.com/2021/03/06/6nvKmQ.png" alt="6nvKmQ.png"></a></p><p>属性： span                 栅格占据的列数                            number                              —                                 24</p><p>​            gutter                栅格间隔                                      number                              —  </p><p>注：span可以表示元素的所占长度，gutter可以表示元素之间的间距。                                     </p></blockquote></li><li><p>Table：<a href="https://element.eleme.cn/#/zh-CN/component/table">运用element的table表格组件</a></p><blockquote><pre class="line-numbers language-html"><code class="language-html">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table</span>      <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tableData<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">      <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span>        <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>date<span class="token punctuation">"</span></span>        <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>日期<span class="token punctuation">"</span></span>        <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>180<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span>        <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span>        <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>姓名<span class="token punctuation">"</span></span>        <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>180<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span>        <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span>        <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>地址<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><p>项目实战的代码：prop绑定拿来的数据，应用作用域插槽</p><blockquote><pre class="line-numbers language-html"><code class="language-html">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table</span> <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userlist<span class="token punctuation">"</span></span> <span class="token attr-name">border</span> <span class="token attr-name">stripe</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>姓名<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>邮箱<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>电话<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mobile<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>角色<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>role_name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>状态<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mg_state<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scope<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 拿到这一行的数据 --></span>            <span class="token comment" spellcheck="true">&lt;!-- &amp;#123;&amp;#123;scope.row&amp;#125;&amp;#125; --></span>            <span class="token comment" spellcheck="true">&lt;!-- &amp;#123;&amp;#123; scope.row &amp;#125;&amp;#125; --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-switch</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scope.row.mg_state<span class="token punctuation">"</span></span> <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>usesrStateChanged(scope.row)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-switch</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>操作<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 拿到这一行的数据 --></span>            <span class="token comment" spellcheck="true">&lt;!-- &amp;#123;&amp;#123;scope.row&amp;#125;&amp;#125; --></span>            <span class="token comment" spellcheck="true">&lt;!-- &amp;#123;&amp;#123; scope.row &amp;#125;&amp;#125; --></span>            <span class="token comment" spellcheck="true">&lt;!-- 修改按钮 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-edit<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 删除按钮 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>danger<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-delete<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 分配角色按钮 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tooltip</span> <span class="token attr-name">effect</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dark<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>分配角色<span class="token punctuation">"</span></span> <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">:enterable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>false<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>warning<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-setting<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tooltip</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue电商 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Echarts在项目中基本的使用</title>
      <link href="/2021/03/05/echarts-zai-xiang-mu-zhong-ji-ben-de-shi-yong/"/>
      <url>/2021/03/05/echarts-zai-xiang-mu-zhong-ji-ben-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="Echarts在项目中的基本使用-参考官方网站：Echarts"><a href="#Echarts在项目中的基本使用-参考官方网站：Echarts" class="headerlink" title="Echarts在项目中的基本使用:参考官方网站：Echarts"></a>Echarts在项目中的基本使用:参考官方网站：<a href="https://echarts.apache.org/zh/tutorial.html#5%20%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8B%20ECharts">Echarts</a></h2><h3 id="1-导入echarts"><a href="#1-导入echarts" class="headerlink" title="1.导入echarts"></a>1.导入echarts</h3><p>指令如下：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">import</span>  echarts <span class="token keyword">from</span> <span class="token string">'echarts'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以上指令只只适用5.0版本以下的Echats</p><p>以下提供解决方案：</p><ol><li><blockquote><p>引入echarts的地方改为</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> echarts <span class="token keyword">from</span> <span class="token string">'echarts'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote></li><li><blockquote><p>webpack的DefinePlugin里加入如下字段</p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 此处根据情况自行修改，结果为boolean就行，true的情况下会多一些日志信息</span><span class="token string">'__DEV__'</span><span class="token punctuation">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>node_env <span class="token operator">===</span> <span class="token string">'dev'</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> un echarts <span class="token operator">&amp;&amp;</span> <span class="token function">npm</span> i -E echarts@3.7.2 zrender@3.6.3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote></li></ol><h3 id="2-为Echarts准备一个具有大小-宽高-的Dom"><a href="#2-为Echarts准备一个具有大小-宽高-的Dom" class="headerlink" title="2.为Echarts准备一个具有大小(宽高)的Dom"></a><em>2.为Echarts准备一个具有大小(宽高)的Dom</em></h3><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"main"</span> style<span class="token operator">=</span><span class="token string">"width: 600px;height:400px;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-基于准备好的dom，初始化echarts实例"><a href="#3-基于准备好的dom，初始化echarts实例" class="headerlink" title="3.基于准备好的dom，初始化echarts实例"></a><em>3.基于准备好的dom，初始化echarts实例</em></h3><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> myChart <span class="token operator">=</span> echarts<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'main'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4-准备数据和配置项"><a href="#4-准备数据和配置项" class="headerlink" title="4.准备数据和配置项"></a>4.准备数据和配置项</h3><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            title<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                text<span class="token punctuation">:</span> <span class="token string">'ECharts 入门示例'</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            tooltip<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            legend<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                data<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'销量'</span><span class="token punctuation">]</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            xAxis<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                data<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"衬衫"</span><span class="token punctuation">,</span><span class="token string">"羊毛衫"</span><span class="token punctuation">,</span><span class="token string">"雪纺衫"</span><span class="token punctuation">,</span><span class="token string">"裤子"</span><span class="token punctuation">,</span><span class="token string">"高跟鞋"</span><span class="token punctuation">,</span><span class="token string">"袜子"</span><span class="token punctuation">]</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            yAxis<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            series<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                name<span class="token punctuation">:</span> <span class="token string">'销量'</span><span class="token punctuation">,</span>                type<span class="token punctuation">:</span> <span class="token string">'bar'</span><span class="token punctuation">,</span>                data<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">]</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-展示数据-即调用里面的myCharts函数"><a href="#5-展示数据-即调用里面的myCharts函数" class="headerlink" title="5.展示数据:即调用里面的myCharts函数"></a>5.<em>展示数据:即调用里面的myCharts函数</em></h3><pre class="line-numbers language-js"><code class="language-js">myChart<span class="token punctuation">.</span><span class="token function">setOption</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="6-完整代码：-vue文件"><a href="#6-完整代码：-vue文件" class="headerlink" title="6.完整代码：.vue文件"></a>6.完整代码：.vue文件</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- &lt;h3>面包屑导航区域&lt;/h3> --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-breadcrumb</span> <span class="token attr-name">separator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-breadcrumb-item</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>&amp;#123; path: <span class="token punctuation">'</span>/home<span class="token punctuation">'</span> &amp;#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-breadcrumb-item</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-breadcrumb-item</span><span class="token punctuation">></span></span>数据统计<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-breadcrumb-item</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-breadcrumb-item</span><span class="token punctuation">></span></span>数据报表<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-breadcrumb-item</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-breadcrumb</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 卡片视图区域 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-card</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 2.为Echarts准备一个具有大小(宽高)的Dom --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">600</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-card</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token comment" spellcheck="true">// 1.导入echarts</span><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> echarts <span class="token keyword">from</span> <span class="token string">'echarts'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//此时，页面上的元素已经被渲染完毕了</span>    <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 3.基于准备好的dom，初始化echarts实例</span>        <span class="token keyword">var</span> myChart <span class="token operator">=</span> echarts<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'main'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 4.准备数据和配置项</span>         <span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            title<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                text<span class="token punctuation">:</span> <span class="token string">'ECharts 入门示例'</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            tooltip<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            legend<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                data<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'销量'</span><span class="token punctuation">]</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            xAxis<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                data<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"衬衫"</span><span class="token punctuation">,</span><span class="token string">"羊毛衫"</span><span class="token punctuation">,</span><span class="token string">"雪纺衫"</span><span class="token punctuation">,</span><span class="token string">"裤子"</span><span class="token punctuation">,</span><span class="token string">"高跟鞋"</span><span class="token punctuation">,</span><span class="token string">"袜子"</span><span class="token punctuation">]</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            yAxis<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            series<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                name<span class="token punctuation">:</span> <span class="token string">'销量'</span><span class="token punctuation">,</span>                type<span class="token punctuation">:</span> <span class="token string">'bar'</span><span class="token punctuation">,</span>                data<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">]</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//5.展示数据:即调用里面的myCharts函数</span>       myChart<span class="token punctuation">.</span><span class="token function">setOption</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>less<span class="token punctuation">"</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="从后台调取数据进行展示：折线图"><a href="#从后台调取数据进行展示：折线图" class="headerlink" title="从后台调取数据进行展示：折线图"></a>从后台调取数据进行展示：折线图</h3><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">&lt;</span>h3<span class="token operator">></span>面包屑导航区域<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span> <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>breadcrumb separator<span class="token operator">=</span><span class="token string">"/"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>breadcrumb<span class="token operator">-</span>item <span class="token punctuation">:</span>to<span class="token operator">=</span><span class="token string">"&amp;#123; path: '/home' &amp;#125;"</span><span class="token operator">></span>首页<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>breadcrumb<span class="token operator">-</span>item<span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>breadcrumb<span class="token operator">-</span>item<span class="token operator">></span>数据统计<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>breadcrumb<span class="token operator">-</span>item<span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>breadcrumb<span class="token operator">-</span>item<span class="token operator">></span>数据报表<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>breadcrumb<span class="token operator">-</span>item<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>breadcrumb<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 卡片视图区域 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>card<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token number">2</span><span class="token punctuation">.</span><span class="token function">为Echarts准备一个具有大小</span><span class="token punctuation">(</span>宽高<span class="token punctuation">)</span>的Dom <span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"main"</span> style<span class="token operator">=</span><span class="token string">"width: 750px;height:400px;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>card<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token comment" spellcheck="true">// 1.导入echarts</span><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> echarts <span class="token keyword">from</span> <span class="token string">'echarts'</span><span class="token comment" spellcheck="true">//用于数据合并</span><span class="token keyword">import</span> _ <span class="token keyword">from</span> <span class="token string">'lodash'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//需要跟请求的折线图数据合并的options</span>      options<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        title<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          text<span class="token punctuation">:</span> <span class="token string">'用户来源'</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        tooltip<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          trigger<span class="token punctuation">:</span> <span class="token string">'axis'</span><span class="token punctuation">,</span>          axisPointer<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            type<span class="token punctuation">:</span> <span class="token string">'cross'</span><span class="token punctuation">,</span>            label<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>              backgroundColor<span class="token punctuation">:</span> <span class="token string">'#E9EEF3'</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        grid<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          left<span class="token punctuation">:</span> <span class="token string">'3%'</span><span class="token punctuation">,</span>          right<span class="token punctuation">:</span> <span class="token string">'4%'</span><span class="token punctuation">,</span>          bottom<span class="token punctuation">:</span> <span class="token string">'3%'</span><span class="token punctuation">,</span>          containLabel<span class="token punctuation">:</span> <span class="token boolean">true</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        xAxis<span class="token punctuation">:</span> <span class="token punctuation">[</span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            boundaryGap<span class="token punctuation">:</span> <span class="token boolean">false</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        yAxis<span class="token punctuation">:</span> <span class="token punctuation">[</span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            type<span class="token punctuation">:</span> <span class="token string">'value'</span>          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token punctuation">]</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//此时，页面上的元素已经被渲染完毕了</span>   <span class="token keyword">async</span> <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 3.基于准备好的dom，初始化echarts实例</span>        <span class="token keyword">var</span> myChart <span class="token operator">=</span> echarts<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'main'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>data<span class="token punctuation">:</span> res<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'reports/type/1'</span><span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'获取折线图数据失败'</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 4.准备数据和配置项</span>        <span class="token comment" spellcheck="true">// 合并数据</span>        <span class="token keyword">const</span> result <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//5.展示数据:即调用里面的myCharts函数</span>       myChart<span class="token punctuation">.</span><span class="token function">setOption</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>style lang<span class="token operator">=</span><span class="token string">"less"</span> scoped<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><ol><li>将原先的options删除</li><li>直接展示调取的res.data，没有鼠标跟随效果，故不可行</li><li>故要添加新的options,目的是实现鼠标跟随效果</li><li> 要用lodash合并res.data和新的options，命名为result，成为最终的options</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue电商 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>参数的拼接</title>
      <link href="/2021/03/05/can-shu-de-pin-jie/"/>
      <url>/2021/03/05/can-shu-de-pin-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="参数的拼接"><a href="#参数的拼接" class="headerlink" title="参数的拼接"></a>参数的拼接</h2><h3 id="小程序传参"><a href="#小程序传参" class="headerlink" title="小程序传参"></a>小程序传参</h3><ul><li>绑定点击事件,传参,传item.zzp_id</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>u-card</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navItemClick(item.zzp_id)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>u-card</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>接参数：用id去接，跳转的url上加一个带上id</li></ul><pre class="line-numbers language-js"><code class="language-js"><span class="token function">navItemClick</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'./goods/goods?zzp_id='</span> <span class="token operator">+</span> id<span class="token punctuation">)</span>        uni<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            url<span class="token punctuation">:</span> <span class="token string">'./goods/goods?zzp_id='</span> <span class="token operator">+</span> id        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'点击了'</span><span class="token operator">+</span>id<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>用跳转到的组件onload接参数,option.zzp_id就是传递的参数。</li></ul><pre class="line-numbers language-js"><code class="language-js"><span class="token function">onLoad</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getGoods</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>zzp_id<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>zzp_id<span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>zzp_id<span class="token operator">=</span>options<span class="token punctuation">.</span>zzp_id    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>zzp_id<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>调用函数去接</li></ul><pre class="line-numbers language-js"><code class="language-js"><span class="token function">getGoods</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        project<span class="token punctuation">.</span><span class="token function">getDetail</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>detail <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>detail<span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>api里面传参数id,在后面手动拼接。</li></ul><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getDetail</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">await</span> request<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`/zzp/client/getProduct/`</span></span> <span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>用‘+’拼接。</p><h3 id="Web端拼接："><a href="#Web端拼接：" class="headerlink" title="Web端拼接："></a>Web端拼接：</h3><ul><li>在data定义条件</li></ul><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//查询参数对象</span>      queryInfo<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        query<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        pagenum<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        pagesize<span class="token punctuation">:</span> <span class="token number">10</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>      goodslist<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      total<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>定义函数，url用对象{params：}拼接</li></ul><pre class="line-numbers language-js"><code class="language-js">  methods<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>   <span class="token keyword">async</span> <span class="token function">getGoodsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//根据分页获取对应的商品列表</span>     <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>data<span class="token punctuation">:</span>res<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'goods'</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>params<span class="token punctuation">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>queryInfo<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'获取商品列表失败'</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">'获取商品列表数据成功'</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>goodslist <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>goods        <span class="token keyword">this</span><span class="token punctuation">.</span>total <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>total            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js"><code class="language-js">  <span class="token keyword">async</span>  <span class="token function">getParentCateList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>data<span class="token punctuation">:</span>res<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'categories'</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>params<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>type<span class="token punctuation">:</span><span class="token number">2</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'获取父级类数据失败'</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>parentCateList<span class="token operator">=</span> res<span class="token punctuation">.</span>data    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="拼接请求的到的数据：因为不是字符串，则不能用””-和之前的简单的拼接方法，要用"><a href="#拼接请求的到的数据：因为不是字符串，则不能用””-和之前的简单的拼接方法，要用" class="headerlink" title="拼接请求的到的数据：因为不是字符串，则不能用””,和之前的简单的拼接方法，要用${}"></a>拼接请求的到的数据：因为不是字符串，则不能用””,和之前的简单的拼接方法，要用${}</h3><p>示例如下:</p><pre class="line-numbers language-js"><code class="language-js"> <span class="token keyword">async</span> <span class="token function">removeRightById</span><span class="token punctuation">(</span>role<span class="token punctuation">,</span>rightId<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//弹框提示是否删除</span>          <span class="token comment" spellcheck="true">//弹框提示是否提示</span>     <span class="token keyword">const</span> confirmResult <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$confirm</span><span class="token punctuation">(</span><span class="token string">'此操作将永久删除该用户, 是否继续?'</span><span class="token punctuation">,</span> <span class="token string">'提示'</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          confirmButtonText<span class="token punctuation">:</span> <span class="token string">'确定'</span><span class="token punctuation">,</span>          cancelButtonText<span class="token punctuation">:</span> <span class="token string">'取消'</span><span class="token punctuation">,</span>          type<span class="token punctuation">:</span> <span class="token string">'warning'</span>          <span class="token comment" spellcheck="true">// catch是捕获错误的</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=</span><span class="token operator">></span>        err<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// 如果用户确定删除，则返回值为字符串confirm</span>        <span class="token comment" spellcheck="true">// 如果用户取消了删除，则返回值为字符串cancel</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>confirmResult <span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>confirmResult <span class="token operator">!==</span> <span class="token string">'confirm'</span> <span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">'已经取消删除'</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// console.log(确定删除)</span>       <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>data<span class="token punctuation">:</span> res<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`roles/$&amp;#123;role.id&amp;#125;/rights/$&amp;#123;rightId&amp;#125;`</span></span><span class="token punctuation">)</span>       <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>           <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'删除权限失败！'</span><span class="token punctuation">)</span>       <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>       <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRolesList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>抽离后：</p><pre class="line-numbers language-js"><code class="language-js"> <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>data<span class="token punctuation">:</span> res<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`roles/$&amp;#123;role.id&amp;#125;/rights/$&amp;#123;rightId&amp;#125;`</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="多者结合："><a href="#多者结合：" class="headerlink" title="多者结合："></a>多者结合：</h3><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">async</span> <span class="token function">allotRights</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> keys <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>treeRef<span class="token punctuation">.</span><span class="token function">getCheckedKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>treeRef<span class="token punctuation">.</span><span class="token function">getHalfCheckedKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">]</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//以英文逗号进行拼接</span>        <span class="token keyword">const</span> idStr <span class="token operator">=</span> keys<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span>      <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>data<span class="token punctuation">:</span>res<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`roles/$&amp;#123;this.roleId&amp;#125;/rights`</span></span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>rids<span class="token punctuation">:</span>idStr<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'分配权限失败！'</span><span class="token punctuation">)</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">'分配权限成功！'</span><span class="token punctuation">)</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRolesList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>SetRightDialogVisible <span class="token operator">=</span><span class="token boolean">false</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue电商 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>作用域插槽</title>
      <link href="/2021/03/02/zuo-yong-yu-cha-cao/"/>
      <url>/2021/03/02/zuo-yong-yu-cha-cao/</url>
      
        <content type="html"><![CDATA[<h3 id="作用域插槽的作用-相当于扩展一列中表格的内容，还可以拿到一行数据，实质是拿到数组中的一组数据。"><a href="#作用域插槽的作用-相当于扩展一列中表格的内容，还可以拿到一行数据，实质是拿到数组中的一组数据。" class="headerlink" title="作用域插槽的作用:相当于扩展一列中表格的内容，还可以拿到一行数据，实质是拿到数组中的一组数据。"></a>作用域插槽的作用:相当于扩展一列中表格的内容，还可以拿到一行数据，实质是拿到数组中的一组数据。</h3><p>拿到改行的数据，改行是针对elment-UI里面的卡片视图里面的，el-table标签中的el-table-column标签，就是拿到el-table-column行的数据。</p><h3 id="作用域插槽的写法"><a href="#作用域插槽的写法" class="headerlink" title="作用域插槽的写法"></a>作用域插槽的写法</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-card</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box-card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table</span> <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userlist<span class="token punctuation">"</span></span> <span class="token attr-name">border</span> <span class="token attr-name">stripe</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>姓名<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>邮箱<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>电话<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mobile<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>角色<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>role_name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>状态<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mg_state<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scope<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 拿到这一行的数据 --></span>            <span class="token comment" spellcheck="true">&lt;!-- &amp;#123;&amp;#123;scope.row&amp;#125;&amp;#125; --></span>            <span class="token comment" spellcheck="true">&lt;!-- &amp;#123;&amp;#123; scope.row&amp;#125;&amp;#125; --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-switch</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scope.row.mg_state<span class="token punctuation">"</span></span> <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>usesrStateChanged(scope.row)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-switch</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table</span> <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userlist<span class="token punctuation">"</span></span> <span class="token attr-name">border</span> <span class="token attr-name">stripe</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-card</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="项目实质示例：可以用于数据绑定"><a href="#项目实质示例：可以用于数据绑定" class="headerlink" title="项目实质示例：可以用于数据绑定"></a>项目实质示例：可以用于数据绑定</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 卡片视图 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-card</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table</span> <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rightsList<span class="token punctuation">"</span></span> <span class="token attr-name">border</span> <span class="token attr-name">stripe</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>序号<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>权限名称<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>authName<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>路径<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>path<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>权限等级<span class="token punctuation">"</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>level<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scope<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tag</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scope.row.level <span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token punctuation">'</span>0<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>一级<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tag</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tag</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scope.row.level <span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token punctuation">'</span>1<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>二级<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tag</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tag</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>warning<span class="token punctuation">"</span></span> <span class="token attr-name">v-else</span><span class="token punctuation">></span></span>三级<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tag</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-card</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue电商 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Token</title>
      <link href="/2021/02/25/token/"/>
      <url>/2021/02/25/token/</url>
      
        <content type="html"><![CDATA[<h3 id="路由守卫："><a href="#路由守卫：" class="headerlink" title="路由守卫："></a>路由守卫：</h3><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//挂载路由导航守卫</span>router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>to<span class="token punctuation">,</span><span class="token keyword">from</span><span class="token punctuation">,</span>next<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//to 将要访问的路径</span>  <span class="token comment" spellcheck="true">// from 代表从哪个路径跳转过来</span>  <span class="token comment" spellcheck="true">// next 是一个函数，表示放行</span>  <span class="token comment" spellcheck="true">// next() 放行  next(./login)强制跳转</span>  <span class="token comment" spellcheck="true">// 如果用户访问的是登录页面，直接放行</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>path <span class="token operator">===</span> <span class="token string">'/login'</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//如果访问的不是登录页面，而是有权限的页面，要先拿到token，根据是否有token，强制跳转。</span>  <span class="token comment" spellcheck="true">//获取token，因为tokne已经存到sesionstorge里面了</span>  <span class="token keyword">const</span> tokenStr <span class="token operator">=</span> window<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'token'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// 如果存的这个token为空，则强制跳转到登录页面</span>  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>tokenStr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token string">'./login'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//如果token值不为空，则直接放行。</span>  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue电商 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Element-Ui之首页布局</title>
      <link href="/2021/02/25/element-ui-zhi-shou-ye-bu-ju/"/>
      <url>/2021/02/25/element-ui-zhi-shou-ye-bu-ju/</url>
      
        <content type="html"><![CDATA[<h3 id="首页布局：container容器。"><a href="#首页布局：container容器。" class="headerlink" title="首页布局：container容器。"></a>首页布局：container容器。</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-container</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 头部区域 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-header</span><span class="token punctuation">></span></span>Header<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-header</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 页面主体区域 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-container</span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 侧边栏 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-aside</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Aside<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-aside</span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 右侧内容主题 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-main</span><span class="token punctuation">></span></span>Main<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-main</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-container</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-container</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="左侧菜单布局：NavMenu导航菜单。"><a href="#左侧菜单布局：NavMenu导航菜单。" class="headerlink" title="左侧菜单布局：NavMenu导航菜单。"></a>左侧菜单布局：NavMenu导航菜单。</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-aside</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 侧边栏菜单区域 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-menu</span> <span class="token attr-name">background-color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#333744<span class="token punctuation">"</span></span> <span class="token attr-name">text-color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#fff<span class="token punctuation">"</span></span> <span class="token attr-name">active-text-color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#ffd04b<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token comment" spellcheck="true">&lt;!-- 一级菜单 --></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-submenu</span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 一级菜单的模板区域 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token comment" spellcheck="true">&lt;!-- 图标 --></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-location<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>              <span class="token comment" spellcheck="true">&lt;!-- 文本 --></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>导航一<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 二级菜单 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-menu-item</span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1-4-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!-- 图标 --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>el-icon-location<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!-- 文本 --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>导航一<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-menu-item</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-submenu</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-menu</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-aside</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue电商 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>退出功能的实现</title>
      <link href="/2021/02/24/tui-chu-gong-neng-de-shi-xian/"/>
      <url>/2021/02/24/tui-chu-gong-neng-de-shi-xian/</url>
      
        <content type="html"><![CDATA[<h3 id="退出："><a href="#退出：" class="headerlink" title="退出："></a>退出：</h3><ul><li><p>退出功能实现原理：把token干掉。</p><blockquote><p>基于token的方式实现退出比较简单，只需要销毁本地token即可。这样，后续的请求就不会携带token，必须重新登录生成一个新的token之后才可以访问页面。</p></blockquote></li><li><p>怎么清除token？</p><blockquote><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//清空token</span>window<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//跳转到登录页</span><span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue电商 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue前端工程化之Vue脚手架</title>
      <link href="/2021/02/22/vue-qian-duan-gong-cheng-hua-zhi-vue-jiao-shou-jia/"/>
      <url>/2021/02/22/vue-qian-duan-gong-cheng-hua-zhi-vue-jiao-shou-jia/</url>
      
        <content type="html"><![CDATA[<h3 id="前端工程化"><a href="#前端工程化" class="headerlink" title="前端工程化"></a>前端工程化</h3><p>前端工程化又称前端模块化。</p><h3 id="Vue脚手架的介绍和安装："><a href="#Vue脚手架的介绍和安装：" class="headerlink" title="Vue脚手架的介绍和安装："></a>Vue脚手架的介绍和安装：</h3><ol><li><p>Vue脚手架用于快速生成Vue项目框架。</p></li><li><p>安装指令：3.x版本</p><blockquote><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g @vue/cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote></li></ol><h3 id="基于交互式命令行的方式，创建新版Vue项目"><a href="#基于交互式命令行的方式，创建新版Vue项目" class="headerlink" title="基于交互式命令行的方式，创建新版Vue项目"></a>基于交互式命令行的方式，创建新版Vue项目</h3><blockquote><p>注：另外两种:一是基于图形化界面的方式创建Vue项目和二是基于2.x的旧版本创建 的旧版本的vue项目在此不做演示。</p></blockquote><ul><li><p>win+r输入cmd进入交互式页面，输入一下指令创建项目,注意项目名要为中文。</p><blockquote><pre class="line-numbers language-bash"><code class="language-bash">vue create my-project<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://imgchr.com/i/y7L5qJ"><img src="https://s3.ax1x.com/2021/02/22/y7L5qJ.png" alt="y7L5qJ.png"></a></p></blockquote></li><li><p>如上图所示，选择手动配置，用空格勾选，勾选结果如下：</p><p><a href="https://imgchr.com/i/y7OZLQ"><img src="https://s3.ax1x.com/2021/02/22/y7OZLQ.png" alt="y7OZLQ.png"></a></p></li><li><p>选择2.x的Vue</p><p><a href="https://imgchr.com/i/y7XCm4"><img src="https://s3.ax1x.com/2021/02/22/y7XCm4.png" alt="y7XCm4.png"></a></p></li><li><p>后续操作做以下选择：</p><p><a href="https://imgchr.com/i/yHC9oD"><img src="https://s3.ax1x.com/2021/02/22/yHC9oD.png" alt="yHC9oD.png"></a></p></li><li><p>最后是否保存模板以供下次使用：这个随意。</p><p><a href="https://imgchr.com/i/y7X5NR"><img src="https://s3.ax1x.com/2021/02/22/y7X5NR.png" alt="y7X5NR.png"></a></p></li><li><p>enter后完成创建。</p><p>有时安装会出现报错，可能是网络问题，重新创建即可。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git之提交代码</title>
      <link href="/2021/02/22/git-zhi-ti-jiao-dai-ma/"/>
      <url>/2021/02/22/git-zhi-ti-jiao-dai-ma/</url>
      
        <content type="html"><![CDATA[<h3 id="Typora使用小tips："><a href="#Typora使用小tips：" class="headerlink" title="Typora使用小tips："></a>Typora使用小tips：</h3><p>指令前加$是只针对Linux的指令。</p><h3 id="指令：首次"><a href="#指令：首次" class="headerlink" title="指令：首次"></a>指令：首次</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cd</span> existing_folder                        <span class="token comment" spellcheck="true"># cd到项目的目录</span><span class="token function">git</span> init                                  <span class="token comment" spellcheck="true"># 初始化本地仓库</span><span class="token function">git</span> remote add origin giturl　            <span class="token comment" spellcheck="true"># 本地添加远程，giturl是ssh形式</span><span class="token function">git</span> add <span class="token keyword">.</span>　                               <span class="token comment" spellcheck="true"># 将本目录下所有文件加到索引区</span><span class="token function">git</span> commit　                              <span class="token comment" spellcheck="true"># 将索引区数据加到历史区</span><span class="token function">git</span> push -u origin master　               <span class="token comment" spellcheck="true">#上传master分支 。//如果这里提示没有权限，是因为你的ssh配置有问题，需要重新配置</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="指令：修改后以后每次提交：-u是针对Gitlab"><a href="#指令：修改后以后每次提交：-u是针对Gitlab" class="headerlink" title="指令：修改后以后每次提交：-u是针对Gitlab"></a>指令：修改后以后每次提交：-u是针对Gitlab</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> add <span class="token keyword">.</span>               <span class="token comment" spellcheck="true"># 全部添加。</span><span class="token function">git</span> commit -u <span class="token string">'做了一次修改'</span>     <span class="token comment" spellcheck="true"># ''里面的内容是自定义的，可以为你每次修订的内容，但不能重复。</span><span class="token function">git</span> push                <span class="token comment" spellcheck="true"># 用git push更新</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="指令：修改后以后每次提交：-m是针对Github"><a href="#指令：修改后以后每次提交：-m是针对Github" class="headerlink" title="指令：修改后以后每次提交：-m是针对Github"></a>指令：修改后以后每次提交：-m是针对Github</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> add <span class="token keyword">.</span>               <span class="token comment" spellcheck="true"># 全部添加。</span><span class="token function">git</span> commit -m <span class="token string">'做了一次修改'</span>     <span class="token comment" spellcheck="true"># ''里面的内容是自定义的，可以为你每次修订的内容，但不能重复。</span><span class="token function">git</span> push                <span class="token comment" spellcheck="true"># 用git push更新</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：</p><pre class="line-numbers language-bash"><code class="language-bash"> <span class="token comment" spellcheck="true">#github首次提交代码</span> <span class="token function">git</span> push --set-upstream origin login<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></blockquote><h3 id="创建-切换分支："><a href="#创建-切换分支：" class="headerlink" title="创建+切换分支："></a>创建+切换分支：</h3><p>创建分支的同时切换到该分支上，命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> checkout -b <span class="token punctuation">[</span>branch name<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>git checkout -b [branch name] 的效果相当于以下两步操作：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> branch <span class="token punctuation">[</span>branch name<span class="token punctuation">]</span><span class="token function">git</span> checkout <span class="token punctuation">[</span>branch name<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>查看文件状态：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> status<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>提交所有代码</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> add <span class="token keyword">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再次查看状态：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> status<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此时本地有一个新分支，但没有同步到远程，用以下指令同步，第一次的指令如下(假如新建立的分支为user)：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># origin为云端仓库的别名，云端仓库用user分支保存</span><span class="token function">git</span> push -u origin user<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>以后更新只需要用以下指令即可：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> push<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="合并分支打主分支：master"><a href="#合并分支打主分支：master" class="headerlink" title="合并分支打主分支：master"></a>合并分支打主分支：master</h3><p>更新本地的master代码，示例：将user代码合并到主分支main分支</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> merge user<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>推送到远程：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> push<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="切换到远程分支"><a href="#切换到远程分支" class="headerlink" title="切换到远程分支"></a>切换到远程分支</h3><p><a href="https://blog.csdn.net/astonishqft/article/details/83029490">博客链接</a></p><p>查看远程所有分支</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">git</span> branch -a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>git branch不带参数,列出本地已经存在的分支，并且在当前分支的前面用*标记，加上-a参数可以查看所有分支列表，包括本地和远程，远程分支一般会用红色字体标记出来</p><ul><li><p>dev<br>master<br>remotes/origin/HEAD -&gt; origin/master<br>remotes/origin/master<br>remotes/origin/release/caigou_v1.0</p></li><li><p>新建分支并切换到指定分支</p></li><li><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> checkout -b dev origin/release/caigou_v1.0<span class="token function">git</span> checkout -b 本地分支名 origin/远程分支名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code></code></pre></li></ul><p>该命令可以将远程git仓库里的指定分支拉取到本地，这样就在本地新建了一个dev分支，并和指定的远程分支release/caigou_v1.0关联了起来。</p><p>Switched to a new branch ‘dev’<br>Branch ‘dev’ set up to track remote branch ‘release/caigou_v1.0’ from ‘origin’<br>原文链接：<a href="https://blog.csdn.net/astonishqft/article/details/83029490">https://blog.csdn.net/astonishqft/article/details/83029490</a></p><pre><code>### Git创建文件:使用git bash```bashtouch README.mdgit add README.md</code></pre>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.Vue的封装</title>
      <link href="/2021/02/02/vue-de-feng-zhuang/"/>
      <url>/2021/02/02/vue-de-feng-zhuang/</url>
      
        <content type="html"><![CDATA[<h2 id="vue的文件的封装："><a href="#vue的文件的封装：" class="headerlink" title=".vue的文件的封装："></a>.vue的文件的封装：</h2><h3 id="1-首先，创建的实例对象："><a href="#1-首先，创建的实例对象：" class="headerlink" title="1.首先，创建的实例对象："></a>1.首先，创建的实例对象：</h3><p>main.js文件里面创建如下实例：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> app <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>app没有什么实质性的用处，其实可以省略const app，简写为以下：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>html文件里面的script标签里面的内容，直接放到新建的对象里面。</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    el<span class="token punctuation">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span>    data<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        message<span class="token punctuation">:</span><span class="token string">'Hello Webpack'</span><span class="token punctuation">,</span>        name<span class="token punctuation">:</span><span class="token string">'coderwhy'</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">btnClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>index.html剩余的内容：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span><span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span>message<span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>        &lt;button @click= "btnClick">按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span><span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span>name<span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来，public文件夹中的index.html文件中的div里面的东西不需要动，前提是要做一个.vue的封装。</p><p>index.html只保存如下代码：<strong>一般是不会改的。</strong></p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--和Vue对应--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-定义一个template属性：Vue内部会把template里面的内容和index-html里面的div替换，即template会替换el。"><a href="#2-定义一个template属性：Vue内部会把template里面的内容和index-html里面的div替换，即template会替换el。" class="headerlink" title="2.定义一个template属性：Vue内部会把template里面的内容和index.html里面的div替换，即template会替换el。"></a>2.定义一个template属性：Vue内部会把template里面的内容和index.html里面的div替换，即template会替换el。</h3><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    el<span class="token punctuation">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span>        template<span class="token punctuation">:</span><span class="token template-string"><span class="token string">`        &lt;div>        &lt;h2>&amp;#123;&amp;#123;message&amp;#125;&amp;#125;&lt;/h2>        &lt;button @click= "btnClick">按钮&lt;/button>        &lt;h2>&amp;#123;&amp;#123;name&amp;#125;&amp;#125;&lt;/h2>        &lt;/div>`</span></span>    <span class="token punctuation">,</span>    data<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        message<span class="token punctuation">:</span><span class="token string">'Hello Webpack'</span><span class="token punctuation">,</span>        name<span class="token punctuation">:</span><span class="token string">'coderwhy'</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">btnClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第一，Vue实例中写太多template,会显得臃肿,需单独创建一个对象：后面这个对象会演变为一个组件，即.vue文件。</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    template<span class="token punctuation">:</span><span class="token template-string"><span class="token string">`        &lt;div>        &lt;h2>&amp;#123;&amp;#123;message&amp;#125;&amp;#125;&lt;/h2>        &lt;button @click= "btnClick">按钮&lt;/button>        &lt;h2>&amp;#123;&amp;#123;name&amp;#125;&amp;#125;&lt;/h2>        &lt;/div>`</span></span>    <span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>删减上面template内容后的mian.js文件的创建实例剩余部分：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    el<span class="token punctuation">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span>    template<span class="token punctuation">:</span><span class="token template-string"><span class="token string">``</span></span><span class="token punctuation">,</span>    data<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        message<span class="token punctuation">:</span><span class="token string">'Hello Webpack'</span><span class="token punctuation">,</span>        name<span class="token punctuation">:</span><span class="token string">'coderwhy'</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">btnClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同理，data的里面内容也可以转到组件template当中,全部抽取到新建立的一个App对象当中</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    template<span class="token punctuation">:</span><span class="token template-string"><span class="token string">`        &lt;div>        &lt;h2>&amp;#123;&amp;#123;message&amp;#125;&amp;#125;&lt;/h2>        &lt;button @click= "btnClick">按钮&lt;/button>        &lt;h2>&amp;#123;&amp;#123;name&amp;#125;&amp;#125;&lt;/h2>        &lt;/div>`</span></span><span class="token punctuation">,</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//转换过来多了个return，因为是data()函数</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>         message<span class="token punctuation">:</span><span class="token string">'Hello Webpack'</span><span class="token punctuation">,</span>         name<span class="token punctuation">:</span>'coderwhy     <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>           <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同理methods也可以抽取到App对象当中：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    template<span class="token punctuation">:</span><span class="token template-string"><span class="token string">`        &lt;div>        &lt;h2>&amp;#123;&amp;#123;message&amp;#125;&amp;#125;&lt;/h2>        &lt;button @click= "btnClick">按钮&lt;/button>        &lt;h2>&amp;#123;&amp;#123;name&amp;#125;&amp;#125;&lt;/h2>        &lt;/div>,`</span></span><span class="token punctuation">,</span>        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//转换过来多了个return，因为是data()函数</span>         <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                message<span class="token punctuation">:</span><span class="token string">'Hello Webpack'</span><span class="token punctuation">,</span>                 name<span class="token punctuation">:</span><span class="token string">'coderwhy'</span>                 <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token punctuation">,</span>         methods<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                 <span class="token function">btnClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                     <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上App对象实则是个组件，只需在Vue实例里面去注册这个App，在Vue里面注册组件，在template里面使用组件。在Vue实例里面找到</p><p>这个组件，然后解析template。</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    el<span class="token punctuation">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">//在这个了用app，就在template中用了一个组件，先注册一个组件，再在template用了这个组件</span>    template<span class="token punctuation">:</span><span class="token string">'&lt;App/>'</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">//这个&lt;App/>就代替了那个index.html中的&lt;div>&lt;/div></span><span class="token comment" spellcheck="true">//在components注册App,这就把整个组件封装进来了</span>    components<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        App    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建一个app.js文件，放入刚刚创立的App对象：</p><p>把App常量的东西剪掉，复制到app.js中,相当于把组件放到了app.js中</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">default</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//以下为模板代码</span>    template<span class="token punctuation">:</span><span class="token template-string"><span class="token string">`        &lt;div>        &lt;h2>&amp;#123;&amp;#123;message&amp;#125;&amp;#125;&lt;/h2>        &lt;button @click= "btnClick">按钮&lt;/button>        &lt;h2>&amp;#123;&amp;#123;name&amp;#125;&amp;#125;&lt;/h2>        &lt;/div>,`</span></span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">//以下为js代码</span>        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//转换过来多了个return，因为是data()函数</span>         <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                 message<span class="token punctuation">:</span><span class="token string">'Hello Webpack'</span><span class="token punctuation">,</span>                 name<span class="token punctuation">:</span><span class="token string">'coderwhy'</span>                 <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>           <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        methods<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                 <span class="token function">btnClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>main.js中的直接引入新键的app.js就行</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> App <span class="token operator">=</span>变成以下引入：<span class="token comment" spellcheck="true">//default导入不需要大括号x，因为只有一个变量</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">"./vue/app"</span><span class="token comment" spellcheck="true">//因为默认是default，App其实是新命名的变量名，而App其实就是一个对象赋值得来的，</span><span class="token comment" spellcheck="true">//export default 直接&amp;#123;&amp;#125;</span><span class="token comment" spellcheck="true">//省略了变量名App</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但改实例对象赋值的变量的，里面的模板和js代码没有分离。</p><h3 id="3-创建App-vue文件，把template和js代码分离。"><a href="#3-创建App-vue文件，把template和js代码分离。" class="headerlink" title="3.创建App.vue文件，把template和js代码分离。"></a>3.创建App.vue文件，把template和js代码分离。</h3><p>新建app.vue组件，把app.js里面的东西分离，效果如下。</p><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">></span>       <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>h2 <span class="token keyword">class</span> <span class="token operator">=</span> <span class="token string">"title"</span><span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>message<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>        <span class="token operator">&lt;</span>button @click<span class="token operator">=</span> <span class="token string">"btnClick"</span><span class="token operator">></span>按钮<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span>h2<span class="token operator">></span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>name<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">//export default一个对象</span>        <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//这是自带的</span>        name<span class="token punctuation">:</span><span class="token string">"App"</span>，         <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//转换过来多了个return，因为是data()函数</span>         <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                 message<span class="token punctuation">:</span><span class="token string">'Hello Webpack'</span><span class="token punctuation">,</span>                 name<span class="token punctuation">:</span><span class="token string">'coderwhy'</span>                 <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>，        methods<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                 <span class="token function">btnClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>style scoped<span class="token operator">></span>    <span class="token punctuation">.</span>title<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        color<span class="token punctuation">:</span>green<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在main.js中导导入：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./vue/App.vue'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>创建的App.vue无法加载，要配置node。在在webpack.config.js里面配置。node_modules里面的东西。</p><h3 id="以上就是-vue文件封装的全过程，实现组件化开发。"><a href="#以上就是-vue文件封装的全过程，实现组件化开发。" class="headerlink" title="以上就是.vue文件封装的全过程，实现组件化开发。"></a>以上就是.vue文件封装的全过程，实现组件化开发。</h3>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue最简单的实例</title>
      <link href="/2021/02/02/vue-zui-jian-dan-de-shi-li/"/>
      <url>/2021/02/02/vue-zui-jian-dan-de-shi-li/</url>
      
        <content type="html"><![CDATA[<h2 id="声明式编程："><a href="#声明式编程：" class="headerlink" title="声明式编程："></a>声明式编程：</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 声明式渲染 --></span><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入vue，也可以直接下载其文件，引用 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--在new vue的过程中，就上面的div交给这个vue管理了，会解析其语法，如&amp;#123;&amp;#123;message&amp;#125;&amp;#125;，它会发现其中有一个变量message,然后去找data里面找该语法有没有被定义，如果被定义，变量的值会直接显示--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span> message <span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token comment" spellcheck="true">//在vue.js里面肯定定义了一个类名叫vue，所以下面直接创建实例对象</span>    <span class="token comment" spellcheck="true">//es6一般不用var，var有很多缺陷，没有变量的作用域</span>    <span class="token comment" spellcheck="true">//实例中也可以添加组件即：</span>    <span class="token comment" spellcheck="true">//如以下形式：</span>    <span class="token comment" spellcheck="true">// template：</span>    <span class="token comment" spellcheck="true">// &lt;div></span>    <span class="token comment" spellcheck="true">// &lt;h2>&amp;#123;&amp;#123;message&amp;#125;&amp;#125;&lt;/h2></span>    <span class="token comment" spellcheck="true">// &lt;button @click= "btnClick">按钮&lt;/button></span>    <span class="token comment" spellcheck="true">// &lt;h2>&amp;#123;&amp;#123;name&amp;#125;&amp;#125;&lt;/h2></span>    <span class="token comment" spellcheck="true">// &lt;/div></span>      <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//用于挂载要管理的元素</span>        el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">//在new vue的过程中，就上面的div交给这个#app管理了，会解析其语法，它会发现其中有一个变量message,交给了vue实例管理</span>    <span class="token comment" spellcheck="true">//它会找这个message在data里面有没有被定义，如果被定义了，他会在div中的&amp;#123;&amp;#123;message&amp;#125;&amp;#125;中予以显示</span>        data<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//定义数据</span>          message<span class="token punctuation">:</span> <span class="token string">'Hello Vue!'</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop_伪分布式搭建</title>
      <link href="/2021/01/25/hadoop-wei-fen-bu-shi-da-jian/"/>
      <url>/2021/01/25/hadoop-wei-fen-bu-shi-da-jian/</url>
      
        <content type="html"><![CDATA[<h3 id="准备工作："><a href="#准备工作：" class="headerlink" title="准备工作："></a>准备工作：</h3><p>使用Hadoop，要关闭防火墙。</p><h3 id="安装jdk：Java虚拟机"><a href="#安装jdk：Java虚拟机" class="headerlink" title="安装jdk：Java虚拟机"></a>安装jdk：Java虚拟机</h3><p>凡是Java开发的程序，必须运行在Java虚拟机上面。Hadoop就是Java开发的。</p><p>解压命令：</p><pre class="line-numbers language-bash"><code class="language-bash">-C是指定目录，~表示的是当前目录，演示的是root目录<span class="token function">tar</span> zxvf 文件名 -C ~<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>创建软连接：把刚解压的文件重新定义一个名字。l</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">ln</span> -s jdk1.8.0_171/ jdk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配置环境变量：如果不配，敲Java命令，没法调用jdk</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">vi</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>拉到最低：做以下配置</p><pre class="line-numbers language-bash"><code class="language-bash">//指定路径  //指定架包<span class="token function">export</span> JAVA_HOME<span class="token operator">=</span>/root/jdk<span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$JAVA_HOME</span>/bin:<span class="token variable">$PATH</span><span class="token function">export</span> CLASSPATH<span class="token operator">=</span><span class="token variable">$JAVA_HOME</span>/lib/dt.jar:<span class="token variable">$JAVA_HOME</span>/lib/tools.jar:.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>source一下，使得环境变量生效</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">source</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入Java，会有Java指令</p><p>查看Java版本:</p><pre class="line-numbers language-bash"><code class="language-bash">java -version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>确定oppenssl version,openssh-server是否安装，设置免密钥。一般centos7是默认安装的。</p><pre class="line-numbers language-bash"><code class="language-bash">openssl version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果没有安装：解压，创建软连接，再配置环境变量。</p><pre class="line-numbers language-bash"><code class="language-bash">yum -y <span class="token function">install</span> openssl<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="安装Hadoop："><a href="#安装Hadoop：" class="headerlink" title="安装Hadoop："></a>安装Hadoop：</h3><p>解压</p><pre class="line-numbers language-bash"><code class="language-bash">-C是指定目录，~表示的是当前目录，演示的是root目录<span class="token function">tar</span> zxvf 文件名 -C ~<span class="token function">tar</span> zxvf hadoop-2.7.3.tar.gz  -C ~<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>创建软链接</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">ln</span> -s hadoop-2.7.3 hadoop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后配置环境变量：去配置Java的环境变量里面去加：</p><pre class="line-numbers language-shell"><code class="language-shell">export HADOOP_HOME=/root/hadoopexport PATH=$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$PATH<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>使环境变量生效：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">source</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入hdfs查看是否Hadoop是否安装好。</p><h3 id="修改Hadoop的配置：进入目录进行配置，要看你安装的目录。"><a href="#修改Hadoop的配置：进入目录进行配置，要看你安装的目录。" class="headerlink" title="修改Hadoop的配置：进入目录进行配置，要看你安装的目录。"></a>修改Hadoop的配置：进入目录进行配置，要看你安装的目录。</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cd</span> /root/hadoop/etc/hadoop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## 查看里面全部是配置文件</span><span class="token function">ls</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>配置Javahome:因为Hadoop是运行在Java虚拟机上的。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">vi</span> hadoop-env.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://imgchr.com/i/sbZVr8"><img src="https://s3.ax1x.com/2021/01/24/sbZVr8.png" alt="sbZVr8.png"></a></p><p>$JAVA_HONE改为 /root/jdk</p><h3 id="伪分布模式："><a href="#伪分布模式：" class="headerlink" title="伪分布模式："></a>伪分布模式：</h3><p>配置主机名映射：</p><p>1.配置主机名：vi  /etc/hosts 结尾加上</p><p><a href="https://imgchr.com/i/sqd3id"><img src="https://s3.ax1x.com/2021/01/25/sqd3id.png" alt="sqd3id.png"></a></p><pre class="line-numbers language-bash"><code class="language-bash">192.168.126.10 PTC1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2,通过ssh-key生成一个RSA的密钥对：配药匙</p><pre class="line-numbers language-bash"><code class="language-bash">ssh-keygen -t rsa -P <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3.公钥追加到~ssh/authorized_keys文件中:把药匙给你的机器名</p><pre class="line-numbers language-bash"><code class="language-bash">ssh-copy-id -i ~/.ssh/id_rsa.pub PTC1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>yes，并输入root密码。</p><h3 id="测试免密钥是否成功"><a href="#测试免密钥是否成功" class="headerlink" title="测试免密钥是否成功"></a>测试免密钥是否成功</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">ssh</span> PTC1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://imgchr.com/i/sqdwdg"><img src="https://s3.ax1x.com/2021/01/25/sqdwdg.png" alt="sqdwdg.png"></a></p><p>退出：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token keyword">exit</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h3><p>配置hdfs-site.xml</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">### 路径</span><span class="token function">cd</span> /root/hadoop/etc/hadoop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">vi</span> hdfs-site.xml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="configuration标签里面配：数据冗余是指数据在存储器中的不必要的多次重复存储。"><a href="#configuration标签里面配：数据冗余是指数据在存储器中的不必要的多次重复存储。" class="headerlink" title="configuration标签里面配：数据冗余是指数据在存储器中的不必要的多次重复存储。"></a>configuration标签里面配：数据冗余是指数据在存储器中的不必要的多次重复存储。</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--表示数据块的冗余度,默认是：3--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.replication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="配置core-site-xml"><a href="#配置core-site-xml" class="headerlink" title="配置core-site.xml"></a>配置core-site.xml</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--配置NameNode地址。9000是RPC通信端口--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>fs.defaultFS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hdfs://192.168.171.101:8020<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--HDFS数据库保存在Linux的哪个目录，默认值时linux的tmp目录--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hadoop.tmp.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/root/hadoop/tmp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置mapred-site.xml:默认没有：cp mapred-site.xml.template mapred-site.xml(复制一个)</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--MR运行的框架--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapreduce.framework.name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>yarn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置 yarn-site.xml</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--Yarn的主节点RM的位置--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.resourcemanager.hostname<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>192.168.171.101<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--MapReduce运行方式：shuffle洗牌--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.aux-services<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>mapreduce_shuffle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>格式化:只能一次</p><pre class="line-numbers language-bash"><code class="language-bash"> $ hdfs namenode -format<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://imgchr.com/i/sqdWeU"><img src="https://s3.ax1x.com/2021/01/25/sqdWeU.png" alt="sqdWeU.png"></a></p><pre class="line-numbers language-bash"><code class="language-bash">$ start-all.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>访问 ip:50070</p><p>出现hadoop，说明ok</p><h2 id="踩坑一：vi-hadoop-env-sh-这里要改成-JAVA-HOME-的绝对路径"><a href="#踩坑一：vi-hadoop-env-sh-这里要改成-JAVA-HOME-的绝对路径" class="headerlink" title="踩坑一：vi hadoop-env.sh 这里要改成 JAVA_HOME 的绝对路径"></a>踩坑一：vi hadoop-env.sh 这里要改成 JAVA_HOME 的绝对路径</h2><h2 id="踩坑二：-如果无法访问，但是本机-curl-可以访问，说明是防火墙没有关闭"><a href="#踩坑二：-如果无法访问，但是本机-curl-可以访问，说明是防火墙没有关闭" class="headerlink" title="踩坑二： 如果无法访问，但是本机  curl 可以访问，说明是防火墙没有关闭"></a>踩坑二： 如果无法访问，但是本机  curl 可以访问，说明是防火墙没有关闭</h2><p>centos7上面不可用 iptables</p><p>用的<code>firewalld</code></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 查看防火墙状态</span>systemctl status firewalld<span class="token comment" spellcheck="true"># 关闭防火墙</span>systemctl stop firewalld<span class="token comment" spellcheck="true"># 禁止开机启动</span>systemctl disable firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS_盒子模型</title>
      <link href="/2021/01/25/css-he-zi-mo-xing/"/>
      <url>/2021/01/25/css-he-zi-mo-xing/</url>
      
        <content type="html"><![CDATA[<h2 id="盒子模型：四部分-任何一个元素都可以设置为一个盒子。"><a href="#盒子模型：四部分-任何一个元素都可以设置为一个盒子。" class="headerlink" title="盒子模型：四部分,任何一个元素都可以设置为一个盒子。"></a>盒子模型：四部分,任何一个元素都可以设置为一个盒子。</h2><pre class="line-numbers language-css"><code class="language-css">/* <span class="token number">1.</span>外边距：margin   <span class="token number">2.</span>盒子壁：border   <span class="token number">3.</span>内边距： padding   <span class="token number">4.</span>盒子内容： width + height  margin + border + padding + （content=width +height<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="盒子模型图："><a href="#盒子模型图：" class="headerlink" title="盒子模型图："></a>盒子模型图：</h2><p><a href="https://imgchr.com/i/sW863V"><img src="https://s3.ax1x.com/2021/01/20/sW863V.jpg" alt="sW863V.jpg"></a></p><h2 id="两盒子嵌套，让里面的盒子居中："><a href="#两盒子嵌套，让里面的盒子居中：" class="headerlink" title="两盒子嵌套，让里面的盒子居中："></a>两盒子嵌套，让里面的盒子居中：</h2><pre class="line-numbers language-css"><code class="language-css">/*<span class="token number">1.</span>两个盒子content一样大<span class="token punctuation">;</span>  <span class="token number">2.</span>外面的盒子套padding；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="Padding-margin-border-width是复合值"><a href="#Padding-margin-border-width是复合值" class="headerlink" title="Padding,margin,border-width是复合值:"></a>Padding,margin,border-width是复合值:</h3><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*1.四个值顺时针：上右下左   2.三个值：上，左右，下   3.两个值：上下，左右*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="盒子模型计算：可看控制台查看"><a href="#盒子模型计算：可看控制台查看" class="headerlink" title="盒子模型计算：可看控制台查看"></a>盒子模型计算：可看控制台查看</h2><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*计算可视区域的大小*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="通过margin调整标签之间的距离："><a href="#通过margin调整标签之间的距离：" class="headerlink" title="通过margin调整标签之间的距离："></a>通过margin调整标签之间的距离：</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-css"><code class="language-css"><span class="token number">.</span>demo&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">10</span>px&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token number">.</span>demo<span class="token number">2</span>&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token number">10</span>px&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="定位："><a href="#定位：" class="headerlink" title="定位："></a>定位：</h2><pre class="line-numbers language-css"><code class="language-css">&lt;div>&lt;/div><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-css"><code class="language-css">div &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*可定位*/</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*左边线距左边距*/</span>    left：<span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*右边线距上边距*/</span>  <span class="token comment" spellcheck="true">/*  right：100px;*/</span>    <span class="token comment" spellcheck="true">/*上边线距上边距*/</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="body具有天生的magin-8px过。"><a href="#body具有天生的magin-8px过。" class="headerlink" title="body具有天生的magin:8px过。"></a>body具有天生的magin:8px过。</h4><h2 id="绝对定位与相对定位："><a href="#绝对定位与相对定位：" class="headerlink" title="绝对定位与相对定位："></a>绝对定位与相对定位：</h2><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*  1.层模型：绝对定位，就脱离原来的位置定位  2.相对定位：保留原来的位置定位*/</span><span class="token comment" spellcheck="true">/*带有绝对定位的盒子相对于最近的有定位的父级进行定位，如果没有，那么相对于文档进行定位*/</span><span class="token comment" spellcheck="true">/*带有相对定位的盒子相对于他原来的位置进行定位*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="定位原则："><a href="#定位原则：" class="headerlink" title="定位原则："></a>定位原则：</h3><pre class="line-numbers language-css"><code class="language-css">/*要定位的盒子设置位absolutely，被定位的盒子设置为relative作为参照。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="固定定位：应用于广告；"><a href="#固定定位：应用于广告；" class="headerlink" title="固定定位：应用于广告；"></a>固定定位：应用于广告；</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css"><code class="language-css">div&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">50</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="块级元素居中："><a href="#块级元素居中：" class="headerlink" title="块级元素居中："></a>块级元素居中：</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="设置一个块级元素居中："><a href="#设置一个块级元素居中：" class="headerlink" title="设置一个块级元素居中："></a>设置一个块级元素居中：</h2><pre class="line-numbers language-css"><code class="language-css">div&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*差半个身位，因为上面设置的是相对于左顶点的百分之五十*/</span>    <span class="token comment" spellcheck="true">/*需要设置负值*/</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">50</span>px<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> -<span class="token number">50</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="浮动：-行排列"><a href="#浮动：-行排列" class="headerlink" title="浮动： 行排列"></a>浮动： 行排列</h3><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*1.脱标：指定位置(动）*/</span><span class="token comment" spellcheck="true">/*2.浮动的盒子不保留原先的位置*/</span><span class="token property">float</span><span class="token punctuation">:</span>left/none/right<span class="token comment" spellcheck="true">/*浮动流按一行排列*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Flex布局："><a href="#Flex布局：" class="headerlink" title="Flex布局："></a>Flex布局：</h2><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*通过给父级添加flex属性，来控制子集*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*容器属性：**父级，元素是跟着主轴排列- flex-direction：row/row-reverse/column/column-reverse决定项目的排列方向- flex-wrap：决定如何换行- flex-flow：上面两个的简写- justify-content：决定主轴的对齐方式（水平方向）- align-items：决定交叉轴的对齐方式（垂直方向）- align-content：决定多根轴线的对齐方式**项目属性：**- order：定义项目的排列顺序- flex-grow：定义项目的放大比例- flex-shrink：定义项目的缩小比例- flex-basis：定义项目占的主轴长度- flex：flex-grow、flex-shrink、flex-basis简写，默认0 1 auto- align-self：单个项目的对齐方式，覆盖原来的父元素的align-items*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS_CSS盒子</title>
      <link href="/2021/01/25/css-css-he-zi/"/>
      <url>/2021/01/25/css-css-he-zi/</url>
      
        <content type="html"><![CDATA[<h2 id="CSS盒子："><a href="#CSS盒子：" class="headerlink" title="CSS盒子："></a>CSS盒子：</h2><h4 id="简单的一个盒子："><a href="#简单的一个盒子：" class="headerlink" title="简单的一个盒子："></a>简单的一个盒子：</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-CSS"><code class="language-CSS">div&#123;    width: 100px;    height: 100px;    border: 1px solid black;    border-width: 10px;&#125;    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="文本的一些CSS属性："><a href="#文本的一些CSS属性：" class="headerlink" title="文本的一些CSS属性："></a>文本的一些CSS属性：</h3><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*文本对齐方式*/</span><span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*文本所占高度*/</span>hline-height：<span class="token number">200</span>px<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*首行缩进(缩进几个字体)*/</span><span class="token property">text-indent</span><span class="token punctuation">:</span> <span class="token number">2</span>em<span class="token punctuation">;</span><span class="token number">1</span>em=<span class="token number">1</span>font-size<span class="token comment" spellcheck="true">/*中划线/没有线/underline*/</span><span class="token property">text-decoration</span><span class="token punctuation">:</span> line-through/none/underline<span class="token comment" spellcheck="true">/*设置光标*/</span><span class="token property">cursor</span><span class="token punctuation">:</span> pointer/help<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="居中的实现方式-前提为一行文本"><a href="#居中的实现方式-前提为一行文本" class="headerlink" title="居中的实现方式:前提为一行文本"></a>居中的实现方式:前提为一行文本</h3><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*垂直居中：文本高度等于盒子高度*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="盒子属性："><a href="#盒子属性：" class="headerlink" title="盒子属性："></a>盒子属性：</h3><pre class="line-numbers language-css"><code class="language-css"><span class="token property">border-radius</span><span class="token punctuation">:</span><span class="token number">10</span>px<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS_一些常用属性</title>
      <link href="/2021/01/25/css-yi-xie-chang-yong-shu-xing/"/>
      <url>/2021/01/25/css-yi-xie-chang-yong-shu-xing/</url>
      
        <content type="html"><![CDATA[<h3 id="CSS常用属性：属性的值用时，可以直接菜鸟教程查"><a href="#CSS常用属性：属性的值用时，可以直接菜鸟教程查" class="headerlink" title="CSS常用属性：属性的值用时，可以直接菜鸟教程查"></a>CSS常用属性：属性的值用时，可以直接菜鸟教程查</h3><h3 id="设置字体的属性：默认高度16px"><a href="#设置字体的属性：默认高度16px" class="headerlink" title="设置字体的属性：默认高度16px"></a>设置字体的属性：默认高度16px</h3><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*字体大小，设置的是高*/</span><span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">50</span>px；<span class="token comment" spellcheck="true">/*加粗,值可以写数字*/</span><span class="token property">font-weight</span><span class="token punctuation">:</span>bolder；<span class="token comment" spellcheck="true">/*斜体*/</span><span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*乔布斯发明的字体*/</span><span class="token property">font-family</span><span class="token punctuation">:</span> arial/cursive<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*颜色:1.英文单词（不用于开发）2.颜色代码3.颜色函数*/</span><span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#ff4400</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="颜色代码-十六进制-：红绿蓝拼接到一起"><a href="#颜色代码-十六进制-：红绿蓝拼接到一起" class="headerlink" title="颜色代码(十六进制)：红绿蓝拼接到一起"></a>颜色代码(十六进制)：红绿蓝拼接到一起</h4><pre class="line-numbers language-css"><code class="language-css">r                            g                   b<span class="token number">00</span>-ff                      <span class="token number">00</span>-ff               <span class="token number">00</span>-ff   <span class="token hexcode">#000000</span> 黑<span class="token hexcode">#ff0000</span> 红<span class="token punctuation">(</span>满<span class="token punctuation">)</span><span class="token hexcode">#00ff00</span> 绿<span class="token punctuation">(</span>满<span class="token punctuation">)</span><span class="token hexcode">#0000ff</span> 蓝<span class="token punctuation">(</span>满<span class="token punctuation">)</span><span class="token comment" spellcheck="true">/*保证每两位都是重复可以省些写成一个*/</span><span class="token hexcode">#ff4400</span>=><span class="token hexcode">#f40</span> 淘宝红<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="颜色函数：0-25"><a href="#颜色函数：0-25" class="headerlink" title="颜色函数：0-25"></a>颜色函数：0-25</h4><pre class="line-numbers language-css"><code class="language-css"><span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">255</span>,<span class="token number">255</span>,<span class="token number">255</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="盒子属性："><a href="#盒子属性：" class="headerlink" title="盒子属性："></a>盒子属性：</h3><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*复合属性*/</span><span class="token comment" spellcheck="true">/*border-width border-style border-color*/</span><span class="token comment" spellcheck="true">/*border-style:dashed*/</span><span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*每个边可以单独设置*/</span><span class="token property">border-left</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*透明色*/</span><span class="token property">border-left-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS_选择器</title>
      <link href="/2021/01/25/css-xuan-ze-qi/"/>
      <url>/2021/01/25/css-xuan-ze-qi/</url>
      
        <content type="html"><![CDATA[<h2 id="选择器：CSS选择HTML元素-以下标签加内容才能生效，然后灵活使用。"><a href="#选择器：CSS选择HTML元素-以下标签加内容才能生效，然后灵活使用。" class="headerlink" title="选择器：CSS选择HTML元素,以下标签加内容才能生效，然后灵活使用。"></a>选择器：CSS选择HTML元素,以下标签加内容才能生效，然后灵活使用。</h2><h3 id="1-id选择器：一一对应"><a href="#1-id选择器：一一对应" class="headerlink" title="1.id选择器：一一对应"></a>1.id选择器：一一对应</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>only<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css"><code class="language-css">#only &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-class选择器：多对多，一个class值对应多个元素-一种标签），一个元素-一种标签）可以有多个class的值"><a href="#2-class选择器：多对多，一个class值对应多个元素-一种标签），一个元素-一种标签）可以有多个class的值" class="headerlink" title="2.class选择器：多对多，一个class值对应多个元素(一种标签），一个元素(一种标签）可以有多个class的值"></a>2.class选择器：多对多，一个class值对应多个元素(一种标签），一个元素(一种标签）可以有多个class的值</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css"><code class="language-css"><span class="token number">.</span>demo &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="3-标签选择器："><a href="#3-标签选择器：" class="headerlink" title="3.标签选择器："></a>3.标签选择器：</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css"><code class="language-css">div &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span>red&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="4-通配符选择器："><a href="#4-通配符选择器：" class="headerlink" title="4.通配符选择器："></a>4.通配符选择器：</h3><pre class="line-numbers language-css"><code class="language-css">* &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="5-属性选择器："><a href="#5-属性选择器：" class="headerlink" title="5.属性选择器："></a>5.属性选择器：</h3><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*带id都选择*/</span>[id] &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> red；&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>[class] &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> red；&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>[id=<span class="token string">"only"</span>] &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> red；&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-important"><a href="#6-important" class="headerlink" title="6.!important:"></a>6.!important:</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-css"><code class="language-css">div&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    style="<span class="token property">background-color</span><span class="token punctuation">:</span>red!important<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="7-父子选择器-派生选择器：前提呈现父子关系，直接间接都可以，两个选择器隔一个空格。"><a href="#7-父子选择器-派生选择器：前提呈现父子关系，直接间接都可以，两个选择器隔一个空格。" class="headerlink" title="7.父子选择器/派生选择器：前提呈现父子关系，直接间接都可以，两个选择器隔一个空格。"></a>7.父子选择器/派生选择器：前提呈现父子关系，直接间接都可以，两个选择器隔一个空格。</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css"><code class="language-css">div span&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*或者*/</span><span class="token number">.</span>wrapper <span class="token number">.</span>box&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>     <span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="8-直接子元素选择器："><a href="#8-直接子元素选择器：" class="headerlink" title="8.直接子元素选择器："></a>8.直接子元素选择器：</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css"><code class="language-css">div > em&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>     <span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="9-并列选择器：多种标签对应一种选择器，两个选择器连着写"><a href="#9-并列选择器：多种标签对应一种选择器，两个选择器连着写" class="headerlink" title="9.并列选择器：多种标签对应一种选择器，两个选择器连着写"></a>9.并列选择器：多种标签对应一种选择器，两个选择器连着写</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css"><code class="language-css">div<span class="token number">.</span>demo&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="10-分组选择器：不同的选择器公用一个代码块"><a href="#10-分组选择器：不同的选择器公用一个代码块" class="headerlink" title="10.分组选择器：不同的选择器公用一个代码块"></a>10.分组选择器：不同的选择器公用一个代码块</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css"><code class="language-css">em,strong,span&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="11-伪类选择器："><a href="#11-伪类选择器：" class="headerlink" title="11.伪类选择器："></a>11.伪类选择器：</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="1-hover"><a href="#1-hover" class="headerlink" title="1.hover"></a>1.hover</h3><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*鼠标移上去变*/</span>a&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">textdecoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token property">a</span><span class="token punctuation">:</span>hover&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">textdecoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#f40</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">12</span>px<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span>bold<span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span>arial<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*圆角*/</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span><span class="token number">10</span>px<span class="token punctuation">;</span>  &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="选择器优选级："><a href="#选择器优选级：" class="headerlink" title="选择器优选级："></a>选择器优选级：</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--!important>行间样式>id>class|属性>标签选择器>通配符选择器--></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="CSS权重：只要写在同一行的选择器把他们相加。"><a href="#CSS权重：只要写在同一行的选择器把他们相加。" class="headerlink" title="CSS权重：只要写在同一行的选择器把他们相加。"></a>CSS权重：只要写在同一行的选择器把他们相加。</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--!important             Infinity(256进制)    行间样式                      1000    id                            100    class|属性|伪类选择器           10    标签|伪元素                      1    通配符                           0--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS_引入方式</title>
      <link href="/2021/01/25/css-yin-ru-fang-shi/"/>
      <url>/2021/01/25/css-yin-ru-fang-shi/</url>
      
        <content type="html"><![CDATA[<h2 id="CSS引入方式："><a href="#CSS引入方式：" class="headerlink" title="CSS引入方式："></a>CSS引入方式：</h2><h3 id="1-行间样式："><a href="#1-行间样式：" class="headerlink" title="1.行间样式："></a>1.行间样式：</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100</span>px <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100</span>px <span class="token property">background-color</span><span class="token punctuation">:</span>red</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-页面级CSS"><a href="#2-页面级CSS" class="headerlink" title="2.页面级CSS:"></a>2.页面级CSS:</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">        div&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100</span>px            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px            <span class="token property">background-color</span><span class="token punctuation">:</span> red        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-外部CSS文件："><a href="#3-外部CSS文件：" class="headerlink" title="3.外部CSS文件："></a>3.外部CSS文件：</h3><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*href 属性的值可以是任何有效文档的相对或绝对 URL，包括片段标识符和 JavaScript 代码段。*/</span>创建index<span class="token number">.</span>css,在head标签里面写&lt;link rel=<span class="token string">"stylesheet"</span> type=<span class="token string">"text/css"</span> href=<span class="token string">"index.css"</span>>&lt;/link>   div&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100</span>px            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px            <span class="token property">background-color</span><span class="token punctuation">:</span> red        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML_超文本标记语言</title>
      <link href="/2021/01/25/html-chao-wen-ben-biao-ji-yu-yan/"/>
      <url>/2021/01/25/html-chao-wen-ben-biao-ji-yu-yan/</url>
      
        <content type="html"><![CDATA[<h2 id="HTML-超文本标记语言-一般由一对一对标签组成。"><a href="#HTML-超文本标记语言-一般由一对一对标签组成。" class="headerlink" title="HTML:超文本标记语言,一般由一对一对标签组成。"></a>HTML:超文本标记语言,一般由一对一对标签组成。</h2><p><strong><em>最准确的网页设计思路是把网页分成三个层次，即：结构层(HTML)、表示层(CSS)、行为层(Javascrip</em>t)。</strong></p><h3 id="1-HTML标签：标签带有CSS属性；"><a href="#1-HTML标签：标签带有CSS属性；" class="headerlink" title="1,HTML标签：标签带有CSS属性；"></a>1,HTML标签：标签带有CSS属性；</h3><h4 id="1-基础标签："><a href="#1-基础标签：" class="headerlink" title="1.基础标签："></a>1.基础标签：</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--后面的属性是搜索引擎爬虫我们网页是关于什么的--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    根标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    写个浏览器看的，给浏览器设置的<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>标题标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    写给用户看的<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--万国码--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>utf-8<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 后面属性告诉搜索引擎爬虫我们网页是关于什么的 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>life<span class="token punctuation">"</span></span>     <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>life is shit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>    让内容成段展示<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>    1.有六级(h1到h6)    2.标题    3.加粗    4.成段展示<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>加粗又斜体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ins</span><span class="token punctuation">></span></span>    下划线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ins</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>del</span><span class="token punctuation">></span></span>    中划线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>del</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>address</span><span class="token punctuation">></span></span>    1.写地址    2.成段展示，且斜体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>address</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    1.分块    2.充当盒子    3.可捆绑操作    4.独占一行<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>    1.分块    2.充当盒子    3.可捆绑操作    4.可一行使用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--回车--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--水平线--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-高级标签"><a href="#2-高级标签" class="headerlink" title="2.高级标签:"></a>2.高级标签:</h4><h5 id="HTML编码："><a href="#HTML编码：" class="headerlink" title="HTML编码："></a>HTML编码：</h5><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--回车，空格：文本分隔符--></span><span class="token comment" spellcheck="true">&lt;!--html编码>      &lt;!--html编码的空格表达方式--></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span><span class="token comment" spellcheck="true">&lt;!--小于符--></span><span class="token entity" title="&lt;">&amp;lt;</span><span class="token comment" spellcheck="true">&lt;!--大于符--></span><span class="token entity" title="&gt;">&amp;gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="列表："><a href="#列表：" class="headerlink" title="列表："></a>列表：</h5><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--有序列表,可添加添加属type="a/A/1/i/I--></span><span class="token comment" spellcheck="true">&lt;!--添加reversed="reversed"属性，逆序--></span><span class="token comment" spellcheck="true">&lt;!--start="2"从第几个开始排序，只能数字--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--无序列表--></span><span class="token comment" spellcheck="true">&lt;!--type="disc/square/circle"--></span><span class="token comment" spellcheck="true">&lt;!--可用父子结构做导航栏，作为其骨架--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="图片："><a href="#图片：" class="headerlink" title="图片："></a>图片：</h5><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--src后面的是图片资源地址--></span><span class="token comment" spellcheck="true">&lt;!--height=500px,width="",一般只写一个--></span>1.网上的url2.本机的绝对路径3.本地的想对路径--><span class="token comment" spellcheck="true">&lt;!--图片占位符 alt="图片出错后显示的内容"--></span><span class="token comment" spellcheck="true">&lt;!--图片提示符 titile="这是什么图"--></span><span class="token comment" spellcheck="true">&lt;!--height="500px",wdith=""一般只写一个！--></span><span class="token comment" spellcheck="true">&lt;!--border=15px--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="a标签："><a href="#a标签：" class="headerlink" title="a标签："></a>a标签：</h5><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--1.超链接2.作为锚点记录位置 href="#id"3.打电话 na href="tel:123456" href="maito:2893313676@qq.com"4.协议限定符 href="javascript" 后面可以运行javascript代码src(Source)是指向物件的来源地址，是引入，在 img、script、iframe 等元素上使用； href(Hypertext Reference)是超文本引用，指向需要连结的地方，是与该页面有关联的，是引用，在 link和a 等元素上使用。src通常用作“拿取”（引入），href 用作 "连结前往"（引用）。--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="表单："><a href="#表单：" class="headerlink" title="表单："></a>表单：</h5><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--表单：能发送数据，向后端发送数据--></span>&lt;form method="get",action="">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>usename<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submut<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--单选框--></span>&lt;form method="get",action=""><span class="token comment" spellcheck="true">&lt;!--checked="checked" 默认选中--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>star<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>小明<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checked<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>star<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>小丽<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>star<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span>“小芳”</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--复选框--></span>&lt;form method="get",action="">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>star<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>小明<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>star<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>小丽<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>star<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span>“小芳”</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--下拉菜单--></span>&lt;form method="get",action=""> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slect</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>beijing<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>shanghai<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>tianjin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slect</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-总结：凡是带有inline的元素都有文字的特性-空格4px"><a href="#2-总结：凡是带有inline的元素都有文字的特性-空格4px" class="headerlink" title="2,总结：凡是带有inline的元素都有文字的特性(空格4px)"></a>2,总结：凡是带有inline的元素都有文字的特性(空格4px)</h2><h3 id="1-行级元素：inline"><a href="#1-行级元素：inline" class="headerlink" title="1.行级元素：inline"></a>1.行级元素：inline</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--1.内容决定元素所在位置(不换行)    2.不可以通过css改变宽高--></span>span strong em a del<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-块级元素：block"><a href="#2-块级元素：block" class="headerlink" title="2.块级元素：block"></a>2.块级元素：block</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--1.一个元素独占一行--></span><span class="token comment" spellcheck="true">&lt;!--2.可以通过css改变宽高--></span>div p ul li ol form address<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="3-行级块元素：inline-block"><a href="#3-行级块元素：inline-block" class="headerlink" title="3.行级块元素：inline-block"></a>3.行级块元素：inline-block</h3><pre class="line-numbers language-html"><code class="language-html">&lt;!--1.内容决定元素所在位置(不换行)    2.可以通过css改变大小<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="4-行转块："><a href="#4-行转块：" class="headerlink" title="4.行转块："></a>4.行转块：</h3><pre class="line-numbers language-css"><code class="language-css">span&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="5-块转行"><a href="#5-块转行" class="headerlink" title="5.块转行"></a>5.块转行</h3><pre class="line-numbers language-css"><code class="language-css">div&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    display：inline<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="3-自定义标签：用标签选择器来初始化标签"><a href="#3-自定义标签：用标签选择器来初始化标签" class="headerlink" title="3,自定义标签：用标签选择器来初始化标签"></a>3,自定义标签：用标签选择器来初始化标签</h2><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-css"><code class="language-css">em &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    font-style：normal<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span><span class="token hexcode">#f40</span><span class="token punctuation">;</span>    &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css"><code class="language-css">ul &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-通配符选择器可以初始化一切代码："><a href="#3-通配符选择器可以初始化一切代码：" class="headerlink" title="3.通配符选择器可以初始化一切代码："></a>3.通配符选择器可以初始化一切代码：</h3><pre class="line-numbers language-css"><code class="language-css">*&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建博客</title>
      <link href="/2021/01/17/da-jian-bo-ke/"/>
      <url>/2021/01/17/da-jian-bo-ke/</url>
      
        <content type="html"><![CDATA[<h2 id="准备工作："><a href="#准备工作：" class="headerlink" title="准备工作："></a>准备工作：</h2><h3 id="1-需要安装："><a href="#1-需要安装：" class="headerlink" title="1.需要安装："></a>1.需要安装：</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">### node</span><span class="token comment" spellcheck="true">### git</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-查看安装成功的指令："><a href="#2-查看安装成功的指令：" class="headerlink" title="2.查看安装成功的指令："></a>2.查看安装成功的指令：</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">### node -v</span><span class="token comment" spellcheck="true">### npm -v</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-GitHub注册账号，建库-配密钥："><a href="#3-GitHub注册账号，建库-配密钥：" class="headerlink" title="3.GitHub注册账号，建库,配密钥："></a>3.GitHub注册账号，建库,配密钥：</h3><h4 id="1-使用你的邮箱注册GitHub帐号"><a href="#1-使用你的邮箱注册GitHub帐号" class="headerlink" title="(1):使用你的邮箱注册GitHub帐号"></a>(1):使用你的邮箱注册GitHub帐号</h4><h4 id="2-创建库的名称的命名方式：用户名-github-io"><a href="#2-创建库的名称的命名方式：用户名-github-io" class="headerlink" title="(2):创建库的名称的命名方式：用户名.github.io"></a>(2):创建库的名称的命名方式：<strong>用户名</strong>.github.io</h4><h4 id="3-安装好Git后，右键“git-bash-here”进行一系列操作，以下是配置密钥的教程："><a href="#3-安装好Git后，右键“git-bash-here”进行一系列操作，以下是配置密钥的教程：" class="headerlink" title="(3):安装好Git后，右键“git bash here”进行一系列操作，以下是配置密钥的教程："></a>(3):安装好Git后，右键“git bash here”进行一系列操作，以下是配置密钥的教程：</h4><p>具体操作:如果是windows:</p><pre class="line-numbers language-bash"><code class="language-bash"> <span class="token comment" spellcheck="true">#一 .设置git的user name和email：</span>$ <span class="token function">git</span> config --global user.name <span class="token string">"test"</span> <span class="token comment" spellcheck="true">#换成github用户名</span>$ <span class="token function">git</span> config --global user.email <span class="token string">"test@qq.com"</span> <span class="token comment" spellcheck="true">#绑定GitHub的邮箱</span><span class="token comment" spellcheck="true">#二 生成密钥  ssh-keygen -t rsa -C “test@qq.com” #绑定GitHub的邮箱</span> 按3个回车，密码为空。<span class="token punctuation">(</span>不要输密码<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#生成目录是C:\Users\Administrator\.ssh（此处地址要视本机情况而定）</span><span class="token comment" spellcheck="true">#然后将得到的公匙添加到对应的git服务器当中(gitlab,github,gitee)</span><span class="token comment" spellcheck="true">#公钥id_rsa.pub设置到管理后台当前账号的ssh key中</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以本机为例子：</p><p><a href="https://imgchr.com/i/sk7huj"><img src="https://s3.ax1x.com/2021/01/05/sk7huj.png" alt="sk7huj.png"></a></p><p>此密钥要添加到github上</p><p>git bash上检验：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">ssh</span> git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://imgchr.com/i/sk7L2F"><img src="https://s3.ax1x.com/2021/01/05/sk7L2F.png" alt="sk7L2F.png"></a></p><h2 id="进入搭建："><a href="#进入搭建：" class="headerlink" title="进入搭建："></a>进入搭建：</h2><h3 id="1-建一个Blog文件夹，进入文件夹，在此文件夹打开命令行界面，输入以下指令安装Hexo："><a href="#1-建一个Blog文件夹，进入文件夹，在此文件夹打开命令行界面，输入以下指令安装Hexo：" class="headerlink" title="1.建一个Blog文件夹，进入文件夹，在此文件夹打开命令行界面，输入以下指令安装Hexo："></a>1.建一个Blog文件夹，进入文件夹，在此文件夹打开命令行界面，输入以下指令安装Hexo：</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="接着初始化初始化我们的博客，输入："><a href="#接着初始化初始化我们的博客，输入：" class="headerlink" title="接着初始化初始化我们的博客，输入："></a>接着初始化初始化我们的博客，输入：</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">### 会在Blog文件夹中创建一个blog文件夹</span>hexo init blog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="注：以上指令都是针对Blog文件夹，接下来指令是争对blog文件夹"><a href="#注：以上指令都是针对Blog文件夹，接下来指令是争对blog文件夹" class="headerlink" title="注：以上指令都是针对Blog文件夹，接下来指令是争对blog文件夹"></a>注：以上指令都是针对Blog文件夹，接下来指令是争对blog文件夹</h3><h3 id="2-输入以下指令，为检测博客雏形："><a href="#2-输入以下指令，为检测博客雏形：" class="headerlink" title="2.输入以下指令，为检测博客雏形："></a>2.输入以下指令，为检测博客雏形：</h3><pre class="line-numbers language-bash"><code class="language-bash">hexo new test_my_sitehexo ghexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="当运行出现本地网址时，切换到浏览器，输入对应的网址，查看博客模板。"><a href="#当运行出现本地网址时，切换到浏览器，输入对应的网址，查看博客模板。" class="headerlink" title="当运行出现本地网址时，切换到浏览器，输入对应的网址，查看博客模板。"></a>当运行出现本地网址时，切换到浏览器，输入对应的网址，查看博客模板。</h3><h4 id="Hexo相关指令："><a href="#Hexo相关指令：" class="headerlink" title="Hexo相关指令："></a>Hexo相关指令：</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo -g <span class="token comment" spellcheck="true">#安装Hexo</span><span class="token function">npm</span> update hexo -g <span class="token comment" spellcheck="true">#升级</span>hexo init <span class="token comment" spellcheck="true">#初始化博客</span>命令简写hexo n <span class="token string">"我的博客"</span> <span class="token operator">==</span> hexo new <span class="token string">"我的博客"</span> <span class="token comment" spellcheck="true">#新建文章</span>hexo g <span class="token operator">==</span> hexo generate <span class="token comment" spellcheck="true">#生成</span>hexo s <span class="token operator">==</span> hexo server <span class="token comment" spellcheck="true">#启动服务预览</span>hexo d <span class="token operator">==</span> hexo deploy <span class="token comment" spellcheck="true">#部署</span>hexo server <span class="token comment" spellcheck="true">#Hexo会监视文件变动并自动更新，无须重启服务器</span>hexo server -s <span class="token comment" spellcheck="true">#静态模式</span>hexo server -p 5000 <span class="token comment" spellcheck="true">#更改端口</span>hexo server -i 192.168.1.1 <span class="token comment" spellcheck="true">#自定义 IP</span>hexo clean <span class="token comment" spellcheck="true">#清除缓存，若是网页正常情况下可以忽略这条命令</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="修改配置文件，并推送网站"><a href="#修改配置文件，并推送网站" class="headerlink" title="修改配置文件，并推送网站"></a>修改配置文件，并推送网站</h2><p>上面只是在本地预览，接下来要做的就是就是推送网站，也就是发布网站，让我们的网站可以被更多的人访问。在设置之前，需要解释一个概念，在blog根目录里的_config.yml文件称为<strong>站点</strong>配置文件。</p><p>进入根目录里的themes文件夹，里面也有个_config.yml文件，这个称为<strong>主题</strong>配置文件(后面设置主题要用到)</p><h3 id="1-配置站点配置文件，后保存"><a href="#1-配置站点配置文件，后保存" class="headerlink" title="1.配置站点配置文件，后保存"></a>1.配置站点配置文件，后保存</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">### 翻到文末：</span><span class="token comment" spellcheck="true">### 修改格式和内容如下，注意冒号后有空格</span>deploy:  type: <span class="token function">git</span>  repo: 仓库中ssh下的网址  branch: master参考如下：<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-安装Git部署插件："><a href="#2-安装Git部署插件：" class="headerlink" title="2.安装Git部署插件："></a>2.安装Git部署插件：</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-推送："><a href="#3-推送：" class="headerlink" title="3.推送："></a>3.推送：</h3><pre class="line-numbers language-bash"><code class="language-bash">hexo clean hexo g hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="以上操作完成后，你博客已经上线，输入网址：xxxx-github-io即可查看，xxxx为你GitHub的用户名。"><a href="#以上操作完成后，你博客已经上线，输入网址：xxxx-github-io即可查看，xxxx为你GitHub的用户名。" class="headerlink" title="以上操作完成后，你博客已经上线，输入网址：xxxx.github.io即可查看，xxxx为你GitHub的用户名。"></a>以上操作完成后，你博客已经上线，输入网址：xxxx.github.io即可查看，xxxx为你GitHub的用户名。</h3><h2 id="买域名，并实现绑定："><a href="#买域名，并实现绑定：" class="headerlink" title="买域名，并实现绑定："></a>买域名，并实现绑定：</h2><h3 id="以腾讯云为实例："><a href="#以腾讯云为实例：" class="headerlink" title="以腾讯云为实例："></a>以腾讯云为实例：</h3><h3 id="1-购买域名网址："><a href="#1-购买域名网址：" class="headerlink" title="(1):  购买域名网址："></a>(1):  购买域名网址：</h3><h3 id="2-绑定域名网址：https-console-cloud-tencent-com-domain"><a href="#2-绑定域名网址：https-console-cloud-tencent-com-domain" class="headerlink" title="(2):  绑定域名网址：https://console.cloud.tencent.com/domain"></a>(2):  绑定域名网址：<a href="https://console.cloud.tencent.com/domain">https://console.cloud.tencent.com/domain</a></h3><h3 id="3-点击解析-，添加两条记录如下："><a href="#3-点击解析-，添加两条记录如下：" class="headerlink" title="(3)点击解析 ，添加两条记录如下："></a>(3)点击解析 ，添加两条记录如下：</h3><pre class="line-numbers language-bash"><code class="language-bash">@           CNAME         默认              xxxx.github.io                   600www         CNAME         默认              xxxx.github.io                   600  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="4-登录GitHub，进入之前创建的仓库，点击settings，设置Custom-domain，输入你的域名"><a href="#4-登录GitHub，进入之前创建的仓库，点击settings，设置Custom-domain，输入你的域名" class="headerlink" title="(4)登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名"></a>(4)登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名</h4><h4 id="5-第三步，进入本地博客文件夹-，进入blog-source目录下，创建一个记事本文件，输入你的域名，对，只要写进你自己的域名即可。如果带有www，那么以后访问的时候必须带有www完整的域名才可以访问，但如果不带有www，以后访问的时候带不带www都可以访问。所以建议，不要带有www。这里我还是写了www-不建议带有www"><a href="#5-第三步，进入本地博客文件夹-，进入blog-source目录下，创建一个记事本文件，输入你的域名，对，只要写进你自己的域名即可。如果带有www，那么以后访问的时候必须带有www完整的域名才可以访问，但如果不带有www，以后访问的时候带不带www都可以访问。所以建议，不要带有www。这里我还是写了www-不建议带有www" class="headerlink" title="(5)第三步，进入本地博客文件夹 ，进入blog/source目录下，创建一个记事本文件，输入你的域名，对，只要写进你自己的域名即可。如果带有www，那么以后访问的时候必须带有www完整的域名才可以访问，但如果不带有www，以后访问的时候带不带www都可以访问。所以建议，不要带有www。这里我还是写了www(不建议带有www):"></a>(5)第三步，进入本地博客文件夹 ，进入blog/source目录下，创建一个记事本文件，输入你的域名，对，只要写进你自己的域名即可。如果带有www，那么以后访问的时候必须带有www完整的域名才可以访问，但如果不带有www，以后访问的时候带不带www都可以访问。所以建议，不要带有www。这里我还是写了www(不建议带有www):</h4><h4 id="保存，命名为CNAME-注意没有后缀。"><a href="#保存，命名为CNAME-注意没有后缀。" class="headerlink" title="保存，命名为CNAME,注意没有后缀。"></a>保存，命名为CNAME,注意没有后缀。</h4><h4 id="完成这几步，进入blog目录中，按住shift键右击打开命令行，依次输入："><a href="#完成这几步，进入blog目录中，按住shift键右击打开命令行，依次输入：" class="headerlink" title="完成这几步，进入blog目录中，按住shift键右击打开命令行，依次输入："></a>完成这几步，进入blog目录中，按住shift键右击打开命令行，依次输入：</h4><pre class="line-numbers language-bash"><code class="language-bash">hexo cleanhexo ghexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="个性化设置："><a href="#个性化设置：" class="headerlink" title="个性化设置："></a>个性化设置：</h2><h3 id="1-拉主题："><a href="#1-拉主题：" class="headerlink" title="1.拉主题："></a>1.拉主题：</h3><h3 id="1-首先下载你想要的主题到themes里面你自定义命名的文件夹面-如果时that主题，最好就命名我that"><a href="#1-首先下载你想要的主题到themes里面你自定义命名的文件夹面-如果时that主题，最好就命名我that" class="headerlink" title="(1).首先下载你想要的主题到themes里面你自定义命名的文件夹面(如果时that主题，最好就命名我that)"></a>(1).首先下载你想要的主题到themes里面你自定义命名的文件夹面(如果时that主题，最好就命名我that)</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">### 使用git clone</span><span class="token function">git</span> clone https://github.com/iissnan/hexo-theme-next themes/next<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-上面的方式没有加速，很慢，建议直接去GitHub下载rar文件，解压手动加入对应路径"><a href="#2-上面的方式没有加速，很慢，建议直接去GitHub下载rar文件，解压手动加入对应路径" class="headerlink" title="(2).上面的方式没有加速，很慢，建议直接去GitHub下载rar文件，解压手动加入对应路径"></a>(2).上面的方式没有加速，很慢，建议直接去GitHub下载rar文件，解压手动加入对应路径</h3><h3 id="2-修改配置-进入themes里面的的文件-config-yml："><a href="#2-修改配置-进入themes里面的的文件-config-yml：" class="headerlink" title="2.修改配置,进入themes里面的的文件_config.yml："></a>2.修改配置,进入themes里面的的文件_config.yml：</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">### 把theme改成你自定义的文件夹名称(that,一般就为主题名)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="完成这几步后，再推送："><a href="#完成这几步后，再推送：" class="headerlink" title="完成这几步后，再推送："></a>完成这几步后，再推送：</h3><pre class="line-numbers language-bash"><code class="language-bash">hexo cleanhexo ghexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="发文章："><a href="#发文章：" class="headerlink" title="发文章："></a>发文章：</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">### 我们会发现在blog根目录下的source文件夹中的_post文件夹中多了一个 博客名字.md 文件,点进去编译即可</span>hexo n <span class="token string">"博客名字"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="最后再推送："><a href="#最后再推送：" class="headerlink" title="最后再推送："></a>最后再推送：</h3><pre class="line-numbers language-bash"><code class="language-bash">hexo cleanhexo ghexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
